{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a1ole\\\\Documents\\\\GitHub\\\\neo4jreact\\\\src\\\\MultipleSelect.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: 2\n  },\n  noLabel: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n}; // const names = [\n//   'Oliver Hansen',\n//   'Van Henry',\n//   'April Tucker',\n//   'Ralph Hubbard',\n//   'Omar Alexander',\n//   'Carlos Abbott',\n//   'Miriam Wagner',\n//   'Bradley Wilkerson',\n//   'Virginia Andrews',\n//   'Kelly Snyder',\n// ];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nexport default function MultipleSelect({\n  names\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = event => {\n    setPersonName(event.target.value);\n  };\n\n  const handleChangeMultiple = event => {\n    const {\n      options\n    } = event.target;\n    const value = [];\n\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n\n    setPersonName(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-mutiple-checkbox-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u043F\\u0440\\u0430\\u0432\\u043E\\u0447\\u043D\\u0438\\u043A\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-mutiple-checkbox-label\",\n    id: \"demo-mutiple-checkbox\",\n    multiple: true,\n    value: personName,\n    onChange: handleChange,\n    input: /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 18\n      }\n    }),\n    renderValue: selected => selected.join(', '),\n    MenuProps: MenuProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, console.log(names), this.props.names.map(name => /*#__PURE__*/React.createElement(MenuItem, {\n    key: name,\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: personName.indexOf(name) > -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/src/MultipleSelect.js"],"names":["React","clsx","makeStyles","useTheme","Input","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","Chip","useStyles","theme","formControl","margin","spacing","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","getStyles","name","personName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MultipleSelect","names","classes","setPersonName","useState","handleChange","event","target","value","handleChangeMultiple","options","i","l","length","selected","push","join","console","log","props","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,0BAArC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,KAAY;AACvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADG;AAEXC,IAAAA,QAAQ,EAAE,GAFC;AAGXC,IAAAA,QAAQ,EAAE;AAHC,GAD0B;AAMvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,QAAQ,EAAE;AAFL,GANgC;AAUvCC,EAAAA,IAAI,EAAE;AACJP,IAAAA,MAAM,EAAE;AADJ,GAViC;AAavCQ,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAEX,KAAK,CAACG,OAAN,CAAc,CAAd;AADJ;AAb8B,CAAZ,CAAD,CAA5B;AAkBA,MAAMS,WAAW,GAAG,EAApB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBC,gBAD1B;AAELK,MAAAA,KAAK,EAAE;AAFF;AADG;AADI,CAAlB,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,UAAzB,EAAqCrB,KAArC,EAA4C;AAC1C,SAAO;AACLsB,IAAAA,UAAU,EACRD,UAAU,CAACE,OAAX,CAAmBH,IAAnB,MAA6B,CAAC,CAA9B,GACIpB,KAAK,CAACwB,UAAN,CAAiBC,iBADrB,GAEIzB,KAAK,CAACwB,UAAN,CAAiBE;AAJlB,GAAP;AAMD;;AAED,eAAe,SAASC,cAAT,CAAwB;AAACC,EAAAA;AAAD,CAAxB,EAAiC;AAC9C,QAAMC,OAAO,GAAG9B,SAAS,EAAzB;AACA,QAAMC,KAAK,GAAGV,QAAQ,EAAtB;AACA,QAAM,CAAC+B,UAAD,EAAaS,aAAb,IAA8B3C,KAAK,CAAC4C,QAAN,CAAe,EAAf,CAApC;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BH,IAAAA,aAAa,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAIH,KAAD,IAAW;AACtC,UAAM;AAAEI,MAAAA;AAAF,QAAcJ,KAAK,CAACC,MAA1B;AACA,UAAMC,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCF,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,IAAI,CAAhD,EAAmD;AACjD,UAAID,OAAO,CAACC,CAAD,CAAP,CAAWG,QAAf,EAAyB;AACvBN,QAAAA,KAAK,CAACO,IAAN,CAAWL,OAAO,CAACC,CAAD,CAAP,CAAWH,KAAtB;AACD;AACF;;AACDL,IAAAA,aAAa,CAACK,KAAD,CAAb;AACD,GATD;;AAWA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEN,OAAO,CAAC5B,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qHADF,eAEE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,6BADV;AAEE,IAAA,EAAE,EAAC,uBAFL;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,KAAK,EAAEoB,UAJT;AAKE,IAAA,QAAQ,EAAEW,YALZ;AAME,IAAA,KAAK,eAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANT;AAOE,IAAA,WAAW,EAAGS,QAAD,IAAcA,QAAQ,CAACE,IAAT,CAAc,IAAd,CAP7B;AAQE,IAAA,SAAS,EAAE7B,SARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUC8B,OAAO,CAACC,GAAR,CAAYjB,KAAZ,CAVD,EAWG,KAAKkB,KAAL,CAAWlB,KAAX,CAAiBmB,GAAjB,CAAsB3B,IAAD,iBACpB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAf;AAAqB,IAAA,KAAK,EAAEA,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEC,UAAU,CAACE,OAAX,CAAmBH,IAAnB,IAA2B,CAAC,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEA,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADD,CAXH,CAFF,CADF,CADF;AAyBD","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n// const names = [\r\n//   'Oliver Hansen',\r\n//   'Van Henry',\r\n//   'April Tucker',\r\n//   'Ralph Hubbard',\r\n//   'Omar Alexander',\r\n//   'Carlos Abbott',\r\n//   'Miriam Wagner',\r\n//   'Bradley Wilkerson',\r\n//   'Virginia Andrews',\r\n//   'Kelly Snyder',\r\n// ];\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function MultipleSelect({names}) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    setPersonName(event.target.value);\r\n  };\r\n\r\n  const handleChangeMultiple = (event) => {\r\n    const { options } = event.target;\r\n    const value = [];\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n    setPersonName(value);\r\n  };\r\n\r\n  return (\r\n    <div>   \r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-mutiple-checkbox-label\">Добавить справочник</InputLabel>\r\n        <Select\r\n          labelId=\"demo-mutiple-checkbox-label\"\r\n          id=\"demo-mutiple-checkbox\"\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input />}\r\n          renderValue={(selected) => selected.join(', ')}\r\n          MenuProps={MenuProps}\r\n        >\r\n        {console.log(names)}\r\n          {this.props.names.map((name) => (\r\n            <MenuItem key={name} value={name}>\r\n              <Checkbox checked={personName.indexOf(name) > -1} />\r\n              <ListItemText primary={name} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl> \r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}