{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a1ole\\\\Documents\\\\GitHub\\\\neo4jreact\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport RequestHead from \"./RequestHead\";\n\nvar neo4j = require('neo4j-driver');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchAllDirs = () => {\n      const res = this.xfetch('MATCH (x:Dir) RETURN x');\n      this.setState(({\n        allDirs\n      }) => {\n        const newArr = [...allDirs, res.map(x => x.properties.description)];\n        return {\n          allDirs: newArr\n        };\n      });\n    };\n\n    this.xfetch = (query, params) => {\n      //const { mapCenter, startDate, endDate } = this.state;\n      const session = this.driver.session({\n        defaultAccessMode: neo4j.session.READ\n      });\n      const res = [];\n      session.run(query, params).then(result => {\n        console.log(result);\n        const record = result.records[0];\n        const businesses = record.get(\"businesses\");\n        const starsData = record.get(\"starsData\");\n        this.setState({\n          businesses,\n          starsData\n        });\n        session.close();\n      }).catch(e => {\n        // TODO: handle errors.\n        console.log(e);\n        session.close();\n      });\n    };\n\n    this.state = {\n      allDirs: [],\n      actDirs: [],\n      results: []\n    };\n    this.driver = neo4j.driver('bolt://localhost:7687', neo4j.auth.basic('neo4j', 'letmein'));\n    this.fetchAllDirs();\n  }\n\n  // addDir = input => {\n  //   this.setState(({ actDirs }) => {\n  //     const newArr = [...actDirs, input];\n  //     return {\n  //       actDirs: newArr\n  //     };\n  //   });\n  // };\n  render(data) {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RequestHead, {\n      allDirs: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/src/App.js"],"names":["React","Component","RequestHead","neo4j","require","App","constructor","props","fetchAllDirs","res","xfetch","setState","allDirs","newArr","map","x","properties","description","query","params","session","driver","defaultAccessMode","READ","run","then","result","console","log","record","records","businesses","get","starsData","close","catch","e","state","actDirs","results","auth","basic","render","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAmBnBC,YAnBmB,GAmBJ,MAAM;AACnB,YAAMC,GAAG,GAAG,KAAKC,MAAL,CAAY,wBAAZ,CAAZ;AAEA,WAAKC,QAAL,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAiB;AACzB,cAAMC,MAAM,GAAG,CAAC,GAAGD,OAAJ,EAAaH,GAAG,CAACK,GAAJ,CAAQC,CAAC,IAAIA,CAAC,CAACC,UAAF,CAAaC,WAA1B,CAAb,CAAf;AAEA,eAAO;AACLL,UAAAA,OAAO,EAAEC;AADJ,SAAP;AAGD,OANL;AASD,KA/BkB;;AAAA,SAkCnBH,MAlCmB,GAkCV,CAACQ,KAAD,EAAQC,MAAR,KAAmB;AAC1B;AACA,YAAMC,OAAO,GAAG,KAAKC,MAAL,CAAYD,OAAZ,CAAoB;AAAEE,QAAAA,iBAAiB,EAAEnB,KAAK,CAACiB,OAAN,CAAcG;AAAnC,OAApB,CAAhB;AACA,YAAMd,GAAG,GAAG,EAAZ;AACAW,MAAAA,OAAO,CACNI,GADD,CACKN,KADL,EACYC,MADZ,EAECM,IAFD,CAEMC,MAAM,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,cAAMG,MAAM,GAAGH,MAAM,CAACI,OAAP,CAAe,CAAf,CAAf;AACA,cAAMC,UAAU,GAAGF,MAAM,CAACG,GAAP,CAAW,YAAX,CAAnB;AACA,cAAMC,SAAS,GAAGJ,MAAM,CAACG,GAAP,CAAW,WAAX,CAAlB;AAEA,aAAKrB,QAAL,CAAc;AACZoB,UAAAA,UADY;AAEZE,UAAAA;AAFY,SAAd;AAIAb,QAAAA,OAAO,CAACc,KAAR;AACD,OAbD,EAcCC,KAdD,CAcOC,CAAC,IAAI;AACV;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,CAAZ;AACAhB,QAAAA,OAAO,CAACc,KAAR;AACD,OAlBD;AAoBD,KA1DkB;;AAGjB,SAAKG,KAAL,GAAa;AACXzB,MAAAA,OAAO,EAAE,EADE;AAEX0B,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAOA,SAAKlB,MAAL,GAAclB,KAAK,CAACkB,MAAN,CACZ,uBADY,EAEZlB,KAAK,CAACqC,IAAN,CAAWC,KAAX,CAAiB,OAAjB,EAA0B,SAA1B,CAFY,CAAd;AAKA,SAAKjC,YAAL;AAED;;AA2CD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEAkC,EAAAA,MAAM,CAACC,IAAD,EAAO;AACT,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAc,MAAA,OAAO,EAAEA,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADA;AAKH;;AA7EyB;;AAgF5B,eAAetC,GAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport './App.css';\r\nimport RequestHead from \"./RequestHead\";\r\n\r\nvar neo4j = require('neo4j-driver')\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      allDirs: [],\r\n      actDirs: [],\r\n      results: [],\r\n\r\n    };\r\n    \r\n    this.driver = neo4j.driver(\r\n      'bolt://localhost:7687',\r\n      neo4j.auth.basic('neo4j', 'letmein')\r\n    )\r\n    \r\n    this.fetchAllDirs();  \r\n\r\n  }\r\n\r\n  fetchAllDirs = () => {\r\n    const res = this.xfetch('MATCH (x:Dir) RETURN x');\r\n\r\n    this.setState(({ allDirs }) => {\r\n          const newArr = [...allDirs, res.map(x => x.properties.description)];\r\n    \r\n          return {\r\n            allDirs: newArr\r\n          };\r\n        }\r\n      );\r\n      \r\n  }\r\n\r\n\r\n  xfetch = (query, params) => {\r\n    //const { mapCenter, startDate, endDate } = this.state;\r\n    const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n    const res = [];\r\n    session\r\n    .run(query, params)\r\n    .then(result => {\r\n      console.log(result);\r\n      const record = result.records[0];\r\n      const businesses = record.get(\"businesses\");\r\n      const starsData = record.get(\"starsData\");\r\n\r\n      this.setState({\r\n        businesses,\r\n        starsData\r\n      });\r\n      session.close();\r\n    })\r\n    .catch(e => {\r\n      // TODO: handle errors.\r\n      console.log(e);\r\n      session.close();\r\n    });\r\n    \r\n  }\r\n  \r\n  // addDir = input => {\r\n  //   this.setState(({ actDirs }) => {\r\n  //     const newArr = [...actDirs, input];\r\n\r\n  //     return {\r\n  //       actDirs: newArr\r\n  //     };\r\n  //   });\r\n  // };\r\n\r\n  render(data) {      \r\n      return (      \r\n      <main>        \r\n        <RequestHead  allDirs={data}/> \r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}