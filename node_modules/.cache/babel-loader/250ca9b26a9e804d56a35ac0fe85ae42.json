{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a1ole\\\\Documents\\\\GitHub\\\\neo4jreact\\\\src\\\\RequestHead.js\";\nimport React, { Component } from \"react\";\nimport DirSelector from \"./DirSelector\";\nimport DirList from \"./DirList\";\nimport { Paper } from \"@material-ui/core\";\n\nvar neo4j = require('neo4j-driver');\n\nvar driver = neo4j.driver('bolt://localhost:7687', neo4j.auth.basic('neo4j', 'letmein')); // var session = driver.session({ defaultAccessMode: neo4j.session.READ })\n// session\n//   .run('MATCH (d:Dir) RETURN d', {\n//     nameParam: 'Alice'\n//   })\n//   .subscribe({\n//     //onKeys: keys => {\n//       //console.log(keys)\n//     //},\n//     onNext: record => {\n//       console.log(record.get('d').properties.description)\n//     },\n//     onCompleted: () => {\n//       session.close() // returns a Promise\n//     },\n//     onError: error => {\n//       console.log(error)\n//     }\n//   })\n\nclass RequestHead extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addDir = input => {\n      this.setState(({\n        dirs\n      }) => {\n        const newArr = [...dirs, input];\n        return {\n          dirs: newArr\n        };\n      });\n    };\n\n    this.pickValue = input => {\n      this.setState(({\n        dirs\n      }) => {\n        const newArr = [...dirs, input];\n        return {\n          dirs: newArr\n        };\n      });\n    };\n\n    this.state = {\n      dirs: [\"bla\", \"blabla\"]\n    };\n    var session = driver.session({\n      defaultAccessMode: neo4j.session.READ\n    });\n    session.run('MATCH (d:Dir) RETURN d', {\n      nameParam: 'Alice'\n    }).subscribe({\n      //onKeys: keys => {\n      //console.log(keys)\n      //},\n      onNext: record => {\n        this.setState(({\n          dirs\n        }) => {\n          const newArr = [...dirs, record.get('d').properties.description];\n          return {\n            dirs: newArr\n          };\n        });\n        console.log(record.get('d').properties.description);\n      },\n      onCompleted: () => {\n        session.close(); // returns a Promise\n      },\n      onError: error => {\n        console.log(error);\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(DirSelector, {\n      addDir: this.addDir,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(DirList, {\n      dirs: this.state.dirs,\n      pickValue: this.pickValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default RequestHead; // withStyles(styles)(UserList);","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/src/RequestHead.js"],"names":["React","Component","DirSelector","DirList","Paper","neo4j","require","driver","auth","basic","RequestHead","constructor","props","addDir","input","setState","dirs","newArr","pickValue","state","session","defaultAccessMode","READ","run","nameParam","subscribe","onNext","record","get","properties","description","console","log","onCompleted","close","onError","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport DirSelector from \"./DirSelector\";\r\nimport DirList from \"./DirList\";\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nvar neo4j = require('neo4j-driver')\r\n\r\nvar driver = neo4j.driver(\r\n  'bolt://localhost:7687',\r\n  neo4j.auth.basic('neo4j', 'letmein')\r\n)\r\n\r\n// var session = driver.session({ defaultAccessMode: neo4j.session.READ })\r\n\r\n\r\n// session\r\n//   .run('MATCH (d:Dir) RETURN d', {\r\n//     nameParam: 'Alice'\r\n//   })\r\n//   .subscribe({\r\n//     //onKeys: keys => {\r\n//       //console.log(keys)\r\n//     //},\r\n//     onNext: record => {\r\n//       console.log(record.get('d').properties.description)\r\n//     },\r\n//     onCompleted: () => {\r\n//       session.close() // returns a Promise\r\n//     },\r\n//     onError: error => {\r\n//       console.log(error)\r\n//     }\r\n//   })\r\n\r\nclass RequestHead extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dirs: [\"bla\", \"blabla\"]\r\n      \r\n\r\n    };\r\n    var session = driver.session({ defaultAccessMode: neo4j.session.READ })\r\n    session\r\n  .run('MATCH (d:Dir) RETURN d', {\r\n    nameParam: 'Alice'\r\n  })\r\n  .subscribe({\r\n    //onKeys: keys => {\r\n      //console.log(keys)\r\n    //},\r\n    onNext: record => {\r\n      this.setState(({ dirs }) => {\r\n        const newArr = [...dirs, record.get('d').properties.description];\r\n  \r\n        return {\r\n          dirs: newArr\r\n        };\r\n      });\r\n      console.log(record.get('d').properties.description)\r\n    },\r\n    onCompleted: () => {\r\n      session.close() // returns a Promise\r\n    },\r\n    onError: error => {\r\n      console.log(error)\r\n    }\r\n  })\r\n    \r\n  }\r\n\r\n  addDir = input => {\r\n    this.setState(({ dirs }) => {\r\n      const newArr = [...dirs, input];\r\n\r\n      return {\r\n        dirs: newArr\r\n      };\r\n    });\r\n  };\r\n\r\n  pickValue = input => {\r\n    this.setState(({ dirs }) => {\r\n      const newArr = [...dirs, input];\r\n\r\n      return {\r\n        dirs: newArr\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n       <Paper>\r\n        <DirSelector addDir={this.addDir} />\r\n        <DirList dirs={this.state.dirs} pickValue={this.pickValue} />\r\n       </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RequestHead; // withStyles(styles)(UserList);\r\n"]},"metadata":{},"sourceType":"module"}