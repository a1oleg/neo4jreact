{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a1ole\\\\Documents\\\\GitHub\\\\neo4jreact\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport Selector from \"./Selector\";\nimport DirList from \"./DirList\";\n\nvar neo4j = require('neo4j-driver');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.xfetch = input => {\n      console.log(input);\n      const session = this.driver.session({\n        defaultAccessMode: neo4j.session.READ\n      });\n      const res = [];\n      session.run('MATCH (d{Name: $nameParam})-[:value]->(v) RETURN v.Name', {\n        nameParam: input\n      }).subscribe({\n        //onKeys: keys => {\n        //console.log(keys)\n        //},\n        onNext: record => {\n          res.push(record._fields[0]);\n        },\n        onCompleted: () => {\n          this.setState(({\n            allDirs\n          }) => {\n            const newArr = allDirs.filter(function (item) {\n              return item === input;\n            });\n            newArr.push({\n              name: input,\n              values: res\n            });\n            return {\n              allDirs: newArr\n            };\n          }); //console.log(this.state.actDirs);\n\n          session.close(); // returns a Promise\n        },\n        onError: error => {\n          console.log(error);\n        }\n      });\n    };\n\n    this.addValue = input => {\n      console.log(input);\n    };\n\n    this.state = {\n      allDirs: [{\n        name: 'bar',\n        values: []\n      }],\n      actDirs: [],\n      results: []\n    };\n    this.driver = neo4j.driver('bolt://localhost:7687', neo4j.auth.basic('neo4j', 'letmein'));\n    this.xfetch('Мать справочников');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, this.state.allDirs.filter(function (item) {\n      return item.values.length > 0 && item.name !== 'Мать справочников';\n    }).map(n => {\n      return /*#__PURE__*/React.createElement(Selector, {\n        name: n.name,\n        values: n.values,\n        change: this.addValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 18\n        }\n      }); //change ={this.addDir}       \n    }), /*#__PURE__*/React.createElement(Selector, {\n      name: 'Справочники',\n      values: this.state.allDirs(function (item) {\n        return item.name === 'Мать справочников';\n      }).values,\n      change: this.xfetch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/src/App.js"],"names":["React","Component","Selector","DirList","neo4j","require","App","constructor","props","xfetch","input","console","log","session","driver","defaultAccessMode","READ","res","run","nameParam","subscribe","onNext","record","push","_fields","onCompleted","setState","allDirs","newArr","filter","item","name","values","close","onError","error","addValue","state","actDirs","results","auth","basic","render","length","map","n"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport './App.css';\r\nimport Selector from \"./Selector\";\r\nimport DirList from \"./DirList\";\r\nvar neo4j = require('neo4j-driver')\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      allDirs: [{\r\n        name: 'bar',\r\n        values: []\r\n      }],\r\n      actDirs: [],\r\n      results: [],\r\n\r\n    };\r\n    \r\n    this.driver = neo4j.driver(\r\n      'bolt://localhost:7687',\r\n      neo4j.auth.basic('neo4j', 'letmein')\r\n    )\r\n    \r\n    this.xfetch('Мать справочников'); \r\n\r\n  }\r\n\r\n  \r\n\r\n  xfetch = input => {\r\n    console.log(input)\r\n    const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n    const res = [];\r\n    session\r\n    .run('MATCH (d{Name: $nameParam})-[:value]->(v) RETURN v.Name', {\r\n      nameParam: input\r\n    })\r\n    .subscribe({\r\n      //onKeys: keys => {\r\n        //console.log(keys)\r\n      //},\r\n      onNext: record => {\r\n        res.push(record._fields[0]);\r\n      },\r\n      onCompleted: () => {          \r\n        this.setState(({ allDirs }) => {\r\n          const newArr = allDirs.filter(function(item) { \r\n              return item === input\r\n          });\r\n\r\n          newArr.push({\r\n            name: input,\r\n            values: res\r\n          } );    \r\n          return {\r\n            allDirs: newArr\r\n          };\r\n        });\r\n        //console.log(this.state.actDirs);\r\n        session.close();// returns a Promise\r\n      },\r\n      onError: error => {\r\n        console.log(error)\r\n      }\r\n    });    \r\n  };\r\n\r\n  addValue = input => {\r\n    console.log(input)\r\n\r\n  };\r\n\r\n  render() {      \r\n      return (      \r\n      <main> \r\n             {this.state.allDirs.filter(function(item) { \r\n                return item.values.length > 0 && item.name !== 'Мать справочников'\r\n            })\r\n             .map(n => {               \r\n          return <Selector name= {n.name} values = {n.values}  change ={this.addValue}/>//change ={this.addDir}       \r\n       })}\r\n        \r\n        <Selector name= {'Справочники'} values={this.state.allDirs(function(item) { \r\n                return item.name === 'Мать справочников'\r\n            }).values} change ={this.xfetch}/> \r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}