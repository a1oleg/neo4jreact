{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a1ole\\\\Documents\\\\GitHub\\\\neo4jreact\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport Selector from \"./Selector\";\n\nvar neo4j = require('neo4j-driver');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addDir = param => {\n      //console.log(param)\n      const session = this.driver.session({\n        defaultAccessMode: neo4j.session.READ\n      });\n      const res = [];\n      session.run('MATCH (:Dir{Name: $nameParam})-[:value]->(v)<-[r:field]-(:Wagon) RETURN v.Name, count(r)', {\n        nameParam: param.name\n      }).subscribe({\n        //onKeys: keys => {\n        //console.log(keys)\n        //},\n        onNext: record => {\n          res.push({\n            name: record._fields[0],\n            count: record._fields[1].low\n          }); //console.log(record._fields[1].low)\n        },\n        onCompleted: () => {\n          session.close(); // returns a Promise\n\n          this.setState(({\n            actDirs\n          }) => {\n            const newArr = [...actDirs, {\n              name: param.value,\n              values: res\n            }];\n            return {\n              actDirs: newArr\n            };\n          });\n        },\n        onError: error => {\n          console.log(error);\n        }\n      });\n    };\n\n    this.addValue = input => {\n      console.log(input);\n      this.setState(({\n        choDirs\n      }) => {\n        const newArr = [...choDirs, input];\n        return {\n          choDirs: newArr\n        };\n      });\n      console.log(this.state.choDirs);\n    };\n\n    this.xfetch = () => {\n      const session = this.driver.session({\n        defaultAccessMode: neo4j.session.READ\n      });\n      const res = []; // //по обратному порядку каунта добавлять в запрос\n      // let sorted = this.state.choDirs.sort(function (a, b) {\n      //   if (a.name > b.count) {\n      //     return 1;\n      //   }\n      //   if (a.name < b.count) {\n      //     return -1;\n      //   }\n      //   // a должно быть равным b\n      //   return 0;\n      // });\n\n      let qStart = 'MATCH (:Value{Name:\"';\n      let qEnd = '\"})<-[:field]-(w:Wagon)\\n';\n      let qString = this.state.choDirs.map(n => n.name).reduce(function (sum, current) {\n        return sum + qStart + current + qEnd;\n      }, 0);\n      qString += 'MATCH (v:Value)<-[:field]-(w)\\n';\n      qString += 'WHERE v.Name IN $outFields\\n';\n      qString += 'RETURN w, v.Name';\n      console.log(qString.substr(1));\n      session.run(qString.substr(1), {\n        outFields: this.state.outFields //name0: 'платформы'//, name1: 'АО ВТБ ЛИЗИНГ'\n\n      }).subscribe({\n        onNext: record => {\n          console.log({\n            _id: record._fields[0].identity.low,\n            foo: record._fields[1]\n          });\n          res.push({\n            _id: record._fields[0].identity.low,\n            foo: record._fields[1]\n          });\n        },\n        onCompleted: () => {\n          session.close(); // returns a Promise\n\n          console.log(res);\n        },\n        onError: error => {\n          console.log(error);\n        }\n      });\n    };\n\n    this.addOutField = input => {\n      //console.log(input)\n      this.setState(({\n        outFields\n      }) => {\n        const newArr = [...outFields, input.name];\n        return {\n          outFields: newArr\n        };\n      }); //console.log(this.state.outFields)\n    };\n\n    this.state = {\n      allDirs: [],\n      //[{name: 'Мать справочников',values: []}],\n      actDirs: [],\n      choDirs: [],\n      outFields: [],\n      results: []\n    };\n    this.driver = neo4j.driver('bolt://localhost:7687', neo4j.auth.basic('neo4j', 'letmein'));\n\n    const _session = this.driver.session({\n      defaultAccessMode: neo4j.session.READ\n    });\n\n    const _res = [];\n\n    _session.run('MATCH (d{Name: $nameParam})-[:value]->(v) RETURN v.Name', {\n      nameParam: 'Мать справочников'\n    }).subscribe({\n      onNext: record => {\n        _res.push({\n          name: record._fields[0]\n        }); //console.log(record._fields[0])      \n\n      },\n      onCompleted: () => {\n        this.setState({\n          allDirs: _res\n        }); //console.log(this.state)\n\n        _session.close(); // returns a Promise  \n\n      },\n      onError: error => {\n        console.log(error);\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }\n    }, this.state.actDirs.map(n => {\n      return /*#__PURE__*/React.createElement(Selector, {\n        key: n.value,\n        name: n.name,\n        values: n.values,\n        change: this.addValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 18\n        }\n      }); //change ={this.addDir}       \n    }), /*#__PURE__*/React.createElement(Selector, {\n      name: 'Ввод',\n      values: this.state.allDirs,\n      change: this.addDir,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.xfetch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }, \"\\u0417\\u0430\\u043F\\u0440\\u043E\\u0441\"), /*#__PURE__*/React.createElement(\"table\", {\n      border: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, \"_id\"), this.state.outFields.map(n => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 22\n        }\n      }, n);\n    }), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Selector, {\n      name: 'Добавить',\n      values: this.state.allDirs,\n      change: this.addOutField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, \"...\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, \"...\"), this.state.outFields.map(n => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 24\n        }\n      }, \"...\");\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/src/App.js"],"names":["React","Component","Selector","neo4j","require","App","constructor","props","addDir","param","session","driver","defaultAccessMode","READ","res","run","nameParam","name","subscribe","onNext","record","push","_fields","count","low","onCompleted","close","setState","actDirs","newArr","value","values","onError","error","console","log","addValue","input","choDirs","state","xfetch","qStart","qEnd","qString","map","n","reduce","sum","current","substr","outFields","_id","identity","foo","addOutField","allDirs","results","auth","basic","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport './App.css';\r\nimport Selector from \"./Selector\";\r\nvar neo4j = require('neo4j-driver')\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      allDirs: [], //[{name: 'Мать справочников',values: []}],\r\n      actDirs: [],\r\n      choDirs: [],\r\n      \r\n      outFields: [],\r\n      results: [],\r\n\r\n    };\r\n    \r\n    this.driver = neo4j.driver(\r\n      'bolt://localhost:7687',\r\n      neo4j.auth.basic('neo4j', 'letmein')\r\n    )\r\n   \r\n    const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n    const res = [];\r\n    session\r\n    .run('MATCH (d{Name: $nameParam})-[:value]->(v) RETURN v.Name', {\r\n      nameParam: 'Мать справочников'\r\n    })\r\n    .subscribe({     \r\n      onNext: record => {\r\n        res.push({name:record._fields[0]});  \r\n        //console.log(record._fields[0])      \r\n      },\r\n      onCompleted: () => {          \r\n        this.setState({ allDirs: res})\r\n        //console.log(this.state)\r\n        session.close();// returns a Promise  \r\n      },\r\n      onError: error => {\r\n        console.log(error)\r\n      }\r\n    });    \r\n  };\r\n\r\n  \r\n\r\n  addDir = (param) => {\r\n    //console.log(param)\r\n    const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n    const res = [];\r\n    session\r\n    .run('MATCH (:Dir{Name: $nameParam})-[:value]->(v)<-[r:field]-(:Wagon) RETURN v.Name, count(r)', {\r\n      nameParam: param.name\r\n    })\r\n    .subscribe({\r\n      //onKeys: keys => {\r\n        //console.log(keys)\r\n      //},\r\n      onNext: record => {\r\n        res.push({name:record._fields[0], count:record._fields[1].low});\r\n        //console.log(record._fields[1].low)\r\n      },\r\n      onCompleted: () => {  \r\n        session.close();// returns a Promise\r\n          this.setState(({ actDirs }) => {\r\n          const newArr = [...actDirs, {name: param.value, values: res}];   \r\n    \r\n            return {\r\n              actDirs: newArr\r\n            }\r\n        })\r\n          \r\n      },\r\n      onError: error => {\r\n        console.log(error)\r\n      }\r\n    });    \r\n  };\r\n\r\n  addValue = input => {\r\n    console.log(input)\r\n\r\n    \r\n    this.setState(({ choDirs }) => {\r\n      const newArr = [...choDirs, input];   \r\n\r\n        return {\r\n          choDirs: newArr\r\n        }\r\n    })\r\n    console.log(this.state.choDirs);\r\n  };\r\n\r\n  xfetch = () => {    \r\n    const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n    const res = [];\r\n    \r\n    // //по обратному порядку каунта добавлять в запрос\r\n    // let sorted = this.state.choDirs.sort(function (a, b) {\r\n    //   if (a.name > b.count) {\r\n    //     return 1;\r\n    //   }\r\n    //   if (a.name < b.count) {\r\n    //     return -1;\r\n    //   }\r\n    //   // a должно быть равным b\r\n    //   return 0;\r\n    // });\r\n    \r\n    let qStart = 'MATCH (:Value{Name:\"';\r\n    \r\n    let qEnd = '\"})<-[:field]-(w:Wagon)\\n';\r\n\r\n    let qString = this.state.choDirs.map(n => n.name).reduce(function(sum, current) {\r\n      return sum + qStart + current + qEnd;\r\n    }, 0);    \r\n\r\n    qString += 'MATCH (v:Value)<-[:field]-(w)\\n';\r\n    qString += 'WHERE v.Name IN $outFields\\n';\r\n    qString += 'RETURN w, v.Name';\r\n\r\n    console.log(qString.substr(1));\r\n\r\n    session\r\n    .run(qString.substr(1), {\r\n      outFields: this.state.outFields\r\n      //name0: 'платформы'//, name1: 'АО ВТБ ЛИЗИНГ'\r\n    })\r\n    .subscribe({\r\n\r\n      onNext: record => {   \r\n        console.log({_id: record._fields[0].identity.low, foo:record._fields[1] });     \r\n        res.push({_id: record._fields[0].identity.low, foo:record._fields[1] });               \r\n      },\r\n      onCompleted: () => {  \r\n        session.close();// returns a Promise\r\n        console.log(res)\r\n        \r\n          \r\n      },\r\n      onError: error => {\r\n        console.log(error)\r\n      }\r\n    });    \r\n  }\r\n\r\n  addOutField = input => {\r\n    //console.log(input)\r\n    this.setState(({ outFields }) => {\r\n      const newArr = [...outFields, input.name];   \r\n\r\n        return {\r\n          outFields: newArr\r\n        }\r\n    })\r\n    //console.log(this.state.outFields)\r\n  };\r\n\r\n  render() {      \r\n      return (      \r\n      <main> \r\n        {this.state.actDirs.map(n => {               \r\n          return <Selector key={n.value} name= {n.name} values = {n.values}  change ={this.addValue}/>//change ={this.addDir}       \r\n        })}\r\n        \r\n        <Selector name= {'Ввод'} values={this.state.allDirs} change ={this.addDir}/> \r\n        <button onClick={this.xfetch}>\r\n          Запрос\r\n        </button>\r\n\r\n\r\n        {/* <Selector name= {'Вывод'} values={this.state.allDirs} change ={this.addOutField}/>  */}\r\n\r\n        <table border=\"1\">\r\n          <tr>\r\n            <th>_id</th>\r\n            \r\n            {this.state.outFields.map(n => {               \r\n              return <th>{n}</th>       \r\n            })}\r\n\r\n            <th><Selector name= {'Добавить'} values={this.state.allDirs} change ={this.addOutField}/> </th>  \r\n            \r\n          </tr>\r\n          <tr>\r\n            <td>...</td>\r\n            <td>...</td>\r\n            {this.state.outFields.map(n => {               \r\n                return <td>...</td>    \r\n              })}\r\n          </tr>\r\n        </table>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}