{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a1ole\\\\Documents\\\\GitHub\\\\neo4jreact\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport RequestHead from \"./RequestHead\";\n\nvar neo4j = require('neo4j-driver');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchAllDirs = () => {\n      const res = this.fetch('MATCH (x:Dir) RETURN x');\n      this.setState(({\n        allDirs\n      }) => {\n        const newArr = [...allDirs, res.map(x => x.properties.description)];\n        return {\n          allDirs: newArr\n        };\n      });\n    };\n\n    this.state = {\n      allDirs: [],\n      actDirs: [],\n      results: []\n    };\n    this.driver = neo4j.driver('bolt://localhost:7687', neo4j.auth.basic('neo4j', 'letmein'));\n    this.fetchAllDirs();\n\n    function fetch(query, params) {\n      //const { mapCenter, startDate, endDate } = this.state;\n      const session = this.driver.session({\n        defaultAccessMode: neo4j.session.READ\n      });\n      const res = [];\n      session.run(query, params).subscribe({\n        //onKeys: keys => {\n        //console.log(keys)\n        //},\n        onNext: record => {\n          //console.log(this.state.allDirs);\n          res.push(record.get('x')); // this.setState(({ allDirs }) => {\n          //   const newArr = [...allDirs, record.get('x').properties.description];\n          //   return {\n          //     allDirs: newArr\n          //   };\n          // });\n        },\n        onCompleted: () => {\n          session.close(); // returns a Promise\n\n          console.log(res.map(x => x.properties.description));\n          return res;\n        },\n        onError: error => {\n          console.log(error);\n        }\n      });\n    }\n  }\n\n  // addDir = input => {\n  //   this.setState(({ actDirs }) => {\n  //     const newArr = [...actDirs, input];\n  //     return {\n  //       actDirs: newArr\n  //     };\n  //   });\n  // };\n  render() {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RequestHead, {\n      allDirs: this.state.allDirs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/src/App.js"],"names":["React","Component","RequestHead","neo4j","require","App","constructor","props","fetchAllDirs","res","fetch","setState","allDirs","newArr","map","x","properties","description","state","actDirs","results","driver","auth","basic","query","params","session","defaultAccessMode","READ","run","subscribe","onNext","record","push","get","onCompleted","close","console","log","onError","error","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAqDnBC,YArDmB,GAqDJ,MAAM;AACnB,YAAMC,GAAG,GAAG,KAAKC,KAAL,CAAW,wBAAX,CAAZ;AAEA,WAAKC,QAAL,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAiB;AACzB,cAAMC,MAAM,GAAG,CAAC,GAAGD,OAAJ,EAAaH,GAAG,CAACK,GAAJ,CAAQC,CAAC,IAAIA,CAAC,CAACC,UAAF,CAAaC,WAA1B,CAAb,CAAf;AAEA,eAAO;AACLL,UAAAA,OAAO,EAAEC;AADJ,SAAP;AAGD,OANL;AAQD,KAhEkB;;AAGjB,SAAKK,KAAL,GAAa;AACXN,MAAAA,OAAO,EAAE,EADE;AAEXO,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAOA,SAAKC,MAAL,GAAclB,KAAK,CAACkB,MAAN,CACZ,uBADY,EAEZlB,KAAK,CAACmB,IAAN,CAAWC,KAAX,CAAiB,OAAjB,EAA0B,SAA1B,CAFY,CAAd;AAKA,SAAKf,YAAL;;AAEA,aAASE,KAAT,CAAgBc,KAAhB,EAAuBC,MAAvB,EAA+B;AAC7B;AACA,YAAMC,OAAO,GAAG,KAAKL,MAAL,CAAYK,OAAZ,CAAoB;AAAEC,QAAAA,iBAAiB,EAAExB,KAAK,CAACuB,OAAN,CAAcE;AAAnC,OAApB,CAAhB;AACA,YAAMnB,GAAG,GAAG,EAAZ;AACAiB,MAAAA,OAAO,CACNG,GADD,CACKL,KADL,EACYC,MADZ,EAECK,SAFD,CAEW;AACT;AACE;AACF;AACAC,QAAAA,MAAM,EAAEC,MAAM,IAAI;AAChB;AACAvB,UAAAA,GAAG,CAACwB,IAAJ,CAASD,MAAM,CAACE,GAAP,CAAW,GAAX,CAAT,EAFgB,CAGhB;AACA;AAEA;AACA;AACA;AACA;AACD,SAdQ;AAeTC,QAAAA,WAAW,EAAE,MAAM;AACjBT,UAAAA,OAAO,CAACU,KAAR,GADiB,CACD;;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAY7B,GAAG,CAACK,GAAJ,CAAQC,CAAC,IAAIA,CAAC,CAACC,UAAF,CAAaC,WAA1B,CAAZ;AAEA,iBAAOR,GAAP;AACD,SApBQ;AAqBT8B,QAAAA,OAAO,EAAEC,KAAK,IAAI;AAChBH,UAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AAvBQ,OAFX;AA4BD;AAEF;;AAkBD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AAEL,wBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAc,MAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWN,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFA;AASH;;AA3FyB;;AA8F5B,eAAeP,GAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport './App.css';\r\nimport RequestHead from \"./RequestHead\";\r\n\r\nvar neo4j = require('neo4j-driver')\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      allDirs: [],\r\n      actDirs: [],\r\n      results: [],\r\n\r\n    };\r\n    \r\n    this.driver = neo4j.driver(\r\n      'bolt://localhost:7687',\r\n      neo4j.auth.basic('neo4j', 'letmein')\r\n    )\r\n    \r\n    this.fetchAllDirs(); \r\n    \r\n    function fetch (query, params) {\r\n      //const { mapCenter, startDate, endDate } = this.state;\r\n      const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n      const res = [];\r\n      session\r\n      .run(query, params)\r\n      .subscribe({\r\n        //onKeys: keys => {\r\n          //console.log(keys)\r\n        //},\r\n        onNext: record => {\r\n          //console.log(this.state.allDirs);\r\n          res.push(record.get('x'));\r\n          // this.setState(({ allDirs }) => {\r\n          //   const newArr = [...allDirs, record.get('x').properties.description];\r\n      \r\n          //   return {\r\n          //     allDirs: newArr\r\n          //   };\r\n          // });\r\n        },\r\n        onCompleted: () => {        \r\n          session.close();// returns a Promise\r\n          console.log(res.map(x => x.properties.description));\r\n          \r\n          return res;\r\n        },\r\n        onError: error => {\r\n          console.log(error)\r\n        }\r\n      });\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  fetchAllDirs = () => {\r\n    const res = this.fetch('MATCH (x:Dir) RETURN x');\r\n\r\n    this.setState(({ allDirs }) => {\r\n          const newArr = [...allDirs, res.map(x => x.properties.description)];\r\n    \r\n          return {\r\n            allDirs: newArr\r\n          };\r\n        }\r\n      );\r\n  }\r\n\r\n\r\n \r\n  \r\n  // addDir = input => {\r\n  //   this.setState(({ actDirs }) => {\r\n  //     const newArr = [...actDirs, input];\r\n\r\n  //     return {\r\n  //       actDirs: newArr\r\n  //     };\r\n  //   });\r\n  // };\r\n\r\n  render() {\r\n      \r\n      return (\r\n      \r\n      <main>        \r\n        <RequestHead  allDirs={this.state.allDirs}/>\r\n        \r\n        \r\n      </main>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}