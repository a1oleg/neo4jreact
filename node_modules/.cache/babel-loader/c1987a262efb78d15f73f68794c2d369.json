{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a1ole\\\\Documents\\\\GitHub\\\\neo4jreact\\\\src\\\\InDir.js\";\nimport React, { Component } from \"react\";\nimport Selector2 from \"./Selector2\";\nimport Selector from \"./Selector\";\n\nlet neo4j = require('neo4j-driver');\n\nclass InDir extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getValues = () => {\n      const session = this.driver.session({\n        defaultAccessMode: neo4j.session.READ\n      });\n      const values = [];\n      session.run('MATCH (d:Dir{Name: $nameinput})-[:value]->(v) RETURN v.Name', {\n        nameinput: this.props.name\n      }).subscribe({\n        onNext: record => {\n          values.push({\n            name: record._fields[0]\n          }); //console.log(record._fields[0])      \n        },\n        onCompleted: () => {\n          this.setState({\n            allValues: values\n          }); //console.log(this.state)\n\n          session.close(); // returns a Promise  \n        },\n        onError: error => {\n          console.log(error);\n        }\n      });\n    };\n\n    this.pickValue = input => {\n      this.props.change(input.value);\n      console.log(input.value);\n      this.setState(({\n        choValues\n      }) => {\n        //const newArr = [...choValues, input.value];     \n        const newSet = choValues.add(input.value);\n        return {\n          choValues: newSet\n        };\n      });\n    };\n\n    this.delValue = input => {\n      console.log(input.value);\n      this.setState(({\n        choValues\n      }) => {\n        const newSet = choValues.delete(input.value);\n        return {\n          choValues: newSet\n        };\n      });\n    };\n\n    this.handleX = event => {\n      this.props.remove(this.props.name);\n    };\n\n    this.state = {\n      allValues: [],\n      //choValues: [],  \n      choValues: new Set()\n    };\n    this.driver = neo4j.driver('bolt://localhost:7687', neo4j.auth.basic('neo4j', 'letmein'));\n    this.getValues();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, this.props.name, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"X\",\n      onClick: this.handleX,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Selector2, {\n      key: this.props.name,\n      prefix: 'Добавить значение',\n      name: this.props.name,\n      values: this.state.allValues,\n      change: this.pickValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    })), [...this.state.choValues].map(v => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 22\n        }\n      }, v);\n    }));\n  }\n\n}\n\nexport default InDir;","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/src/InDir.js"],"names":["React","Component","Selector2","Selector","neo4j","require","InDir","constructor","props","getValues","session","driver","defaultAccessMode","READ","values","run","nameinput","name","subscribe","onNext","record","push","_fields","onCompleted","setState","allValues","close","onError","error","console","log","pickValue","input","change","value","choValues","newSet","add","delValue","delete","handleX","event","remove","state","Set","auth","basic","render","map","v"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Selector2 from \"./Selector2\";\r\nimport Selector from \"./Selector\";\r\nlet neo4j = require('neo4j-driver')\r\n\r\nclass InDir extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          allValues: [],          \r\n          //choValues: [],  \r\n          choValues:new Set()        \r\n        };        \r\n        this.driver = neo4j.driver(\r\n          'bolt://localhost:7687',\r\n          neo4j.auth.basic('neo4j', 'letmein')\r\n        );\r\n        \r\n        this.getValues();\r\n        \r\n    };\r\n \r\n    getValues = () => {\r\n        const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n        const values = [];\r\n        session\r\n        .run('MATCH (d:Dir{Name: $nameinput})-[:value]->(v) RETURN v.Name', {\r\n          nameinput: this.props.name\r\n        })\r\n        .subscribe({     \r\n          onNext: record => {\r\n            values.push({name:record._fields[0]});  \r\n            //console.log(record._fields[0])      \r\n          },\r\n          onCompleted: () => {          \r\n            this.setState({ allValues: values})\r\n            //console.log(this.state)\r\n            session.close();// returns a Promise  \r\n          },\r\n          onError: error => {\r\n            console.log(error)\r\n          }\r\n        });    \r\n      };\r\n    \r\n      pickValue = (input) => {\r\n        this.props.change(input.value) \r\n        console.log(input.value);  \r\n        this.setState(({ choValues }) => {\r\n          //const newArr = [...choValues, input.value];     \r\n          const newSet = choValues.add(input.value);       \r\n            return {\r\n                choValues: newSet\r\n            }\r\n          });        \r\n      };\r\n\r\n      delValue = (input) => { \r\n        console.log(input.value);  \r\n        this.setState(({ choValues }) => {\r\n            const newSet = choValues.delete(input.value);          \r\n            return {\r\n                choValues: newSet\r\n            }\r\n          });\r\n      };\r\n\r\n      handleX = (event) => {\r\n        \r\n        this.props.remove(this.props.name);\r\n      }  \r\n\r\n  render() {    \r\n    return (\r\n        <tr>\r\n        <td>{this.props.name}\r\n        <input type=\"submit\" value=\"X\" onClick={this.handleX}></input>\r\n        </td>  \r\n        <td><Selector2 key={this.props.name} prefix={'Добавить значение'} name={this.props.name} values ={this.state.allValues}  change={this.pickValue}/></td>  \r\n        \r\n          {[...this.state.choValues].map(v => {               \r\n              return <td>{v}\r\n              {/* <input type=\"submit\" value=\"X\" onClick={this.delValue}></input> */}\r\n              </td>\r\n              })}\r\n      </tr>\r\n\r\n    )\r\n        \r\n        \r\n  }\r\n}\r\n\r\nexport default InDir;"]},"metadata":{},"sourceType":"module"}