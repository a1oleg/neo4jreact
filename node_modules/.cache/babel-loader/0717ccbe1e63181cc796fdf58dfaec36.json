{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _error = require(\"../error\");\n\nvar _levels;\n\nvar ERROR = 'error';\nvar WARN = 'warn';\nvar INFO = 'info';\nvar DEBUG = 'debug';\nvar DEFAULT_LEVEL = INFO;\nvar levels = (_levels = {}, (0, _defineProperty2[\"default\"])(_levels, ERROR, 0), (0, _defineProperty2[\"default\"])(_levels, WARN, 1), (0, _defineProperty2[\"default\"])(_levels, INFO, 2), (0, _defineProperty2[\"default\"])(_levels, DEBUG, 3), _levels);\n/**\r\n * Logger used by the driver to notify about various internal events. Single logger should be used per driver.\r\n */\n\nvar Logger = /*#__PURE__*/function () {\n  /**\r\n   * @constructor\r\n   * @param {string} level the enabled logging level.\r\n   * @param {function(level: string, message: string)} loggerFunction the function to write the log level and message.\r\n   */\n  function Logger(level, loggerFunction) {\n    (0, _classCallCheck2[\"default\"])(this, Logger);\n    this._level = level;\n    this._loggerFunction = loggerFunction;\n  }\n  /**\r\n   * Create a new logger based on the given driver configuration.\r\n   * @param {Object} driverConfig the driver configuration as supplied by the user.\r\n   * @return {Logger} a new logger instance or a no-op logger when not configured.\r\n   */\n\n\n  (0, _createClass2[\"default\"])(Logger, [{\n    key: \"isErrorEnabled\",\n\n    /**\r\n     * Check if error logging is enabled, i.e. it is not a no-op implementation.\r\n     * @return {boolean} `true` when enabled, `false` otherwise.\r\n     */\n    value: function isErrorEnabled() {\n      return isLevelEnabled(this._level, ERROR);\n    }\n    /**\r\n     * Log an error message.\r\n     * @param {string} message the message to log.\r\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(message) {\n      if (this.isErrorEnabled()) {\n        this._loggerFunction(ERROR, message);\n      }\n    }\n    /**\r\n     * Check if warn logging is enabled, i.e. it is not a no-op implementation.\r\n     * @return {boolean} `true` when enabled, `false` otherwise.\r\n     */\n\n  }, {\n    key: \"isWarnEnabled\",\n    value: function isWarnEnabled() {\n      return isLevelEnabled(this._level, WARN);\n    }\n    /**\r\n     * Log an warning message.\r\n     * @param {string} message the message to log.\r\n     */\n\n  }, {\n    key: \"warn\",\n    value: function warn(message) {\n      if (this.isWarnEnabled()) {\n        this._loggerFunction(WARN, message);\n      }\n    }\n    /**\r\n     * Check if info logging is enabled, i.e. it is not a no-op implementation.\r\n     * @return {boolean} `true` when enabled, `false` otherwise.\r\n     */\n\n  }, {\n    key: \"isInfoEnabled\",\n    value: function isInfoEnabled() {\n      return isLevelEnabled(this._level, INFO);\n    }\n    /**\r\n     * Log an info message.\r\n     * @param {string} message the message to log.\r\n     */\n\n  }, {\n    key: \"info\",\n    value: function info(message) {\n      if (this.isInfoEnabled()) {\n        this._loggerFunction(INFO, message);\n      }\n    }\n    /**\r\n     * Check if debug logging is enabled, i.e. it is not a no-op implementation.\r\n     * @return {boolean} `true` when enabled, `false` otherwise.\r\n     */\n\n  }, {\n    key: \"isDebugEnabled\",\n    value: function isDebugEnabled() {\n      return isLevelEnabled(this._level, DEBUG);\n    }\n    /**\r\n     * Log a debug message.\r\n     * @param {string} message the message to log.\r\n     */\n\n  }, {\n    key: \"debug\",\n    value: function debug(message) {\n      if (this.isDebugEnabled()) {\n        this._loggerFunction(DEBUG, message);\n      }\n    }\n  }], [{\n    key: \"create\",\n    value: function create(driverConfig) {\n      if (driverConfig && driverConfig.logging) {\n        var loggingConfig = driverConfig.logging;\n        var level = extractConfiguredLevel(loggingConfig);\n        var loggerFunction = extractConfiguredLogger(loggingConfig);\n        return new Logger(level, loggerFunction);\n      }\n\n      return this.noOp();\n    }\n    /**\r\n     * Create a no-op logger implementation.\r\n     * @return {Logger} the no-op logger implementation.\r\n     */\n\n  }, {\n    key: \"noOp\",\n    value: function noOp() {\n      return noOpLogger;\n    }\n  }]);\n  return Logger;\n}();\n\nvar NoOpLogger = /*#__PURE__*/function (_Logger) {\n  (0, _inherits2[\"default\"])(NoOpLogger, _Logger);\n\n  function NoOpLogger() {\n    (0, _classCallCheck2[\"default\"])(this, NoOpLogger);\n    return (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(NoOpLogger).call(this, null, null));\n  }\n\n  (0, _createClass2[\"default\"])(NoOpLogger, [{\n    key: \"isErrorEnabled\",\n    value: function isErrorEnabled() {\n      return false;\n    }\n  }, {\n    key: \"error\",\n    value: function error(message) {}\n  }, {\n    key: \"isWarnEnabled\",\n    value: function isWarnEnabled() {\n      return false;\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(message) {}\n  }, {\n    key: \"isInfoEnabled\",\n    value: function isInfoEnabled() {\n      return false;\n    }\n  }, {\n    key: \"info\",\n    value: function info(message) {}\n  }, {\n    key: \"isDebugEnabled\",\n    value: function isDebugEnabled() {\n      return false;\n    }\n  }, {\n    key: \"debug\",\n    value: function debug(message) {}\n  }]);\n  return NoOpLogger;\n}(Logger);\n\nvar noOpLogger = new NoOpLogger();\n/**\r\n * Check if the given logging level is enabled.\r\n * @param {string} configuredLevel the configured level.\r\n * @param {string} targetLevel the level to check.\r\n * @return {boolean} value of `true` when enabled, `false` otherwise.\r\n */\n\nfunction isLevelEnabled(configuredLevel, targetLevel) {\n  return levels[configuredLevel] >= levels[targetLevel];\n}\n/**\r\n * Extract the configured logging level from the driver's logging configuration.\r\n * @param {Object} loggingConfig the logging configuration.\r\n * @return {string} the configured log level or default when none configured.\r\n */\n\n\nfunction extractConfiguredLevel(loggingConfig) {\n  if (loggingConfig && loggingConfig.level) {\n    var configuredLevel = loggingConfig.level;\n    var value = levels[configuredLevel];\n\n    if (!value && value !== 0) {\n      throw (0, _error.newError)(\"Illegal logging level: \".concat(configuredLevel, \". Supported levels are: \").concat(Object.keys(levels)));\n    }\n\n    return configuredLevel;\n  }\n\n  return DEFAULT_LEVEL;\n}\n/**\r\n * Extract the configured logger function from the driver's logging configuration.\r\n * @param {Object} loggingConfig the logging configuration.\r\n * @return {function(level: string, message: string)} the configured logging function.\r\n */\n\n\nfunction extractConfiguredLogger(loggingConfig) {\n  if (loggingConfig && loggingConfig.logger) {\n    var configuredLogger = loggingConfig.logger;\n\n    if (configuredLogger && typeof configuredLogger === 'function') {\n      return configuredLogger;\n    }\n  }\n\n  throw (0, _error.newError)(\"Illegal logger function: \".concat(loggingConfig.logger));\n}\n\nvar _default = Logger;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/node_modules/neo4j-driver/lib/internal/logger.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_classCallCheck2","_createClass2","_defineProperty2","_error","_levels","ERROR","WARN","INFO","DEBUG","DEFAULT_LEVEL","levels","Logger","level","loggerFunction","_level","_loggerFunction","key","isErrorEnabled","isLevelEnabled","error","message","isWarnEnabled","warn","isInfoEnabled","info","isDebugEnabled","debug","create","driverConfig","logging","loggingConfig","extractConfiguredLevel","extractConfiguredLogger","noOp","noOpLogger","NoOpLogger","_Logger","call","configuredLevel","targetLevel","newError","concat","keys","logger","configuredLogger","_default"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports[\"default\"] = void 0;\r\n\r\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\r\n\r\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\r\n\r\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\r\n\r\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\r\n\r\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\r\n\r\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\r\n\r\nvar _error = require(\"../error\");\r\n\r\nvar _levels;\r\n\r\nvar ERROR = 'error';\r\nvar WARN = 'warn';\r\nvar INFO = 'info';\r\nvar DEBUG = 'debug';\r\nvar DEFAULT_LEVEL = INFO;\r\nvar levels = (_levels = {}, (0, _defineProperty2[\"default\"])(_levels, ERROR, 0), (0, _defineProperty2[\"default\"])(_levels, WARN, 1), (0, _defineProperty2[\"default\"])(_levels, INFO, 2), (0, _defineProperty2[\"default\"])(_levels, DEBUG, 3), _levels);\r\n/**\r\n * Logger used by the driver to notify about various internal events. Single logger should be used per driver.\r\n */\r\n\r\nvar Logger =\r\n/*#__PURE__*/\r\nfunction () {\r\n  /**\r\n   * @constructor\r\n   * @param {string} level the enabled logging level.\r\n   * @param {function(level: string, message: string)} loggerFunction the function to write the log level and message.\r\n   */\r\n  function Logger(level, loggerFunction) {\r\n    (0, _classCallCheck2[\"default\"])(this, Logger);\r\n    this._level = level;\r\n    this._loggerFunction = loggerFunction;\r\n  }\r\n  /**\r\n   * Create a new logger based on the given driver configuration.\r\n   * @param {Object} driverConfig the driver configuration as supplied by the user.\r\n   * @return {Logger} a new logger instance or a no-op logger when not configured.\r\n   */\r\n\r\n\r\n  (0, _createClass2[\"default\"])(Logger, [{\r\n    key: \"isErrorEnabled\",\r\n\r\n    /**\r\n     * Check if error logging is enabled, i.e. it is not a no-op implementation.\r\n     * @return {boolean} `true` when enabled, `false` otherwise.\r\n     */\r\n    value: function isErrorEnabled() {\r\n      return isLevelEnabled(this._level, ERROR);\r\n    }\r\n    /**\r\n     * Log an error message.\r\n     * @param {string} message the message to log.\r\n     */\r\n\r\n  }, {\r\n    key: \"error\",\r\n    value: function error(message) {\r\n      if (this.isErrorEnabled()) {\r\n        this._loggerFunction(ERROR, message);\r\n      }\r\n    }\r\n    /**\r\n     * Check if warn logging is enabled, i.e. it is not a no-op implementation.\r\n     * @return {boolean} `true` when enabled, `false` otherwise.\r\n     */\r\n\r\n  }, {\r\n    key: \"isWarnEnabled\",\r\n    value: function isWarnEnabled() {\r\n      return isLevelEnabled(this._level, WARN);\r\n    }\r\n    /**\r\n     * Log an warning message.\r\n     * @param {string} message the message to log.\r\n     */\r\n\r\n  }, {\r\n    key: \"warn\",\r\n    value: function warn(message) {\r\n      if (this.isWarnEnabled()) {\r\n        this._loggerFunction(WARN, message);\r\n      }\r\n    }\r\n    /**\r\n     * Check if info logging is enabled, i.e. it is not a no-op implementation.\r\n     * @return {boolean} `true` when enabled, `false` otherwise.\r\n     */\r\n\r\n  }, {\r\n    key: \"isInfoEnabled\",\r\n    value: function isInfoEnabled() {\r\n      return isLevelEnabled(this._level, INFO);\r\n    }\r\n    /**\r\n     * Log an info message.\r\n     * @param {string} message the message to log.\r\n     */\r\n\r\n  }, {\r\n    key: \"info\",\r\n    value: function info(message) {\r\n      if (this.isInfoEnabled()) {\r\n        this._loggerFunction(INFO, message);\r\n      }\r\n    }\r\n    /**\r\n     * Check if debug logging is enabled, i.e. it is not a no-op implementation.\r\n     * @return {boolean} `true` when enabled, `false` otherwise.\r\n     */\r\n\r\n  }, {\r\n    key: \"isDebugEnabled\",\r\n    value: function isDebugEnabled() {\r\n      return isLevelEnabled(this._level, DEBUG);\r\n    }\r\n    /**\r\n     * Log a debug message.\r\n     * @param {string} message the message to log.\r\n     */\r\n\r\n  }, {\r\n    key: \"debug\",\r\n    value: function debug(message) {\r\n      if (this.isDebugEnabled()) {\r\n        this._loggerFunction(DEBUG, message);\r\n      }\r\n    }\r\n  }], [{\r\n    key: \"create\",\r\n    value: function create(driverConfig) {\r\n      if (driverConfig && driverConfig.logging) {\r\n        var loggingConfig = driverConfig.logging;\r\n        var level = extractConfiguredLevel(loggingConfig);\r\n        var loggerFunction = extractConfiguredLogger(loggingConfig);\r\n        return new Logger(level, loggerFunction);\r\n      }\r\n\r\n      return this.noOp();\r\n    }\r\n    /**\r\n     * Create a no-op logger implementation.\r\n     * @return {Logger} the no-op logger implementation.\r\n     */\r\n\r\n  }, {\r\n    key: \"noOp\",\r\n    value: function noOp() {\r\n      return noOpLogger;\r\n    }\r\n  }]);\r\n  return Logger;\r\n}();\r\n\r\nvar NoOpLogger =\r\n/*#__PURE__*/\r\nfunction (_Logger) {\r\n  (0, _inherits2[\"default\"])(NoOpLogger, _Logger);\r\n\r\n  function NoOpLogger() {\r\n    (0, _classCallCheck2[\"default\"])(this, NoOpLogger);\r\n    return (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(NoOpLogger).call(this, null, null));\r\n  }\r\n\r\n  (0, _createClass2[\"default\"])(NoOpLogger, [{\r\n    key: \"isErrorEnabled\",\r\n    value: function isErrorEnabled() {\r\n      return false;\r\n    }\r\n  }, {\r\n    key: \"error\",\r\n    value: function error(message) {}\r\n  }, {\r\n    key: \"isWarnEnabled\",\r\n    value: function isWarnEnabled() {\r\n      return false;\r\n    }\r\n  }, {\r\n    key: \"warn\",\r\n    value: function warn(message) {}\r\n  }, {\r\n    key: \"isInfoEnabled\",\r\n    value: function isInfoEnabled() {\r\n      return false;\r\n    }\r\n  }, {\r\n    key: \"info\",\r\n    value: function info(message) {}\r\n  }, {\r\n    key: \"isDebugEnabled\",\r\n    value: function isDebugEnabled() {\r\n      return false;\r\n    }\r\n  }, {\r\n    key: \"debug\",\r\n    value: function debug(message) {}\r\n  }]);\r\n  return NoOpLogger;\r\n}(Logger);\r\n\r\nvar noOpLogger = new NoOpLogger();\r\n/**\r\n * Check if the given logging level is enabled.\r\n * @param {string} configuredLevel the configured level.\r\n * @param {string} targetLevel the level to check.\r\n * @return {boolean} value of `true` when enabled, `false` otherwise.\r\n */\r\n\r\nfunction isLevelEnabled(configuredLevel, targetLevel) {\r\n  return levels[configuredLevel] >= levels[targetLevel];\r\n}\r\n/**\r\n * Extract the configured logging level from the driver's logging configuration.\r\n * @param {Object} loggingConfig the logging configuration.\r\n * @return {string} the configured log level or default when none configured.\r\n */\r\n\r\n\r\nfunction extractConfiguredLevel(loggingConfig) {\r\n  if (loggingConfig && loggingConfig.level) {\r\n    var configuredLevel = loggingConfig.level;\r\n    var value = levels[configuredLevel];\r\n\r\n    if (!value && value !== 0) {\r\n      throw (0, _error.newError)(\"Illegal logging level: \".concat(configuredLevel, \". Supported levels are: \").concat(Object.keys(levels)));\r\n    }\r\n\r\n    return configuredLevel;\r\n  }\r\n\r\n  return DEFAULT_LEVEL;\r\n}\r\n/**\r\n * Extract the configured logger function from the driver's logging configuration.\r\n * @param {Object} loggingConfig the logging configuration.\r\n * @return {function(level: string, message: string)} the configured logging function.\r\n */\r\n\r\n\r\nfunction extractConfiguredLogger(loggingConfig) {\r\n  if (loggingConfig && loggingConfig.logger) {\r\n    var configuredLogger = loggingConfig.logger;\r\n\r\n    if (configuredLogger && typeof configuredLogger === 'function') {\r\n      return configuredLogger;\r\n    }\r\n  }\r\n\r\n  throw (0, _error.newError)(\"Illegal logger function: \".concat(loggingConfig.logger));\r\n}\r\n\r\nvar _default = Logger;\r\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}