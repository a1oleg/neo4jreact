{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _browserBuf = _interopRequireDefault(require(\"./browser-buf\"));\n\nvar _error = require(\"../../error\");\n\nvar _util = require(\"../util\");\n/**\r\n * Copyright (c) 2002-2020 \"Neo4j,\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Just to be sure that these values are with us even after WebSocket is injected\n// for tests.\n\n\nvar WS_CONNECTING = 0;\nvar WS_OPEN = 1;\nvar WS_CLOSING = 2;\nvar WS_CLOSED = 3;\n/**\r\n * Create a new WebSocketChannel to be used in web browsers.\r\n * @access private\r\n */\n\nvar WebSocketChannel = /*#__PURE__*/function () {\n  /**\r\n   * Create new instance\r\n   * @param {ChannelConfig} config - configuration for this channel.\r\n   * @param {function(): string} protocolSupplier - function that detects protocol of the web page. Should only be used in tests.\r\n   */\n  function WebSocketChannel(config) {\n    var protocolSupplier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : detectWebPageProtocol;\n    var socketFactory = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (url) {\n      return new WebSocket(url);\n    };\n    (0, _classCallCheck2[\"default\"])(this, WebSocketChannel);\n    this._open = true;\n    this._pending = [];\n    this._error = null;\n    this._handleConnectionError = this._handleConnectionError.bind(this);\n    this._config = config;\n\n    var _determineWebSocketSc = determineWebSocketScheme(config, protocolSupplier),\n        scheme = _determineWebSocketSc.scheme,\n        error = _determineWebSocketSc.error;\n\n    if (error) {\n      this._error = error;\n      return;\n    }\n\n    this._ws = createWebSocket(scheme, config.address, socketFactory);\n    this._ws.binaryType = 'arraybuffer';\n    var self = this; // All connection errors are not sent to the error handler\n    // we must also check for dirty close calls\n\n    this._ws.onclose = function (e) {\n      if (e && !e.wasClean) {\n        self._handleConnectionError();\n      }\n    };\n\n    this._ws.onopen = function () {\n      // Connected! Cancel the connection timeout\n      self._clearConnectionTimeout(); // Drain all pending messages\n\n\n      var pending = self._pending;\n      self._pending = null;\n\n      for (var i = 0; i < pending.length; i++) {\n        self.write(pending[i]);\n      }\n    };\n\n    this._ws.onmessage = function (event) {\n      if (self.onmessage) {\n        var b = new _browserBuf[\"default\"](event.data);\n        self.onmessage(b);\n      }\n    };\n\n    this._ws.onerror = this._handleConnectionError;\n    this._connectionTimeoutFired = false;\n    this._connectionTimeoutId = this._setupConnectionTimeout();\n  }\n\n  (0, _createClass2[\"default\"])(WebSocketChannel, [{\n    key: \"_handleConnectionError\",\n    value: function _handleConnectionError() {\n      if (this._connectionTimeoutFired) {\n        // timeout fired - not connected within configured time\n        this._error = (0, _error.newError)(\"Failed to establish connection in \".concat(this._config.connectionTimeout, \"ms\"), this._config.connectionErrorCode);\n\n        if (this.onerror) {\n          this.onerror(this._error);\n        }\n\n        return;\n      } // onerror triggers on websocket close as well.. don't get me started.\n\n\n      if (this._open) {\n        // http://stackoverflow.com/questions/25779831/how-to-catch-websocket-connection-to-ws-xxxnn-failed-connection-closed-be\n        this._error = (0, _error.newError)('WebSocket connection failure. Due to security ' + 'constraints in your web browser, the reason for the failure is not available ' + 'to this Neo4j Driver. Please use your browsers development console to determine ' + 'the root cause of the failure. Common reasons include the database being ' + 'unavailable, using the wrong connection URL or temporary network problems. ' + 'If you have enabled encryption, ensure your browser is configured to trust the ' + 'certificate Neo4j is configured to use. WebSocket `readyState` is: ' + this._ws.readyState, this._config.connectionErrorCode);\n\n        if (this.onerror) {\n          this.onerror(this._error);\n        }\n      }\n    }\n    /**\r\n     * Write the passed in buffer to connection\r\n     * @param {HeapBuffer} buffer - Buffer to write\r\n     */\n\n  }, {\n    key: \"write\",\n    value: function write(buffer) {\n      // If there is a pending queue, push this on that queue. This means\n      // we are not yet connected, so we queue things locally.\n      if (this._pending !== null) {\n        this._pending.push(buffer);\n      } else if (buffer instanceof _browserBuf[\"default\"]) {\n        this._ws.send(buffer._buffer);\n      } else {\n        throw (0, _error.newError)(\"Don't know how to send buffer: \" + buffer);\n      }\n    }\n    /**\r\n     * Close the connection\r\n     * @returns {Promise} A promise that will be resolved after channel is closed\r\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (_this._ws && _this._ws.readyState !== WS_CLOSED) {\n          _this._open = false;\n\n          _this._clearConnectionTimeout();\n\n          _this._ws.onclose = function () {\n            return resolve();\n          };\n\n          _this._ws.close();\n        } else {\n          resolve();\n        }\n      });\n    }\n    /**\r\n     * Set connection timeout on the given WebSocket, if configured.\r\n     * @return {number} the timeout id or null.\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_setupConnectionTimeout\",\n    value: function _setupConnectionTimeout() {\n      var _this2 = this;\n\n      var timeout = this._config.connectionTimeout;\n\n      if (timeout) {\n        var webSocket = this._ws;\n        return setTimeout(function () {\n          if (webSocket.readyState !== WS_OPEN) {\n            _this2._connectionTimeoutFired = true;\n            webSocket.close();\n          }\n        }, timeout);\n      }\n\n      return null;\n    }\n    /**\r\n     * Remove active connection timeout, if any.\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_clearConnectionTimeout\",\n    value: function _clearConnectionTimeout() {\n      var timeoutId = this._connectionTimeoutId;\n\n      if (timeoutId || timeoutId === 0) {\n        this._connectionTimeoutFired = false;\n        this._connectionTimeoutId = null;\n        clearTimeout(timeoutId);\n      }\n    }\n  }]);\n  return WebSocketChannel;\n}();\n\nexports[\"default\"] = WebSocketChannel;\n\nfunction createWebSocket(scheme, address, socketFactory) {\n  var url = scheme + '://' + address.asHostPort();\n\n  try {\n    return socketFactory(url);\n  } catch (error) {\n    if (isIPv6AddressIssueOnWindows(error, address)) {\n      // WebSocket in IE and Edge browsers on Windows do not support regular IPv6 address syntax because they contain ':'.\n      // It's an invalid character for UNC (https://en.wikipedia.org/wiki/IPv6_address#Literal_IPv6_addresses_in_UNC_path_names)\n      // and Windows requires IPv6 to be changes in the following way:\n      //   1) replace all ':' with '-'\n      //   2) replace '%' with 's' for link-local address\n      //   3) append '.ipv6-literal.net' suffix\n      // only then resulting string can be considered a valid IPv6 address. Yes, this is extremely weird!\n      // For more details see:\n      //   https://social.msdn.microsoft.com/Forums/ie/en-US/06cca73b-63c2-4bf9-899b-b229c50449ff/whether-ie10-websocket-support-ipv6?forum=iewebdevelopment\n      //   https://www.itdojo.com/ipv6-addresses-and-unc-path-names-overcoming-illegal/\n      // Creation of WebSocket with unconverted address results in SyntaxError without message or stacktrace.\n      // That is why here we \"catch\" SyntaxError and rewrite IPv6 address if needed.\n      var windowsFriendlyUrl = asWindowsFriendlyIPv6Address(scheme, address);\n      return socketFactory(windowsFriendlyUrl);\n    } else {\n      throw error;\n    }\n  }\n}\n\nfunction isIPv6AddressIssueOnWindows(error, address) {\n  return error.name === 'SyntaxError' && isIPv6Address(address.asHostPort());\n}\n\nfunction isIPv6Address(hostAndPort) {\n  return hostAndPort.charAt(0) === '[' && hostAndPort.indexOf(']') !== -1;\n}\n\nfunction asWindowsFriendlyIPv6Address(scheme, address) {\n  // replace all ':' with '-'\n  var hostWithoutColons = address.host().replace(new RegExp(':', 'g'), '-'); // replace '%' with 's' for link-local IPv6 address like 'fe80::1%lo0'\n\n  var hostWithoutPercent = hostWithoutColons.replace('%', 's'); // append magic '.ipv6-literal.net' suffix\n\n  var ipv6Host = hostWithoutPercent + '.ipv6-literal.net';\n  return \"\".concat(scheme, \"://\").concat(ipv6Host, \":\").concat(address.port());\n}\n/**\r\n * @param {ChannelConfig} config - configuration for the channel.\r\n * @param {function(): string} protocolSupplier - function that detects protocol of the web page.\r\n * @return {{scheme: string|null, error: Neo4jError|null}} object containing either scheme or error.\r\n */\n\n\nfunction determineWebSocketScheme(config, protocolSupplier) {\n  var encryptionOn = isEncryptionExplicitlyTurnedOn(config);\n  var encryptionOff = isEncryptionExplicitlyTurnedOff(config);\n  var trust = config.trust;\n  var secureProtocol = isProtocolSecure(protocolSupplier);\n  verifyEncryptionSettings(encryptionOn, encryptionOff, secureProtocol);\n\n  if (encryptionOff) {\n    // encryption explicitly turned off in the config\n    return {\n      scheme: 'ws',\n      error: null\n    };\n  }\n\n  if (secureProtocol) {\n    // driver is used in a secure https web page, use 'wss'\n    return {\n      scheme: 'wss',\n      error: null\n    };\n  }\n\n  if (encryptionOn) {\n    // encryption explicitly requested in the config\n    if (!trust || trust === 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES') {\n      // trust strategy not specified or the only supported strategy is specified\n      return {\n        scheme: 'wss',\n        error: null\n      };\n    } else {\n      var error = (0, _error.newError)('The browser version of this driver only supports one trust ' + \"strategy, 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES'. \" + trust + ' is not supported. Please ' + 'either use TRUST_SYSTEM_CA_SIGNED_CERTIFICATES or disable encryption by setting ' + '`encrypted:\"' + _util.ENCRYPTION_OFF + '\"` in the driver configuration.');\n      return {\n        scheme: null,\n        error: error\n      };\n    }\n  } // default to unencrypted web socket\n\n\n  return {\n    scheme: 'ws',\n    error: null\n  };\n}\n/**\r\n * @param {ChannelConfig} config - configuration for the channel.\r\n * @return {boolean} `true` if encryption enabled in the config, `false` otherwise.\r\n */\n\n\nfunction isEncryptionExplicitlyTurnedOn(config) {\n  return config.encrypted === true || config.encrypted === _util.ENCRYPTION_ON;\n}\n/**\r\n * @param {ChannelConfig} config - configuration for the channel.\r\n * @return {boolean} `true` if encryption disabled in the config, `false` otherwise.\r\n */\n\n\nfunction isEncryptionExplicitlyTurnedOff(config) {\n  return config.encrypted === false || config.encrypted === _util.ENCRYPTION_OFF;\n}\n/**\r\n * @param {function(): string} protocolSupplier - function that detects protocol of the web page.\r\n * @return {boolean} `true` if protocol returned by the given function is secure, `false` otherwise.\r\n */\n\n\nfunction isProtocolSecure(protocolSupplier) {\n  var protocol = typeof protocolSupplier === 'function' ? protocolSupplier() : '';\n  return protocol && protocol.toLowerCase().indexOf('https') >= 0;\n}\n\nfunction verifyEncryptionSettings(encryptionOn, encryptionOff, secureProtocol) {\n  if (encryptionOn && !secureProtocol) {\n    // encryption explicitly turned on for a driver used on a HTTP web page\n    console.warn('Neo4j driver is configured to use secure WebSocket on a HTTP web page. ' + 'WebSockets might not work in a mixed content environment. ' + 'Please consider configuring driver to not use encryption.');\n  } else if (encryptionOff && secureProtocol) {\n    // encryption explicitly turned off for a driver used on a HTTPS web page\n    console.warn('Neo4j driver is configured to use insecure WebSocket on a HTTPS web page. ' + 'WebSockets might not work in a mixed content environment. ' + 'Please consider configuring driver to use encryption.');\n  }\n}\n\nfunction detectWebPageProtocol() {\n  return typeof window !== 'undefined' && window.location ? window.location.protocol : null;\n}","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/node_modules/neo4j-driver/lib/internal/browser/browser-channel.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_classCallCheck2","_createClass2","_browserBuf","_error","_util","WS_CONNECTING","WS_OPEN","WS_CLOSING","WS_CLOSED","WebSocketChannel","config","protocolSupplier","arguments","length","undefined","detectWebPageProtocol","socketFactory","url","WebSocket","_open","_pending","_handleConnectionError","bind","_config","_determineWebSocketSc","determineWebSocketScheme","scheme","error","_ws","createWebSocket","address","binaryType","self","onclose","e","wasClean","onopen","_clearConnectionTimeout","pending","i","write","onmessage","event","b","data","onerror","_connectionTimeoutFired","_connectionTimeoutId","_setupConnectionTimeout","key","newError","concat","connectionTimeout","connectionErrorCode","readyState","buffer","push","send","_buffer","close","_this","Promise","resolve","reject","_this2","timeout","webSocket","setTimeout","timeoutId","clearTimeout","asHostPort","isIPv6AddressIssueOnWindows","windowsFriendlyUrl","asWindowsFriendlyIPv6Address","name","isIPv6Address","hostAndPort","charAt","indexOf","hostWithoutColons","host","replace","RegExp","hostWithoutPercent","ipv6Host","port","encryptionOn","isEncryptionExplicitlyTurnedOn","encryptionOff","isEncryptionExplicitlyTurnedOff","trust","secureProtocol","isProtocolSecure","verifyEncryptionSettings","ENCRYPTION_OFF","encrypted","ENCRYPTION_ON","protocol","toLowerCase","console","warn","window","location"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports[\"default\"] = void 0;\r\n\r\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\r\n\r\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\r\n\r\nvar _browserBuf = _interopRequireDefault(require(\"./browser-buf\"));\r\n\r\nvar _error = require(\"../../error\");\r\n\r\nvar _util = require(\"../util\");\r\n\r\n/**\r\n * Copyright (c) 2002-2020 \"Neo4j,\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Just to be sure that these values are with us even after WebSocket is injected\r\n// for tests.\r\nvar WS_CONNECTING = 0;\r\nvar WS_OPEN = 1;\r\nvar WS_CLOSING = 2;\r\nvar WS_CLOSED = 3;\r\n/**\r\n * Create a new WebSocketChannel to be used in web browsers.\r\n * @access private\r\n */\r\n\r\nvar WebSocketChannel =\r\n/*#__PURE__*/\r\nfunction () {\r\n  /**\r\n   * Create new instance\r\n   * @param {ChannelConfig} config - configuration for this channel.\r\n   * @param {function(): string} protocolSupplier - function that detects protocol of the web page. Should only be used in tests.\r\n   */\r\n  function WebSocketChannel(config) {\r\n    var protocolSupplier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : detectWebPageProtocol;\r\n    var socketFactory = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (url) {\r\n      return new WebSocket(url);\r\n    };\r\n    (0, _classCallCheck2[\"default\"])(this, WebSocketChannel);\r\n    this._open = true;\r\n    this._pending = [];\r\n    this._error = null;\r\n    this._handleConnectionError = this._handleConnectionError.bind(this);\r\n    this._config = config;\r\n\r\n    var _determineWebSocketSc = determineWebSocketScheme(config, protocolSupplier),\r\n        scheme = _determineWebSocketSc.scheme,\r\n        error = _determineWebSocketSc.error;\r\n\r\n    if (error) {\r\n      this._error = error;\r\n      return;\r\n    }\r\n\r\n    this._ws = createWebSocket(scheme, config.address, socketFactory);\r\n    this._ws.binaryType = 'arraybuffer';\r\n    var self = this; // All connection errors are not sent to the error handler\r\n    // we must also check for dirty close calls\r\n\r\n    this._ws.onclose = function (e) {\r\n      if (e && !e.wasClean) {\r\n        self._handleConnectionError();\r\n      }\r\n    };\r\n\r\n    this._ws.onopen = function () {\r\n      // Connected! Cancel the connection timeout\r\n      self._clearConnectionTimeout(); // Drain all pending messages\r\n\r\n\r\n      var pending = self._pending;\r\n      self._pending = null;\r\n\r\n      for (var i = 0; i < pending.length; i++) {\r\n        self.write(pending[i]);\r\n      }\r\n    };\r\n\r\n    this._ws.onmessage = function (event) {\r\n      if (self.onmessage) {\r\n        var b = new _browserBuf[\"default\"](event.data);\r\n        self.onmessage(b);\r\n      }\r\n    };\r\n\r\n    this._ws.onerror = this._handleConnectionError;\r\n    this._connectionTimeoutFired = false;\r\n    this._connectionTimeoutId = this._setupConnectionTimeout();\r\n  }\r\n\r\n  (0, _createClass2[\"default\"])(WebSocketChannel, [{\r\n    key: \"_handleConnectionError\",\r\n    value: function _handleConnectionError() {\r\n      if (this._connectionTimeoutFired) {\r\n        // timeout fired - not connected within configured time\r\n        this._error = (0, _error.newError)(\"Failed to establish connection in \".concat(this._config.connectionTimeout, \"ms\"), this._config.connectionErrorCode);\r\n\r\n        if (this.onerror) {\r\n          this.onerror(this._error);\r\n        }\r\n\r\n        return;\r\n      } // onerror triggers on websocket close as well.. don't get me started.\r\n\r\n\r\n      if (this._open) {\r\n        // http://stackoverflow.com/questions/25779831/how-to-catch-websocket-connection-to-ws-xxxnn-failed-connection-closed-be\r\n        this._error = (0, _error.newError)('WebSocket connection failure. Due to security ' + 'constraints in your web browser, the reason for the failure is not available ' + 'to this Neo4j Driver. Please use your browsers development console to determine ' + 'the root cause of the failure. Common reasons include the database being ' + 'unavailable, using the wrong connection URL or temporary network problems. ' + 'If you have enabled encryption, ensure your browser is configured to trust the ' + 'certificate Neo4j is configured to use. WebSocket `readyState` is: ' + this._ws.readyState, this._config.connectionErrorCode);\r\n\r\n        if (this.onerror) {\r\n          this.onerror(this._error);\r\n        }\r\n      }\r\n    }\r\n    /**\r\n     * Write the passed in buffer to connection\r\n     * @param {HeapBuffer} buffer - Buffer to write\r\n     */\r\n\r\n  }, {\r\n    key: \"write\",\r\n    value: function write(buffer) {\r\n      // If there is a pending queue, push this on that queue. This means\r\n      // we are not yet connected, so we queue things locally.\r\n      if (this._pending !== null) {\r\n        this._pending.push(buffer);\r\n      } else if (buffer instanceof _browserBuf[\"default\"]) {\r\n        this._ws.send(buffer._buffer);\r\n      } else {\r\n        throw (0, _error.newError)(\"Don't know how to send buffer: \" + buffer);\r\n      }\r\n    }\r\n    /**\r\n     * Close the connection\r\n     * @returns {Promise} A promise that will be resolved after channel is closed\r\n     */\r\n\r\n  }, {\r\n    key: \"close\",\r\n    value: function close() {\r\n      var _this = this;\r\n\r\n      return new Promise(function (resolve, reject) {\r\n        if (_this._ws && _this._ws.readyState !== WS_CLOSED) {\r\n          _this._open = false;\r\n\r\n          _this._clearConnectionTimeout();\r\n\r\n          _this._ws.onclose = function () {\r\n            return resolve();\r\n          };\r\n\r\n          _this._ws.close();\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n    }\r\n    /**\r\n     * Set connection timeout on the given WebSocket, if configured.\r\n     * @return {number} the timeout id or null.\r\n     * @private\r\n     */\r\n\r\n  }, {\r\n    key: \"_setupConnectionTimeout\",\r\n    value: function _setupConnectionTimeout() {\r\n      var _this2 = this;\r\n\r\n      var timeout = this._config.connectionTimeout;\r\n\r\n      if (timeout) {\r\n        var webSocket = this._ws;\r\n        return setTimeout(function () {\r\n          if (webSocket.readyState !== WS_OPEN) {\r\n            _this2._connectionTimeoutFired = true;\r\n            webSocket.close();\r\n          }\r\n        }, timeout);\r\n      }\r\n\r\n      return null;\r\n    }\r\n    /**\r\n     * Remove active connection timeout, if any.\r\n     * @private\r\n     */\r\n\r\n  }, {\r\n    key: \"_clearConnectionTimeout\",\r\n    value: function _clearConnectionTimeout() {\r\n      var timeoutId = this._connectionTimeoutId;\r\n\r\n      if (timeoutId || timeoutId === 0) {\r\n        this._connectionTimeoutFired = false;\r\n        this._connectionTimeoutId = null;\r\n        clearTimeout(timeoutId);\r\n      }\r\n    }\r\n  }]);\r\n  return WebSocketChannel;\r\n}();\r\n\r\nexports[\"default\"] = WebSocketChannel;\r\n\r\nfunction createWebSocket(scheme, address, socketFactory) {\r\n  var url = scheme + '://' + address.asHostPort();\r\n\r\n  try {\r\n    return socketFactory(url);\r\n  } catch (error) {\r\n    if (isIPv6AddressIssueOnWindows(error, address)) {\r\n      // WebSocket in IE and Edge browsers on Windows do not support regular IPv6 address syntax because they contain ':'.\r\n      // It's an invalid character for UNC (https://en.wikipedia.org/wiki/IPv6_address#Literal_IPv6_addresses_in_UNC_path_names)\r\n      // and Windows requires IPv6 to be changes in the following way:\r\n      //   1) replace all ':' with '-'\r\n      //   2) replace '%' with 's' for link-local address\r\n      //   3) append '.ipv6-literal.net' suffix\r\n      // only then resulting string can be considered a valid IPv6 address. Yes, this is extremely weird!\r\n      // For more details see:\r\n      //   https://social.msdn.microsoft.com/Forums/ie/en-US/06cca73b-63c2-4bf9-899b-b229c50449ff/whether-ie10-websocket-support-ipv6?forum=iewebdevelopment\r\n      //   https://www.itdojo.com/ipv6-addresses-and-unc-path-names-overcoming-illegal/\r\n      // Creation of WebSocket with unconverted address results in SyntaxError without message or stacktrace.\r\n      // That is why here we \"catch\" SyntaxError and rewrite IPv6 address if needed.\r\n      var windowsFriendlyUrl = asWindowsFriendlyIPv6Address(scheme, address);\r\n      return socketFactory(windowsFriendlyUrl);\r\n    } else {\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nfunction isIPv6AddressIssueOnWindows(error, address) {\r\n  return error.name === 'SyntaxError' && isIPv6Address(address.asHostPort());\r\n}\r\n\r\nfunction isIPv6Address(hostAndPort) {\r\n  return hostAndPort.charAt(0) === '[' && hostAndPort.indexOf(']') !== -1;\r\n}\r\n\r\nfunction asWindowsFriendlyIPv6Address(scheme, address) {\r\n  // replace all ':' with '-'\r\n  var hostWithoutColons = address.host().replace(new RegExp(':', 'g'), '-'); // replace '%' with 's' for link-local IPv6 address like 'fe80::1%lo0'\r\n\r\n  var hostWithoutPercent = hostWithoutColons.replace('%', 's'); // append magic '.ipv6-literal.net' suffix\r\n\r\n  var ipv6Host = hostWithoutPercent + '.ipv6-literal.net';\r\n  return \"\".concat(scheme, \"://\").concat(ipv6Host, \":\").concat(address.port());\r\n}\r\n/**\r\n * @param {ChannelConfig} config - configuration for the channel.\r\n * @param {function(): string} protocolSupplier - function that detects protocol of the web page.\r\n * @return {{scheme: string|null, error: Neo4jError|null}} object containing either scheme or error.\r\n */\r\n\r\n\r\nfunction determineWebSocketScheme(config, protocolSupplier) {\r\n  var encryptionOn = isEncryptionExplicitlyTurnedOn(config);\r\n  var encryptionOff = isEncryptionExplicitlyTurnedOff(config);\r\n  var trust = config.trust;\r\n  var secureProtocol = isProtocolSecure(protocolSupplier);\r\n  verifyEncryptionSettings(encryptionOn, encryptionOff, secureProtocol);\r\n\r\n  if (encryptionOff) {\r\n    // encryption explicitly turned off in the config\r\n    return {\r\n      scheme: 'ws',\r\n      error: null\r\n    };\r\n  }\r\n\r\n  if (secureProtocol) {\r\n    // driver is used in a secure https web page, use 'wss'\r\n    return {\r\n      scheme: 'wss',\r\n      error: null\r\n    };\r\n  }\r\n\r\n  if (encryptionOn) {\r\n    // encryption explicitly requested in the config\r\n    if (!trust || trust === 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES') {\r\n      // trust strategy not specified or the only supported strategy is specified\r\n      return {\r\n        scheme: 'wss',\r\n        error: null\r\n      };\r\n    } else {\r\n      var error = (0, _error.newError)('The browser version of this driver only supports one trust ' + \"strategy, 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES'. \" + trust + ' is not supported. Please ' + 'either use TRUST_SYSTEM_CA_SIGNED_CERTIFICATES or disable encryption by setting ' + '`encrypted:\"' + _util.ENCRYPTION_OFF + '\"` in the driver configuration.');\r\n      return {\r\n        scheme: null,\r\n        error: error\r\n      };\r\n    }\r\n  } // default to unencrypted web socket\r\n\r\n\r\n  return {\r\n    scheme: 'ws',\r\n    error: null\r\n  };\r\n}\r\n/**\r\n * @param {ChannelConfig} config - configuration for the channel.\r\n * @return {boolean} `true` if encryption enabled in the config, `false` otherwise.\r\n */\r\n\r\n\r\nfunction isEncryptionExplicitlyTurnedOn(config) {\r\n  return config.encrypted === true || config.encrypted === _util.ENCRYPTION_ON;\r\n}\r\n/**\r\n * @param {ChannelConfig} config - configuration for the channel.\r\n * @return {boolean} `true` if encryption disabled in the config, `false` otherwise.\r\n */\r\n\r\n\r\nfunction isEncryptionExplicitlyTurnedOff(config) {\r\n  return config.encrypted === false || config.encrypted === _util.ENCRYPTION_OFF;\r\n}\r\n/**\r\n * @param {function(): string} protocolSupplier - function that detects protocol of the web page.\r\n * @return {boolean} `true` if protocol returned by the given function is secure, `false` otherwise.\r\n */\r\n\r\n\r\nfunction isProtocolSecure(protocolSupplier) {\r\n  var protocol = typeof protocolSupplier === 'function' ? protocolSupplier() : '';\r\n  return protocol && protocol.toLowerCase().indexOf('https') >= 0;\r\n}\r\n\r\nfunction verifyEncryptionSettings(encryptionOn, encryptionOff, secureProtocol) {\r\n  if (encryptionOn && !secureProtocol) {\r\n    // encryption explicitly turned on for a driver used on a HTTP web page\r\n    console.warn('Neo4j driver is configured to use secure WebSocket on a HTTP web page. ' + 'WebSockets might not work in a mixed content environment. ' + 'Please consider configuring driver to not use encryption.');\r\n  } else if (encryptionOff && secureProtocol) {\r\n    // encryption explicitly turned off for a driver used on a HTTPS web page\r\n    console.warn('Neo4j driver is configured to use insecure WebSocket on a HTTPS web page. ' + 'WebSockets might not work in a mixed content environment. ' + 'Please consider configuring driver to use encryption.');\r\n  }\r\n}\r\n\r\nfunction detectWebPageProtocol() {\r\n  return typeof window !== 'undefined' && window.location ? window.location.protocol : null;\r\n}"]},"metadata":{},"sourceType":"script"}