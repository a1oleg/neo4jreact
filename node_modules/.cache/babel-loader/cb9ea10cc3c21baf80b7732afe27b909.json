{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a1ole\\\\Documents\\\\GitHub\\\\neo4jreact\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport Selector from \"./Selector\";\nimport DirList from \"./DirList\";\n\nvar neo4j = require('neo4j-driver');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.xfetch = param => {\n      //console.log(input)\n      const session = this.driver.session({\n        defaultAccessMode: neo4j.session.READ\n      });\n      const res = [];\n      session.run('MATCH (d{Name: $nameParam})-[:value]->(v) RETURN v.Name', {\n        nameParam: param\n      }).subscribe({\n        //onKeys: keys => {\n        //console.log(keys)\n        //},\n        onNext: record => {\n          res.push(record._fields[0]); // console.log(record._fields[0]);\n          // this.setState({ [this.state.allDirs]: [this.state.allDirs.filter(function(item) { \n          //     return item.name === param\n          // })[0].values.push(record._fields[0])] });\n        },\n        onCompleted: () => {\n          this.setState({\n            [this.state.allDirs]: [this.state.allDirs.push({\n              name: param,\n              values: res\n            })]\n          });\n          console.log(this.state.allDirs);\n          session.close(); // returns a Promise\n        },\n        onError: error => {\n          console.log(error);\n        }\n      });\n    };\n\n    this.addValue = input => {\n      console.log(input);\n    };\n\n    this.state = {\n      allDirs: [],\n      // actDirs: [],\n      results: []\n    };\n    this.driver = neo4j.driver('bolt://localhost:7687', neo4j.auth.basic('neo4j', 'letmein'));\n    this.xfetch('Мать справочников');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, this.state.allDirs.filter(function (item) {\n      return item.values.length > 0 && item.name !== 'Мать справочников';\n    }).map(n => {\n      return /*#__PURE__*/React.createElement(Selector, {\n        name: n.name,\n        values: n.values,\n        change: this.addValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 18\n        }\n      }); //change ={this.addDir}       \n    }), this.state.allDirs.filter(function (item) {\n      return item.name == 'Мать справочников';\n    }) > 0 ? /*#__PURE__*/React.createElement(Selector, {\n      name: 'Справочники',\n      values: this.state.allDirs.filter(function (item) {\n        return item.name == 'Мать справочников';\n      })[0].values,\n      change: this.xfetch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, \"\\u0436\\u0434\\u0451\\u043C\\u0441...\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/src/App.js"],"names":["React","Component","Selector","DirList","neo4j","require","App","constructor","props","xfetch","param","session","driver","defaultAccessMode","READ","res","run","nameParam","subscribe","onNext","record","push","_fields","onCompleted","setState","state","allDirs","name","values","console","log","close","onError","error","addValue","input","results","auth","basic","render","filter","item","length","map","n"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport './App.css';\r\nimport Selector from \"./Selector\";\r\nimport DirList from \"./DirList\";\r\nvar neo4j = require('neo4j-driver')\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      allDirs: [],\r\n      // actDirs: [],\r\n      results: [],\r\n\r\n    };\r\n    \r\n    this.driver = neo4j.driver(\r\n      'bolt://localhost:7687',\r\n      neo4j.auth.basic('neo4j', 'letmein')\r\n    )\r\n    this.xfetch('Мать справочников'); \r\n  }\r\n\r\n  xfetch = (param) => {\r\n    //console.log(input)\r\n    const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n    const res = [];\r\n    session\r\n    .run('MATCH (d{Name: $nameParam})-[:value]->(v) RETURN v.Name', {\r\n      nameParam: param\r\n    })\r\n    .subscribe({\r\n      //onKeys: keys => {\r\n        //console.log(keys)\r\n      //},\r\n      onNext: record => {\r\n        res.push(record._fields[0]);\r\n        // console.log(record._fields[0]);\r\n        // this.setState({ [this.state.allDirs]: [this.state.allDirs.filter(function(item) { \r\n        //     return item.name === param\r\n        // })[0].values.push(record._fields[0])] });\r\n      },\r\n      onCompleted: () => {    \r\n        this.setState({ [this.state.allDirs]: [this.state.allDirs.push({name:param, values:res} )]});\r\n        console.log(this.state.allDirs);\r\n        session.close();// returns a Promise\r\n        \r\n      },\r\n      onError: error => {\r\n        console.log(error)\r\n      }\r\n    });    \r\n  };\r\n\r\n  addValue = input => {\r\n    console.log(input)\r\n\r\n  };\r\n\r\n  render() {      \r\n      return (      \r\n      <main> \r\n             {this.state.allDirs.filter(function(item) { \r\n                return item.values.length > 0 && item.name !== 'Мать справочников'\r\n            })\r\n             .map(n => {               \r\n          return <Selector name= {n.name} values = {n.values}  change ={this.addValue}/>//change ={this.addDir}       \r\n       })}\r\n\r\n\r\n        {this.state.allDirs.filter(function(item) { \r\n                return item.name == 'Мать справочников'\r\n            }) > 0 ? \r\n            <Selector name= {'Справочники'} values={this.state.allDirs.filter(function(item) { \r\n              return item.name == 'Мать справочников'\r\n          })[0].values} change ={this.xfetch}/>\r\n            : <span>ждёмс...</span>\r\n            }\r\n         \r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}