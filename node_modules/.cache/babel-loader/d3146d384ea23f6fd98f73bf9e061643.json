{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isEmptyObjectOrNull = isEmptyObjectOrNull;\nexports.isObject = isObject;\nexports.isString = isString;\nexports.assertObject = assertObject;\nexports.assertString = assertString;\nexports.assertNumber = assertNumber;\nexports.assertNumberOrInteger = assertNumberOrInteger;\nexports.assertValidDate = assertValidDate;\nexports.validateQueryAndParameters = validateQueryAndParameters;\nexports.ENCRYPTION_OFF = exports.ENCRYPTION_ON = void 0;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _integer = require(\"../integer\");\n/**\r\n * Copyright (c) 2002-2020 \"Neo4j,\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ENCRYPTION_ON = 'ENCRYPTION_ON';\nexports.ENCRYPTION_ON = ENCRYPTION_ON;\nvar ENCRYPTION_OFF = 'ENCRYPTION_OFF';\nexports.ENCRYPTION_OFF = ENCRYPTION_OFF;\n\nfunction isEmptyObjectOrNull(obj) {\n  if (obj === null) {\n    return true;\n  }\n\n  if (!isObject(obj)) {\n    return false;\n  }\n\n  for (var prop in obj) {\n    if (obj.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isObject(obj) {\n  return (0, _typeof2[\"default\"])(obj) === 'object' && !Array.isArray(obj) && obj !== null;\n}\n/**\r\n * Check and normalize given query and parameters.\r\n * @param {string|{text: string, parameters: object}} query the query to check.\r\n * @param {Object} parameters\r\n * @return {{query: string, params: object}} the normalized query with parameters.\r\n * @throws TypeError when either given query or parameters are invalid.\r\n */\n\n\nfunction validateQueryAndParameters(query, parameters) {\n  var validatedQuery = query;\n  var params = parameters || {};\n\n  if ((0, _typeof2[\"default\"])(query) === 'object' && query.text) {\n    validatedQuery = query.text;\n    params = query.parameters || {};\n  }\n\n  assertCypherQuery(validatedQuery);\n  assertQueryParameters(params);\n  return {\n    validatedQuery: validatedQuery,\n    params: params\n  };\n}\n\nfunction assertObject(obj, objName) {\n  if (!isObject(obj)) {\n    throw new TypeError(objName + ' expected to be an object but was: ' + JSON.stringify(obj));\n  }\n\n  return obj;\n}\n\nfunction assertString(obj, objName) {\n  if (!isString(obj)) {\n    throw new TypeError(objName + ' expected to be string but was: ' + JSON.stringify(obj));\n  }\n\n  return obj;\n}\n\nfunction assertNumber(obj, objName) {\n  if (typeof obj !== 'number') {\n    throw new TypeError(objName + ' expected to be a number but was: ' + JSON.stringify(obj));\n  }\n\n  return obj;\n}\n\nfunction assertNumberOrInteger(obj, objName) {\n  if (typeof obj !== 'number' && !(0, _integer.isInt)(obj)) {\n    throw new TypeError(objName + ' expected to be either a number or an Integer object but was: ' + JSON.stringify(obj));\n  }\n\n  return obj;\n}\n\nfunction assertValidDate(obj, objName) {\n  if (Object.prototype.toString.call(obj) !== '[object Date]') {\n    throw new TypeError(objName + ' expected to be a standard JavaScript Date but was: ' + JSON.stringify(obj));\n  }\n\n  if (Number.isNaN(obj.getTime())) {\n    throw new TypeError(objName + ' expected to be valid JavaScript Date but its time was NaN: ' + JSON.stringify(obj));\n  }\n\n  return obj;\n}\n\nfunction assertCypherQuery(obj) {\n  assertString(obj, 'Cypher query');\n\n  if (obj.trim().length === 0) {\n    throw new TypeError('Cypher query is expected to be a non-empty string.');\n  }\n}\n\nfunction assertQueryParameters(obj) {\n  if (!isObject(obj)) {\n    // objects created with `Object.create(null)` do not have a constructor property\n    var _constructor = obj.constructor ? ' ' + obj.constructor.name : '';\n\n    throw new TypeError(\"Query parameters are expected to either be undefined/null or an object, given:\".concat(_constructor, \" \").concat(obj));\n  }\n}\n\nfunction isString(str) {\n  return Object.prototype.toString.call(str) === '[object String]';\n}","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/node_modules/neo4j-driver/lib/internal/util.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","isEmptyObjectOrNull","isObject","isString","assertObject","assertString","assertNumber","assertNumberOrInteger","assertValidDate","validateQueryAndParameters","ENCRYPTION_OFF","ENCRYPTION_ON","_typeof2","_integer","obj","prop","hasOwnProperty","Array","isArray","query","parameters","validatedQuery","params","text","assertCypherQuery","assertQueryParameters","objName","TypeError","JSON","stringify","isInt","prototype","toString","call","Number","isNaN","getTime","trim","length","_constructor","constructor","name","concat","str"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.isEmptyObjectOrNull = isEmptyObjectOrNull;\r\nexports.isObject = isObject;\r\nexports.isString = isString;\r\nexports.assertObject = assertObject;\r\nexports.assertString = assertString;\r\nexports.assertNumber = assertNumber;\r\nexports.assertNumberOrInteger = assertNumberOrInteger;\r\nexports.assertValidDate = assertValidDate;\r\nexports.validateQueryAndParameters = validateQueryAndParameters;\r\nexports.ENCRYPTION_OFF = exports.ENCRYPTION_ON = void 0;\r\n\r\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\r\n\r\nvar _integer = require(\"../integer\");\r\n\r\n/**\r\n * Copyright (c) 2002-2020 \"Neo4j,\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ENCRYPTION_ON = 'ENCRYPTION_ON';\r\nexports.ENCRYPTION_ON = ENCRYPTION_ON;\r\nvar ENCRYPTION_OFF = 'ENCRYPTION_OFF';\r\nexports.ENCRYPTION_OFF = ENCRYPTION_OFF;\r\n\r\nfunction isEmptyObjectOrNull(obj) {\r\n  if (obj === null) {\r\n    return true;\r\n  }\r\n\r\n  if (!isObject(obj)) {\r\n    return false;\r\n  }\r\n\r\n  for (var prop in obj) {\r\n    if (obj.hasOwnProperty(prop)) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction isObject(obj) {\r\n  return (0, _typeof2[\"default\"])(obj) === 'object' && !Array.isArray(obj) && obj !== null;\r\n}\r\n/**\r\n * Check and normalize given query and parameters.\r\n * @param {string|{text: string, parameters: object}} query the query to check.\r\n * @param {Object} parameters\r\n * @return {{query: string, params: object}} the normalized query with parameters.\r\n * @throws TypeError when either given query or parameters are invalid.\r\n */\r\n\r\n\r\nfunction validateQueryAndParameters(query, parameters) {\r\n  var validatedQuery = query;\r\n  var params = parameters || {};\r\n\r\n  if ((0, _typeof2[\"default\"])(query) === 'object' && query.text) {\r\n    validatedQuery = query.text;\r\n    params = query.parameters || {};\r\n  }\r\n\r\n  assertCypherQuery(validatedQuery);\r\n  assertQueryParameters(params);\r\n  return {\r\n    validatedQuery: validatedQuery,\r\n    params: params\r\n  };\r\n}\r\n\r\nfunction assertObject(obj, objName) {\r\n  if (!isObject(obj)) {\r\n    throw new TypeError(objName + ' expected to be an object but was: ' + JSON.stringify(obj));\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\nfunction assertString(obj, objName) {\r\n  if (!isString(obj)) {\r\n    throw new TypeError(objName + ' expected to be string but was: ' + JSON.stringify(obj));\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\nfunction assertNumber(obj, objName) {\r\n  if (typeof obj !== 'number') {\r\n    throw new TypeError(objName + ' expected to be a number but was: ' + JSON.stringify(obj));\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\nfunction assertNumberOrInteger(obj, objName) {\r\n  if (typeof obj !== 'number' && !(0, _integer.isInt)(obj)) {\r\n    throw new TypeError(objName + ' expected to be either a number or an Integer object but was: ' + JSON.stringify(obj));\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\nfunction assertValidDate(obj, objName) {\r\n  if (Object.prototype.toString.call(obj) !== '[object Date]') {\r\n    throw new TypeError(objName + ' expected to be a standard JavaScript Date but was: ' + JSON.stringify(obj));\r\n  }\r\n\r\n  if (Number.isNaN(obj.getTime())) {\r\n    throw new TypeError(objName + ' expected to be valid JavaScript Date but its time was NaN: ' + JSON.stringify(obj));\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\nfunction assertCypherQuery(obj) {\r\n  assertString(obj, 'Cypher query');\r\n\r\n  if (obj.trim().length === 0) {\r\n    throw new TypeError('Cypher query is expected to be a non-empty string.');\r\n  }\r\n}\r\n\r\nfunction assertQueryParameters(obj) {\r\n  if (!isObject(obj)) {\r\n    // objects created with `Object.create(null)` do not have a constructor property\r\n    var _constructor = obj.constructor ? ' ' + obj.constructor.name : '';\r\n\r\n    throw new TypeError(\"Query parameters are expected to either be undefined/null or an object, given:\".concat(_constructor, \" \").concat(obj));\r\n  }\r\n}\r\n\r\nfunction isString(str) {\r\n  return Object.prototype.toString.call(str) === '[object String]';\r\n}"]},"metadata":{},"sourceType":"script"}