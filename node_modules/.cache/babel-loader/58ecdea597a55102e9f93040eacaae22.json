{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a1ole\\\\Documents\\\\GitHub\\\\neo4jreact\\\\src\\\\InDir.js\";\nimport React, { Component } from \"react\";\nimport Selector2 from \"./Selector2\";\nimport Selector from \"./Selector\";\n\nlet neo4j = require('neo4j-driver');\n\nclass InDir extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getValues = () => {\n      const session = this.driver.session({\n        defaultAccessMode: neo4j.session.READ\n      });\n      const values = [];\n      session.run('MATCH (d:Dir{Name: $nameinput})-[:value]->(v) RETURN v.Name', {\n        nameinput: this.props.name\n      }).subscribe({\n        onNext: record => {\n          values.push({\n            name: record._fields[0]\n          }); //console.log(record._fields[0])      \n        },\n        onCompleted: () => {\n          this.setState({\n            allValues: values\n          }); //console.log(this.state)\n\n          session.close(); // returns a Promise  \n        },\n        onError: error => {\n          console.log(error);\n        }\n      });\n    };\n\n    this.pickValue = event => {\n      let x = event.target.value;\n      this.props.change(x); //console.log(event.target.value);  \n\n      this.setState(({\n        choValues\n      }) => {\n        const newArr = [...choValues, x];\n        return {\n          choValues: newArr\n        };\n      });\n      console.log(this.state.choValues);\n    };\n\n    this.delValue = event => {\n      let x = event.target.value;\n      this.setState(({\n        choValues\n      }) => {\n        const newArr = choValues.splice(x);\n        return {\n          choValues: newArr\n        };\n      });\n    };\n\n    this.handleX = event => {\n      this.props.remove(this.props.name);\n    };\n\n    this.state = {\n      allValues: [],\n      choValues: [] //choValues:new Set()        \n\n    };\n    this.driver = neo4j.driver('bolt://localhost:7687', neo4j.auth.basic('neo4j', 'letmein'));\n    this.getValues();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, this.props.name, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"X\",\n      onClick: this.props.remove(this.props.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, this.props.prefix, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.pickValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, \"...\"), this.state.allValues.map(v => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: v.name,\n        value: v.name,\n        count: v.count,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 20\n        }\n      }, v.name, \" \", v.count);\n    }))))), this.state.choValues.map(v => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 22\n        }\n      }, v, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"X\",\n        onClick: this.delValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      }));\n    }));\n  }\n\n}\n\nexport default InDir;","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/src/InDir.js"],"names":["React","Component","Selector2","Selector","neo4j","require","InDir","constructor","props","getValues","session","driver","defaultAccessMode","READ","values","run","nameinput","name","subscribe","onNext","record","push","_fields","onCompleted","setState","allValues","close","onError","error","console","log","pickValue","event","x","target","value","change","choValues","newArr","state","delValue","splice","handleX","remove","auth","basic","render","prefix","map","v","count"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Selector2 from \"./Selector2\";\r\nimport Selector from \"./Selector\";\r\nlet neo4j = require('neo4j-driver')\r\n\r\nclass InDir extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          allValues: [],          \r\n          choValues: [],  \r\n          //choValues:new Set()        \r\n        };        \r\n        this.driver = neo4j.driver(\r\n          'bolt://localhost:7687', neo4j.auth.basic('neo4j', 'letmein')\r\n        );        \r\n        this.getValues();        \r\n    };\r\n \r\n    getValues = () => {\r\n        const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n        const values = [];\r\n        session\r\n        .run('MATCH (d:Dir{Name: $nameinput})-[:value]->(v) RETURN v.Name', {\r\n          nameinput: this.props.name\r\n        })\r\n        .subscribe({     \r\n          onNext: record => {\r\n            values.push({name:record._fields[0]});  \r\n            //console.log(record._fields[0])      \r\n          },\r\n          onCompleted: () => {          \r\n            this.setState({ allValues: values})\r\n            //console.log(this.state)\r\n            session.close();// returns a Promise  \r\n          },\r\n          onError: error => {\r\n            console.log(error)\r\n          }\r\n        });    \r\n      };\r\n    \r\n      pickValue = (event) => {\r\n        let x = event.target.value\r\n        this.props.change(x) \r\n        //console.log(event.target.value);  \r\n        \r\n        this.setState(({ choValues }) => {             \r\n          const newArr = [...choValues, x];       \r\n            return {\r\n                choValues: newArr\r\n            }\r\n          });   \r\n          console.log(this.state.choValues);     \r\n      };\r\n\r\n      delValue = (event) => { \r\n        let x = event.target.value;  \r\n        \r\n        this.setState(({ choValues }) => {\r\n            const newArr = choValues.splice(x);          \r\n            return {\r\n                choValues: newArr\r\n            }\r\n          });\r\n      };\r\n\r\n      handleX = (event) => {\r\n        \r\n        this.props.remove(this.props.name);\r\n      }  \r\n\r\n  render() {    \r\n    return (\r\n        <tr>\r\n        <td>{this.props.name}\r\n        <input type=\"submit\" value=\"X\" onClick={this.props.remove(this.props.name)}></input>\r\n        </td>  \r\n        <td>\r\n        {/* <td><Selector2 key={this.props.name} prefix={'Добавить значение'} name={this.props.name} values ={this.state.allValues}  change={this.pickValue}/> */}\r\n          <form>\r\n          <label >\r\n          {this.props.prefix}     \r\n            <select onChange={this.pickValue} >\r\n            <option selected>...</option>\r\n            {this.state.allValues.map(v => {\r\n            return <option key={v.name}  value={v.name} count={v.count} >{v.name} {v.count}</option>\r\n          })}\r\n            \r\n          </select>\r\n          </label>     \r\n          </form>\r\n      \r\n        </td>  \r\n        \r\n          {this.state.choValues.map(v => {               \r\n              return <td>{v}\r\n              <input type=\"submit\" value=\"X\" onClick={this.delValue}></input>\r\n              </td>\r\n              })}\r\n      </tr>\r\n\r\n    )\r\n        \r\n        \r\n  }\r\n}\r\n\r\nexport default InDir;"]},"metadata":{},"sourceType":"module"}