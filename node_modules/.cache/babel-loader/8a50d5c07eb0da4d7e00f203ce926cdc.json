{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar util = _interopRequireWildcard(require(\"./util\"));\n\nvar _integer = require(\"../integer\");\n\nvar _error = require(\"../error\");\n/**\r\n * Copyright (c) 2002-2020 \"Neo4j,\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Internal holder of the transaction configuration.\r\n * It performs input validation and value conversion for further serialization by the Bolt protocol layer.\r\n * Users of the driver provide transaction configuration as regular objects `{timeout: 10, metadata: {key: 'value'}}`.\r\n * Driver converts such objects to {@link TxConfig} immediately and uses converted values everywhere.\r\n */\n\n\nvar TxConfig = /*#__PURE__*/function () {\n  /**\r\n   * @constructor\r\n   * @param {Object} config the raw configuration object.\r\n   */\n  function TxConfig(config) {\n    (0, _classCallCheck2[\"default\"])(this, TxConfig);\n    assertValidConfig(config);\n    this.timeout = extractTimeout(config);\n    this.metadata = extractMetadata(config);\n  }\n  /**\r\n   * Get an empty config object.\r\n   * @return {TxConfig} an empty config.\r\n   */\n\n\n  (0, _createClass2[\"default\"])(TxConfig, [{\n    key: \"isEmpty\",\n\n    /**\r\n     * Check if this config object is empty. I.e. has no configuration values specified.\r\n     * @return {boolean} `true` if this object is empty, `false` otherwise.\r\n     */\n    value: function isEmpty() {\n      return Object.values(this).every(function (value) {\n        return value == null;\n      });\n    }\n  }], [{\n    key: \"empty\",\n    value: function empty() {\n      return EMPTY_CONFIG;\n    }\n  }]);\n  return TxConfig;\n}();\n\nexports[\"default\"] = TxConfig;\nvar EMPTY_CONFIG = new TxConfig({});\n/**\r\n * @return {Integer|null}\r\n */\n\nfunction extractTimeout(config) {\n  if (util.isObject(config) && (config.timeout || config.timeout === 0)) {\n    util.assertNumberOrInteger(config.timeout, 'Transaction timeout');\n    var timeout = (0, _integer[\"int\"])(config.timeout);\n\n    if (timeout.isZero()) {\n      throw (0, _error.newError)('Transaction timeout should not be zero');\n    }\n\n    if (timeout.isNegative()) {\n      throw (0, _error.newError)('Transaction timeout should not be negative');\n    }\n\n    return timeout;\n  }\n\n  return null;\n}\n/**\r\n * @return {object|null}\r\n */\n\n\nfunction extractMetadata(config) {\n  if (util.isObject(config) && config.metadata) {\n    var metadata = config.metadata;\n    util.assertObject(metadata);\n\n    if (Object.keys(metadata).length !== 0) {\n      // not an empty object\n      return metadata;\n    }\n  }\n\n  return null;\n}\n\nfunction assertValidConfig(config) {\n  if (config) {\n    util.assertObject(config, 'Transaction config');\n  }\n}","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/node_modules/neo4j-driver/lib/internal/tx-config.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","_classCallCheck2","_createClass2","util","_integer","_error","TxConfig","config","assertValidConfig","timeout","extractTimeout","metadata","extractMetadata","key","isEmpty","values","every","empty","EMPTY_CONFIG","isObject","assertNumberOrInteger","isZero","newError","isNegative","assertObject","keys","length"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports[\"default\"] = void 0;\r\n\r\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\r\n\r\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\r\n\r\nvar util = _interopRequireWildcard(require(\"./util\"));\r\n\r\nvar _integer = require(\"../integer\");\r\n\r\nvar _error = require(\"../error\");\r\n\r\n/**\r\n * Copyright (c) 2002-2020 \"Neo4j,\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Internal holder of the transaction configuration.\r\n * It performs input validation and value conversion for further serialization by the Bolt protocol layer.\r\n * Users of the driver provide transaction configuration as regular objects `{timeout: 10, metadata: {key: 'value'}}`.\r\n * Driver converts such objects to {@link TxConfig} immediately and uses converted values everywhere.\r\n */\r\nvar TxConfig =\r\n/*#__PURE__*/\r\nfunction () {\r\n  /**\r\n   * @constructor\r\n   * @param {Object} config the raw configuration object.\r\n   */\r\n  function TxConfig(config) {\r\n    (0, _classCallCheck2[\"default\"])(this, TxConfig);\r\n    assertValidConfig(config);\r\n    this.timeout = extractTimeout(config);\r\n    this.metadata = extractMetadata(config);\r\n  }\r\n  /**\r\n   * Get an empty config object.\r\n   * @return {TxConfig} an empty config.\r\n   */\r\n\r\n\r\n  (0, _createClass2[\"default\"])(TxConfig, [{\r\n    key: \"isEmpty\",\r\n\r\n    /**\r\n     * Check if this config object is empty. I.e. has no configuration values specified.\r\n     * @return {boolean} `true` if this object is empty, `false` otherwise.\r\n     */\r\n    value: function isEmpty() {\r\n      return Object.values(this).every(function (value) {\r\n        return value == null;\r\n      });\r\n    }\r\n  }], [{\r\n    key: \"empty\",\r\n    value: function empty() {\r\n      return EMPTY_CONFIG;\r\n    }\r\n  }]);\r\n  return TxConfig;\r\n}();\r\n\r\nexports[\"default\"] = TxConfig;\r\nvar EMPTY_CONFIG = new TxConfig({});\r\n/**\r\n * @return {Integer|null}\r\n */\r\n\r\nfunction extractTimeout(config) {\r\n  if (util.isObject(config) && (config.timeout || config.timeout === 0)) {\r\n    util.assertNumberOrInteger(config.timeout, 'Transaction timeout');\r\n    var timeout = (0, _integer[\"int\"])(config.timeout);\r\n\r\n    if (timeout.isZero()) {\r\n      throw (0, _error.newError)('Transaction timeout should not be zero');\r\n    }\r\n\r\n    if (timeout.isNegative()) {\r\n      throw (0, _error.newError)('Transaction timeout should not be negative');\r\n    }\r\n\r\n    return timeout;\r\n  }\r\n\r\n  return null;\r\n}\r\n/**\r\n * @return {object|null}\r\n */\r\n\r\n\r\nfunction extractMetadata(config) {\r\n  if (util.isObject(config) && config.metadata) {\r\n    var metadata = config.metadata;\r\n    util.assertObject(metadata);\r\n\r\n    if (Object.keys(metadata).length !== 0) {\r\n      // not an empty object\r\n      return metadata;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction assertValidConfig(config) {\r\n  if (config) {\r\n    util.assertObject(config, 'Transaction config');\r\n  }\r\n}"]},"metadata":{},"sourceType":"script"}