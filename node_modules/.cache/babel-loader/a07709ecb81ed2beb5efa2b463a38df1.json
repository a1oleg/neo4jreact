{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a1ole\\\\Documents\\\\GitHub\\\\neo4jreact\\\\src\\\\App.js\";\nimport React, { Component, useState } from \"react\";\nimport XLSX from \"xlsx\";\nimport './App.css';\nimport Selector from \"./Selector\";\nimport Selector2 from \"./Selector2\";\n\nvar neo4j = require('neo4j-driver');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getDirs = () => {\n      const session = this.driver.session({\n        defaultAccessMode: neo4j.session.READ\n      });\n      const res = [];\n      session.run('MATCH (d{Name: $nameinput})-[:value]->(v) RETURN v.Name', {\n        nameinput: 'Мать справочников'\n      }).subscribe({\n        onNext: record => {\n          res.push({\n            name: record._fields[0]\n          }); //console.log(record._fields[0])      \n        },\n        onCompleted: () => {\n          this.setState({\n            allDirs: res\n          }); //console.log(this.state)\n\n          session.close(); // returns a Promise  \n        },\n        onError: error => {\n          console.log(error);\n        }\n      });\n    };\n\n    this.addDir = input => {\n      const session = this.driver.session({\n        defaultAccessMode: neo4j.session.READ\n      });\n      let values = []; //или тащить из this.state.inDirs \n\n      session.run('MATCH (:Dir{Name: $nameinput})-[:value]->(v)<-[r:field]-(:Wagon) RETURN v.Name, count(r)', {\n        nameinput: input.name\n      }).subscribe({\n        //onKeys: keys => {\n        //console.log(keys)\n        //},\n        onNext: record => {\n          //console.log(record);\n          values.push({\n            name: record._fields[0],\n            count: record._fields[1].low\n          });\n        },\n        onCompleted: () => {\n          session.close();\n          this.setState(({\n            inDirs\n          }) => {\n            //const newArr = [...inDirs, {name: input.name, value: values}]; \n            let x = this.state.inDirs;\n            const newArr = x.push({\n              name: input.name,\n              value: values\n            });\n            return {\n              inDirs: newArr\n            };\n          });\n          console.log(this.state.inDirs);\n        },\n        onError: error => {\n          console.log(error);\n        }\n      });\n    };\n\n    this.addValue = input => {\n      //console.log(input)\n      let newMap = this.state.choDirs;\n      let x = newMap.get(input.name);\n\n      if (typeof x !== \"undefined\") {\n        const newArr = [...x, input.value];\n        newMap.set(input.name, newArr);\n      } else {\n        newMap.set(input.name, [input.value]);\n      }\n\n      this.setState(() => {\n        return {\n          choDirs: newMap\n        };\n      });\n      console.log(this.state.choDirs); //console.log([...this.state.choDirs.get(\"Виды работ\")]);\n    };\n\n    this.xfetch = () => {\n      const session = this.driver.session({\n        defaultAccessMode: neo4j.session.READ\n      }); // по обратному порядку каунта добавлять в запрос    \n\n      let qString = 'MATCH (x:Value)<-[:field]-(w:Wagon)\\n WHERE x.Name IN $inFields\\n';\n      qString += 'MATCH (d:Dir)-[:value]->(v:Value)<-[:field]-(w)\\n';\n      qString += 'WHERE d.Name IN $outFields\\n';\n      qString += 'RETURN w, v.Name '; //qString += 'LIMIT 6';\n      // console.log([...this.state.choDirs].map(n => n[1]).reduce(function(previousValue, currentValue, index, array) {\n      //   return [...previousValue, ...currentValue];\n      // }));   \n\n      console.log(qString);\n      const res = new Map();\n      session.run(qString, {\n        inFields: [...this.state.choDirs].map(n => n[1]).reduce(function (previousValue, currentValue, index, array) {\n          return [...previousValue, ...currentValue];\n        }),\n        outFields: this.state.outFields\n      }).subscribe({\n        onNext: record => {\n          let x = res.get(record._fields[0].identity.low);\n\n          if (typeof x !== \"undefined\") {\n            const newArr = [...x, record._fields[1]];\n            res.set(record._fields[0].identity.low, newArr);\n          } else {\n            res.set(record._fields[0].identity.low, [record._fields[1]]);\n          }\n        },\n        onCompleted: () => {\n          session.close(); // returns a Promise\n\n          this.setState(({\n            results\n          }) => {\n            return {\n              results: res\n            };\n          }); //console.log(res);\n          //console.log([...this.state.results]);\n        },\n        onError: error => {\n          console.log(error);\n        }\n      });\n    };\n\n    this.addOutField = input => {\n      this.setState(({\n        outFields\n      }) => {\n        const newArr = [...outFields, input.name];\n        return {\n          outFields: newArr\n        };\n      }); //console.log(this.state.outFields)\n    };\n\n    this.removeInDir = event => {\n      console.log(event.target);\n      let x = event.target.getAttribute('foo');\n      let newMap = this.state.inDirs.delete(x);\n      this.setState(() => {\n        return {\n          inDirs: newMap\n        };\n      });\n      console.log(this.state.inDirs);\n    };\n\n    this.removeOutField = event => {\n      let x = event.target.getAttribute('foo');\n      this.setState(({\n        outFields\n      }) => {\n        const newArr = outFields.filter(item => item !== x);\n        return {\n          outFields: newArr\n        };\n      });\n    };\n\n    this.exportTable = (type, fn, dl) => {\n      console.log('item');\n      var elt = document.getElementById('data-table');\n      var wb = XLSX.utils.table_to_book(elt, {\n        sheet: \"Sheet JS\"\n      });\n      return dl ? XLSX.write(wb, {\n        bookType: 'xlsx',\n        bookSST: true,\n        type: 'base64'\n      }) : XLSX.writeFile(wb, fn || 'SheetJSTableExport.' + 'xlsx');\n    };\n\n    this.state = {\n      allDirs: [],\n      inDirs: [],\n      //inDirs: new Map(),\n      choDirs: new Map(),\n      outFields: [],\n      results: new Map()\n    };\n    this.driver = neo4j.driver('bolt://localhost:7687', neo4j.auth.basic('neo4j', 'letmein'));\n    this.getDirs();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      border: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }\n    }, [...this.state.inDirs].map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 19\n        }\n      }, item.value, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        foo: item.value,\n        value: \"X\",\n        onClick: this.removeInDir,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Selector2, {\n        key: item.value,\n        prefix: 'Добавить значение',\n        name: item.name,\n        values: item.value,\n        change: this.addValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 23\n        }\n      })));\n    }), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Selector, {\n      name: 'Добавить справочник',\n      values: this.state.allDirs,\n      change: this.addDir,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 23\n      }\n    }))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      border: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }\n    }, \"_id\"), this.state.outFields.map(n => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 22\n        }\n      }, n, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        foo: n,\n        value: \"X\",\n        onClick: this.removeOutField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Selector, {\n      name: 'Добавить поле вывода',\n      values: this.state.allDirs,\n      change: this.addOutField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 15\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }, \"...\"), \" \", /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 26\n      }\n    }, \"...\"), this.state.outFields.map(n => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 24\n        }\n      }, \"...\");\n    })), [...this.state.results].map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 19\n        }\n      }, item[0]), item[1].map(v => {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 30\n          }\n        }, v);\n      }));\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.xfetch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }\n    }, \"    \\u0417\\u0430\\u043F\\u0440\\u043E\\u0441   \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"\\u0412\\u044B\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0432 Excel\",\n      onClick: this.exportTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/src/App.js"],"names":["React","Component","useState","XLSX","Selector","Selector2","neo4j","require","App","constructor","props","getDirs","session","driver","defaultAccessMode","READ","res","run","nameinput","subscribe","onNext","record","push","name","_fields","onCompleted","setState","allDirs","close","onError","error","console","log","addDir","input","values","count","low","inDirs","x","state","newArr","value","addValue","newMap","choDirs","get","set","xfetch","qString","Map","inFields","map","n","reduce","previousValue","currentValue","index","array","outFields","identity","results","addOutField","removeInDir","event","target","getAttribute","delete","removeOutField","filter","item","exportTable","type","fn","dl","elt","document","getElementById","wb","utils","table_to_book","sheet","write","bookType","bookSST","writeFile","auth","basic","render","v"],"mappings":"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","sourcesContent":["import React, { Component,useState } from \"react\";\r\nimport XLSX from \"xlsx\";\r\nimport './App.css';\r\nimport Selector from \"./Selector\";\r\nimport Selector2 from \"./Selector2\";\r\nvar neo4j = require('neo4j-driver')\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      allDirs: [],\r\n      inDirs: [],\r\n      //inDirs: new Map(),\r\n      choDirs: new Map(),\r\n      \r\n      outFields: [],\r\n      \r\n      results: new Map()\r\n    };\r\n    \r\n    this.driver = neo4j.driver(\r\n      'bolt://localhost:7687',\r\n      neo4j.auth.basic('neo4j', 'letmein')\r\n    );\r\n    \r\n    this.getDirs();\r\n    \r\n  };\r\n\r\n  getDirs = () => {\r\n    const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n    const res = [];\r\n    session\r\n    .run('MATCH (d{Name: $nameinput})-[:value]->(v) RETURN v.Name', {\r\n      nameinput: 'Мать справочников'\r\n    })\r\n    .subscribe({     \r\n      onNext: record => {\r\n        res.push({name:record._fields[0]});  \r\n        //console.log(record._fields[0])      \r\n      },\r\n      onCompleted: () => {          \r\n        this.setState({ allDirs: res})\r\n        //console.log(this.state)\r\n        session.close();// returns a Promise  \r\n      },\r\n      onError: error => {\r\n        console.log(error)\r\n      }\r\n    });    \r\n  };\r\n\r\n  addDir = (input) => {    \r\n    const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n    \r\n    let values  = [];//или тащить из this.state.inDirs \r\n\r\n    session\r\n    .run('MATCH (:Dir{Name: $nameinput})-[:value]->(v)<-[r:field]-(:Wagon) RETURN v.Name, count(r)', {\r\n      nameinput: input.name\r\n    })\r\n    .subscribe({\r\n      //onKeys: keys => {\r\n        //console.log(keys)\r\n      //},\r\n      onNext: record => {\r\n        //console.log(record);\r\n        values.push({name: record._fields[0], count: record._fields[1].low})\r\n      },\r\n      onCompleted: () => {  \r\n        session.close();\r\n          this.setState(({ inDirs }) => {\r\n          //const newArr = [...inDirs, {name: input.name, value: values}]; \r\n          let x =  this.state.inDirs;\r\n          const newArr = x.push({name: input.name, value: values}); \r\n    \r\n            return {\r\n              inDirs: newArr\r\n            }\r\n        })\r\n        console.log(this.state.inDirs)\r\n      },\r\n      onError: error => {\r\n        console.log(error)\r\n      }\r\n    });    \r\n  };\r\n\r\n  addValue = input => {\r\n    //console.log(input)\r\n    let newMap = this.state.choDirs;\r\n\r\n    let x = newMap.get(input.name); \r\n    if(typeof x !== \"undefined\"){\r\n      const newArr = [...x, input.value];\r\n\r\n      newMap.set(input.name, newArr);\r\n    }\r\n    else{\r\n      newMap.set(input.name, [input.value]);\r\n    }\r\n\r\n    this.setState(() => {  \r\n      return {\r\n        choDirs: newMap\r\n      }        \r\n    })\r\n    console.log(this.state.choDirs);\r\n    //console.log([...this.state.choDirs.get(\"Виды работ\")]);\r\n  };\r\n\r\n  xfetch = () => {    \r\n    \r\n    const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n        \r\n    // по обратному порядку каунта добавлять в запрос    \r\n    \r\n    let qString = 'MATCH (x:Value)<-[:field]-(w:Wagon)\\n WHERE x.Name IN $inFields\\n';\r\n    \r\n    qString += 'MATCH (d:Dir)-[:value]->(v:Value)<-[:field]-(w)\\n';\r\n    qString += 'WHERE d.Name IN $outFields\\n';\r\n    qString += 'RETURN w, v.Name ';\r\n    //qString += 'LIMIT 6';\r\n\r\n    // console.log([...this.state.choDirs].map(n => n[1]).reduce(function(previousValue, currentValue, index, array) {\r\n    //   return [...previousValue, ...currentValue];\r\n    // }));   \r\n\r\n\r\n    console.log(qString);\r\n\r\n    const res = new Map();\r\n    session\r\n    .run(qString, {\r\n      inFields: [...this.state.choDirs].map(n => n[1]).reduce(function(previousValue, currentValue, index, array) {\r\n        return [...previousValue, ...currentValue];\r\n      }),\r\n      outFields: this.state.outFields\r\n      \r\n    })\r\n    .subscribe({\r\n      onNext: record => {       \r\n        let x = res.get(record._fields[0].identity.low);  \r\n        if(typeof x !== \"undefined\"){\r\n          const newArr = [...x, record._fields[1]];\r\n\r\n          res.set(record._fields[0].identity.low, newArr);\r\n        }\r\n        else{\r\n          res.set(record._fields[0].identity.low, [record._fields[1]]);\r\n        } \r\n      },\r\n      onCompleted: () => {  \r\n        session.close();// returns a Promise\r\n        \r\n        this.setState(({ results }) => {\r\n            return {\r\n              results: res\r\n            }\r\n        });   \r\n        //console.log(res);\r\n        //console.log([...this.state.results]);\r\n      },\r\n      onError: error => {\r\n        console.log(error)\r\n      }\r\n    });    \r\n  }\r\n\r\n  addOutField = input => {\r\n    \r\n    this.setState(({ outFields }) => {\r\n      const newArr = [...outFields, input.name];   \r\n\r\n        return {\r\n          outFields: newArr\r\n        }\r\n    })\r\n    //console.log(this.state.outFields)\r\n  };  \r\n\r\n  removeInDir = (event) => { \r\n    console.log(event.target);\r\n    let x =  event.target.getAttribute('foo');    \r\n    let newMap = this.state.inDirs.delete(x);\r\n    this.setState(() => {\r\n        return {\r\n          inDirs: newMap\r\n        }\r\n    })\r\n    console.log(this.state.inDirs);\r\n  }\r\n\r\n  \r\n  removeOutField = (event) => {    \r\n    let x =  event.target.getAttribute('foo');\r\n    this.setState(({ outFields }) => {\r\n      const newArr = outFields.filter(item => item !== x);\r\n        return {\r\n          outFields: newArr\r\n        }\r\n    })\r\n  }\r\n\r\n  exportTable = (type, fn, dl) => {\r\n    console.log('item');\r\n\tvar elt = document.getElementById('data-table');\r\n\tvar wb = XLSX.utils.table_to_book(elt, {sheet:\"Sheet JS\"});\r\n\treturn dl ?\r\n\t\tXLSX.write(wb, {bookType:'xlsx', bookSST:true, type: 'base64'}) :\r\n\t\tXLSX.writeFile(wb, fn || ('SheetJSTableExport.' + 'xlsx'));\r\n  }\r\n\r\n\r\n  render() {      \r\n      return (      \r\n      <main>        \r\n        <br></br>\r\n        <table border=\"1\"> \r\n          <tbody >\r\n          {[...this.state.inDirs].map(item => {            \r\n            return <tr>\r\n                  <td>{item.value}\r\n                  <input type=\"submit\" foo={item.value} value=\"X\" onClick={this.removeInDir}></input>\r\n                  </td>  \r\n                  <td><Selector2 key={item.value} prefix={'Добавить значение'} name={item.name} values ={item.value}  change={this.addValue}/></td>  \r\n                  \r\n                    {/* {this.state.choDirs.get(item[0]).map(v => {               \r\n                        return <td>{v}</td>\r\n                        })} */}\r\n                </tr>\r\n            }) \r\n          }\r\n          <tr>\r\n                  <td><Selector name= {'Добавить справочник'} values={this.state.allDirs} change ={this.addDir}/></td>  \r\n                 \r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n               \r\n        <br></br>\r\n        <table border=\"1\" >\r\n          <thead>\r\n            <td>_id</td>            \r\n            {this.state.outFields.map(n => {               \r\n              return <td>{n}\r\n              <input type=\"submit\" foo={n} value=\"X\" onClick={this.removeOutField}></input>\r\n              </td>       \r\n            })}\r\n\r\n          <td><Selector name= {'Добавить поле вывода'} values={this.state.allDirs} change ={this.addOutField}/> </td>\r\n          </thead>    \r\n\r\n          <tbody >\r\n          <tr>\r\n            <td>...</td> <td>...</td>\r\n            {this.state.outFields.map(n => {               \r\n                return <td>...</td>    \r\n              })}\r\n          </tr>   \r\n\r\n          {[...this.state.results].map(item => {\r\n            \r\n            return <tr>\r\n                  <td>{item[0]}</td>  \r\n                    {item[1].map(v => {               \r\n                      return <td>{v}</td>\r\n                      })}\r\n                </tr> \r\n\r\n            }) \r\n          }\r\n          </tbody>      \r\n        </table>\r\n\r\n        <br></br>\r\n        <button onClick={this.xfetch}>    Запрос   </button>\r\n        <br></br>\r\n        <input type=\"submit\" value=\"Выгрузить в Excel\" onClick={this.exportTable}></input>\r\n        \r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}