{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a1ole\\\\Documents\\\\GitHub\\\\neo4jreact\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport Selector from \"./Selector\";\nimport DirList from \"./DirList\";\n\nvar neo4j = require('neo4j-driver');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.xfetch = param => {\n      //this.setState({ allDirs: [...allDirs, {name: param, values: []} ] });\n      const session = this.driver.session({\n        defaultAccessMode: neo4j.session.READ\n      });\n      const res = [];\n      session.run('MATCH (d{Name: $nameParam})-[:value]->(v) RETURN v.Name', {\n        nameParam: param\n      }).subscribe({\n        //onKeys: keys => {\n        //console.log(keys)\n        //},\n        onNext: record => {\n          res.push(record._fields[0]); //this.setState({ target: [...target, record._fields[0] ] })\n        },\n        onCompleted: () => {\n          console.log(this.state);\n          this.setState({\n            target: res\n          });\n          session.close(); // returns a Promise  \n        },\n        onError: error => {\n          console.log(error);\n        }\n      });\n    };\n\n    this.addValue = input => {\n      console.log(input);\n    };\n\n    this.state = {\n      allDirs: [],\n      //[{name: 'Мать справочников',values: []}],\n      actDirs: [],\n      results: []\n    };\n    this.driver = neo4j.driver('bolt://localhost:7687', neo4j.auth.basic('neo4j', 'letmein')); //this.xfetch('Мать справочников', 'allDirs'); \n\n    const _session = this.driver.session({\n      defaultAccessMode: neo4j.session.READ\n    });\n\n    const _res = [];\n\n    _session.run('MATCH (d{Name: $nameParam})-[:value]->(v) RETURN v.Name', {\n      nameParam: 'Мать справочников'\n    }).subscribe({\n      onNext: record => {\n        _res.push(record._fields[0]);\n\n        console.log(record._fields[0]);\n      },\n      onCompleted: () => {\n        console.log(this.state);\n        this.setState({\n          [this.state.allDirs]: _res\n        });\n\n        _session.close(); // returns a Promise  \n\n      },\n      onError: error => {\n        console.log(error);\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, this.state.actDirs.map(n => {\n      return /*#__PURE__*/React.createElement(Selector, {\n        name: n.name,\n        values: n.values,\n        change: this.addValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 18\n        }\n      }); //change ={this.addDir}       \n    }), /*#__PURE__*/React.createElement(Selector, {\n      name: 'Справочники',\n      values: this.state.allDirs.map(x => x.values),\n      change: this.xfetch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/src/App.js"],"names":["React","Component","Selector","DirList","neo4j","require","App","constructor","props","xfetch","param","session","driver","defaultAccessMode","READ","res","run","nameParam","subscribe","onNext","record","push","_fields","onCompleted","console","log","state","setState","target","close","onError","error","addValue","input","allDirs","actDirs","results","auth","basic","render","map","n","name","values","x"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport './App.css';\r\nimport Selector from \"./Selector\";\r\nimport DirList from \"./DirList\";\r\nvar neo4j = require('neo4j-driver')\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      allDirs: [], //[{name: 'Мать справочников',values: []}],\r\n      actDirs: [],\r\n      results: [],\r\n\r\n    };\r\n    \r\n    this.driver = neo4j.driver(\r\n      'bolt://localhost:7687',\r\n      neo4j.auth.basic('neo4j', 'letmein')\r\n    )\r\n    //this.xfetch('Мать справочников', 'allDirs'); \r\n\r\n    const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n    const res = [];\r\n    session\r\n    .run('MATCH (d{Name: $nameParam})-[:value]->(v) RETURN v.Name', {\r\n      nameParam: 'Мать справочников'\r\n    })\r\n    .subscribe({     \r\n      onNext: record => {\r\n        res.push(record._fields[0]);  \r\n        console.log(record._fields[0])      \r\n      },\r\n      onCompleted: () => {  \r\n        console.log(this.state)\r\n         this.setState({ [this.state.allDirs]: res})\r\n        session.close();// returns a Promise  \r\n      },\r\n      onError: error => {\r\n        console.log(error)\r\n      }\r\n    });    \r\n  };\r\n\r\n  \r\n\r\n  xfetch = (param) => {\r\n\r\n    //this.setState({ allDirs: [...allDirs, {name: param, values: []} ] });\r\n    \r\n    const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n    const res = [];\r\n    session\r\n    .run('MATCH (d{Name: $nameParam})-[:value]->(v) RETURN v.Name', {\r\n      nameParam: param\r\n    })\r\n    .subscribe({\r\n      //onKeys: keys => {\r\n        //console.log(keys)\r\n      //},\r\n      onNext: record => {\r\n        res.push(record._fields[0]);\r\n        //this.setState({ target: [...target, record._fields[0] ] })\r\n      },\r\n      onCompleted: () => {  \r\n        console.log(this.state)\r\n         this.setState({ target: res})\r\n        session.close();// returns a Promise  \r\n      },\r\n      onError: error => {\r\n        console.log(error)\r\n      }\r\n    });    \r\n  };\r\n\r\n  addValue = input => {\r\n    console.log(input)\r\n\r\n  };\r\n\r\n  render() {      \r\n      return (      \r\n      <main> \r\n             {this.state.actDirs.map(n => {               \r\n          return <Selector name= {n.name} values = {n.values}  change ={this.addValue}/>//change ={this.addDir}       \r\n       })}\r\n        \r\n        <Selector name= {'Справочники'} values={this.state.allDirs.map(x => x.values)} change ={this.xfetch}/> \r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}