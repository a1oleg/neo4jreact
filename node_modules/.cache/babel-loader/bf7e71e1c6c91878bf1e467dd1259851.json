{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a1ole\\\\Documents\\\\GitHub\\\\neo4jreact\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport Selector from \"./Selector\";\n\nvar neo4j = require('neo4j-driver');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addDir = param => {\n      //console.log(param)\n      const session = this.driver.session({\n        defaultAccessMode: neo4j.session.READ\n      });\n      const res = [];\n      session.run('MATCH (d{Name: $nameParam})-[:value]->(v) RETURN v.Name', {\n        nameParam: param.value\n      }).subscribe({\n        //onKeys: keys => {\n        //console.log(keys)\n        //},\n        onNext: record => {\n          res.push(record._fields[0]);\n        },\n        onCompleted: () => {\n          session.close(); // returns a Promise\n\n          this.setState(({\n            actDirs\n          }) => {\n            const newArr = [...actDirs, {\n              name: param.value,\n              values: res\n            }];\n            return {\n              actDirs: newArr\n            };\n          });\n        },\n        onError: error => {\n          console.log(error);\n        }\n      });\n    };\n\n    this.addValue = input => {\n      console.log(input);\n      this.setState(({\n        choDirs\n      }) => {\n        const newArr = [...choDirs, {\n          name: input.name,\n          value: input.value\n        }];\n        return {\n          choDirs: newArr\n        };\n      });\n    };\n\n    this.xfetch = () => {\n      console.log('param');\n      const session = this.driver.session({\n        defaultAccessMode: neo4j.session.READ\n      });\n      const res = []; //let query = \n\n      session.run('MATCH (:Value{Name: $name0})<-[:field]-(w:Wagon)-[:field]->(:Value{Name: $name1}) RETURN w', {\n        name0: this.state.choDirs[0].value,\n        name1: this.state.choDirs[1].value //name0: 'Деповской ремонт', name1: 'прочие'\n\n      }).subscribe({\n        onNext: record => {\n          res.push(record._fields[0]);\n        },\n        onCompleted: () => {\n          session.close(); // returns a Promise\n\n          console.log(res); //   this.setState(({ actDirs }) => {\n          //   const newArr = [...actDirs, {name: param.value, values: res}];   \n          //     return {\n          //       actDirs: newArr\n          //     }\n          // })\n        },\n        onError: error => {\n          console.log(error);\n        }\n      });\n    };\n\n    this.addOutField = input => {\n      console.log(input);\n      this.setState(({\n        outFields\n      }) => {\n        const newArr = [...outFields, input.value];\n        return {\n          choDirs: newArr\n        };\n      });\n      console.log(this.state.addOutFields);\n    };\n\n    this.state = {\n      allDirs: [],\n      //[{name: 'Мать справочников',values: []}],\n      actDirs: [],\n      choDirs: [],\n      outFields: [],\n      results: []\n    };\n    this.driver = neo4j.driver('bolt://localhost:7687', neo4j.auth.basic('neo4j', 'letmein'));\n\n    const _session = this.driver.session({\n      defaultAccessMode: neo4j.session.READ\n    });\n\n    const _res = [];\n\n    _session.run('MATCH (d{Name: $nameParam})-[:value]->(v) RETURN v.Name', {\n      nameParam: 'Мать справочников'\n    }).subscribe({\n      onNext: record => {\n        _res.push(record._fields[0]); //console.log(record._fields[0])      \n\n      },\n      onCompleted: () => {\n        this.setState({\n          allDirs: _res\n        }); //console.log(this.state)\n\n        _session.close(); // returns a Promise  \n\n      },\n      onError: error => {\n        console.log(error);\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, this.state.actDirs.map(n => {\n      return /*#__PURE__*/React.createElement(Selector, {\n        name: n.name,\n        values: n.values,\n        change: this.addValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 18\n        }\n      }); //change ={this.addDir}       \n    }), /*#__PURE__*/React.createElement(Selector, {\n      name: 'Ввод',\n      values: this.state.allDirs,\n      change: this.addDir,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.xfetch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, \"\\u0417\\u0430\\u043F\\u0440\\u043E\\u0441\"), /*#__PURE__*/React.createElement(Selector, {\n      name: 'Вывод',\n      values: this.state.allDirs,\n      change: this.addOutField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/src/App.js"],"names":["React","Component","Selector","neo4j","require","App","constructor","props","addDir","param","session","driver","defaultAccessMode","READ","res","run","nameParam","value","subscribe","onNext","record","push","_fields","onCompleted","close","setState","actDirs","newArr","name","values","onError","error","console","log","addValue","input","choDirs","xfetch","name0","state","name1","addOutField","outFields","addOutFields","allDirs","results","auth","basic","render","map","n"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport './App.css';\r\nimport Selector from \"./Selector\";\r\nvar neo4j = require('neo4j-driver')\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      allDirs: [], //[{name: 'Мать справочников',values: []}],\r\n      actDirs: [],\r\n      choDirs: [],\r\n      \r\n      outFields: [],\r\n      results: [],\r\n\r\n    };\r\n    \r\n    this.driver = neo4j.driver(\r\n      'bolt://localhost:7687',\r\n      neo4j.auth.basic('neo4j', 'letmein')\r\n    )\r\n   \r\n    const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n    const res = [];\r\n    session\r\n    .run('MATCH (d{Name: $nameParam})-[:value]->(v) RETURN v.Name', {\r\n      nameParam: 'Мать справочников'\r\n    })\r\n    .subscribe({     \r\n      onNext: record => {\r\n        res.push(record._fields[0]);  \r\n        //console.log(record._fields[0])      \r\n      },\r\n      onCompleted: () => {          \r\n        this.setState({ allDirs: res})\r\n        //console.log(this.state)\r\n        session.close();// returns a Promise  \r\n      },\r\n      onError: error => {\r\n        console.log(error)\r\n      }\r\n    });    \r\n  };\r\n\r\n  \r\n\r\n  addDir = (param) => {\r\n    //console.log(param)\r\n    const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n    const res = [];\r\n    session\r\n    .run('MATCH (d{Name: $nameParam})-[:value]->(v) RETURN v.Name', {\r\n      nameParam: param.value\r\n    })\r\n    .subscribe({\r\n      //onKeys: keys => {\r\n        //console.log(keys)\r\n      //},\r\n      onNext: record => {\r\n        res.push(record._fields[0]);\r\n        \r\n      },\r\n      onCompleted: () => {  \r\n        session.close();// returns a Promise\r\n          this.setState(({ actDirs }) => {\r\n          const newArr = [...actDirs, {name: param.value, values: res}];   \r\n    \r\n            return {\r\n              actDirs: newArr\r\n            }\r\n        })\r\n          \r\n      },\r\n      onError: error => {\r\n        console.log(error)\r\n      }\r\n    });    \r\n  };\r\n\r\n  addValue = input => {\r\n    console.log(input)\r\n    this.setState(({ choDirs }) => {\r\n      const newArr = [...choDirs, {name: input.name, value: input.value}];   \r\n\r\n        return {\r\n          choDirs: newArr\r\n        }\r\n    })\r\n\r\n  };\r\n\r\n  xfetch = () => {\r\n    console.log('param')\r\n    const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n    const res = [];\r\n    \r\n    //let query = \r\n    \r\n    session\r\n    .run('MATCH (:Value{Name: $name0})<-[:field]-(w:Wagon)-[:field]->(:Value{Name: $name1}) RETURN w', {\r\n      name0: this.state.choDirs[0].value, name1: this.state.choDirs[1].value\r\n      //name0: 'Деповской ремонт', name1: 'прочие'\r\n    })\r\n    .subscribe({      \r\n      onNext: record => {\r\n        res.push(record._fields[0]);        \r\n      },\r\n      onCompleted: () => {  \r\n        session.close();// returns a Promise\r\n        console.log(res)\r\n        //   this.setState(({ actDirs }) => {\r\n        //   const newArr = [...actDirs, {name: param.value, values: res}];   \r\n    \r\n        //     return {\r\n        //       actDirs: newArr\r\n        //     }\r\n        // })\r\n          \r\n      },\r\n      onError: error => {\r\n        console.log(error)\r\n      }\r\n    });    \r\n  };\r\n\r\n  addOutField = input => {\r\n    console.log(input)\r\n    this.setState(({ outFields }) => {\r\n      const newArr = [...outFields, input.value];   \r\n\r\n        return {\r\n          choDirs: newArr\r\n        }\r\n    })\r\n    console.log(this.state.addOutFields)\r\n  };\r\n\r\n  render() {      \r\n      return (      \r\n      <main> \r\n             {this.state.actDirs.map(n => {               \r\n          return <Selector name= {n.name} values = {n.values}  change ={this.addValue}/>//change ={this.addDir}       \r\n       })}\r\n        \r\n        <Selector name= {'Ввод'} values={this.state.allDirs} change ={this.addDir}/> \r\n        <button onClick={this.xfetch}>\r\n          Запрос\r\n        </button>\r\n\r\n\r\n        <Selector name= {'Вывод'} values={this.state.allDirs} change ={this.addOutField}/> \r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}