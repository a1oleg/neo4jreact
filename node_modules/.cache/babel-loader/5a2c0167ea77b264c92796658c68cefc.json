{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a1ole\\\\Documents\\\\GitHub\\\\neo4jreact\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport RequestHead from \"./RequestHead\";\n\nvar neo4j = require('neo4j-driver');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetch = (query, params) => {\n      //const { mapCenter, startDate, endDate } = this.state;\n      const session = this.driver.session({\n        defaultAccessMode: neo4j.session.READ\n      });\n      const res = [];\n      session.run(query, params).subscribe({\n        //onKeys: keys => {\n        //console.log(keys)\n        //},\n        onNext: record => {\n          //console.log(this.state.allDirs);\n          res.push(record.get('x')); // this.setState(({ allDirs }) => {\n          //   const newArr = [...allDirs, record.get('x').properties.description];\n          //   return {\n          //     allDirs: newArr\n          //   };\n          // });\n        },\n        onCompleted: () => {\n          session.close(); // returns a Promise\n\n          console.log(res.map(x => x.properties.description));\n          return res;\n        },\n        onError: error => {\n          console.log(error);\n        }\n      });\n\n      addDir = input => {\n        this.setState(({\n          actDirs\n        }) => {\n          const newArr = [...actDirs, input];\n          return {\n            actDirs: newArr\n          };\n        });\n      };\n    };\n\n    this.state = {\n      allDirs: [],\n      actDirs: [],\n      results: []\n    };\n    this.driver = neo4j.driver('bolt://localhost:7687', neo4j.auth.basic('neo4j', 'letmein'));\n\n    const _res = this.fetch('MATCH (x:Dir) RETURN x');\n\n    this.setState(({\n      allDirs\n    }) => {\n      const newArr = [...allDirs, _res.map(x => x.properties.description)];\n      return {\n        allDirs: newArr\n      };\n    });\n  }\n\n  render() {\n    // console.log(this.state.allDirs);\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RequestHead, {\n      addDir: this.addDir,\n      allDirs: this.state.allDirs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/src/App.js"],"names":["React","Component","RequestHead","neo4j","require","App","constructor","props","fetch","query","params","session","driver","defaultAccessMode","READ","res","run","subscribe","onNext","record","push","get","onCompleted","close","console","log","map","x","properties","description","onError","error","addDir","input","setState","actDirs","newArr","state","allDirs","results","auth","basic","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA6BnBC,KA7BmB,GA6BX,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzB;AACA,YAAMC,OAAO,GAAG,KAAKC,MAAL,CAAYD,OAAZ,CAAoB;AAAEE,QAAAA,iBAAiB,EAAEV,KAAK,CAACQ,OAAN,CAAcG;AAAnC,OAApB,CAAhB;AACA,YAAMC,GAAG,GAAG,EAAZ;AACAJ,MAAAA,OAAO,CACNK,GADD,CACKP,KADL,EACYC,MADZ,EAECO,SAFD,CAEW;AACT;AACE;AACF;AACAC,QAAAA,MAAM,EAAEC,MAAM,IAAI;AAChB;AACAJ,UAAAA,GAAG,CAACK,IAAJ,CAASD,MAAM,CAACE,GAAP,CAAW,GAAX,CAAT,EAFgB,CAGhB;AACA;AAEA;AACA;AACA;AACA;AACD,SAdQ;AAeTC,QAAAA,WAAW,EAAE,MAAM;AACjBX,UAAAA,OAAO,CAACY,KAAR,GADiB,CACD;;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAYV,GAAG,CAACW,GAAJ,CAAQC,CAAC,IAAIA,CAAC,CAACC,UAAF,CAAaC,WAA1B,CAAZ;AAEA,iBAAOd,GAAP;AACD,SApBQ;AAqBTe,QAAAA,OAAO,EAAEC,KAAK,IAAI;AAChBP,UAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD;AAvBQ,OAFX;;AA4BAC,MAAAA,MAAM,GAAGC,KAAK,IAAI;AAChB,aAAKC,QAAL,CAAc,CAAC;AAAEC,UAAAA;AAAF,SAAD,KAAiB;AAC7B,gBAAMC,MAAM,GAAG,CAAC,GAAGD,OAAJ,EAAaF,KAAb,CAAf;AAEA,iBAAO;AACLE,YAAAA,OAAO,EAAEC;AADJ,WAAP;AAGD,SAND;AAOD,OARD;AAWD,KAxEkB;;AAGjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXH,MAAAA,OAAO,EAAE,EAFE;AAGXI,MAAAA,OAAO,EAAE;AAHE,KAAb;AAOA,SAAK3B,MAAL,GAAcT,KAAK,CAACS,MAAN,CACZ,uBADY,EAEZT,KAAK,CAACqC,IAAN,CAAWC,KAAX,CAAiB,OAAjB,EAA0B,SAA1B,CAFY,CAAd;;AAKA,UAAM1B,IAAG,GAAG,KAAKP,KAAL,CAAW,wBAAX,CAAZ;;AAEA,SAAK0B,QAAL,CAAc,CAAC;AAAEI,MAAAA;AAAF,KAAD,KAAiB;AACzB,YAAMF,MAAM,GAAG,CAAC,GAAGE,OAAJ,EAAavB,IAAG,CAACW,GAAJ,CAAQC,CAAC,IAAIA,CAAC,CAACC,UAAF,CAAaC,WAA1B,CAAb,CAAf;AAEA,aAAO;AACLS,QAAAA,OAAO,EAAEF;AADJ,OAAP;AAGD,KANL;AASD;;AAgDDM,EAAAA,MAAM,GAAG;AACL;AACA,wBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKV,MAA1B;AAAkC,MAAA,OAAO,EAAE,KAAKK,KAAL,CAAWC,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFA;AASH;;AAtFyB;;AAyF5B,eAAejC,GAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport './App.css';\r\nimport RequestHead from \"./RequestHead\";\r\n\r\nvar neo4j = require('neo4j-driver')\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      allDirs: [],\r\n      actDirs: [],\r\n      results: [],\r\n\r\n    };\r\n    \r\n    this.driver = neo4j.driver(\r\n      'bolt://localhost:7687',\r\n      neo4j.auth.basic('neo4j', 'letmein')\r\n    )\r\n\r\n    const res = this.fetch('MATCH (x:Dir) RETURN x');\r\n\r\n    this.setState(({ allDirs }) => {\r\n          const newArr = [...allDirs, res.map(x => x.properties.description)];\r\n    \r\n          return {\r\n            allDirs: newArr\r\n          };\r\n        }\r\n      );\r\n\r\n  }\r\n\r\n  \r\n  fetch = (query, params) => {\r\n    //const { mapCenter, startDate, endDate } = this.state;\r\n    const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n    const res = [];\r\n    session\r\n    .run(query, params)\r\n    .subscribe({\r\n      //onKeys: keys => {\r\n        //console.log(keys)\r\n      //},\r\n      onNext: record => {\r\n        //console.log(this.state.allDirs);\r\n        res.push(record.get('x'));\r\n        // this.setState(({ allDirs }) => {\r\n        //   const newArr = [...allDirs, record.get('x').properties.description];\r\n    \r\n        //   return {\r\n        //     allDirs: newArr\r\n        //   };\r\n        // });\r\n      },\r\n      onCompleted: () => {        \r\n        session.close();// returns a Promise\r\n        console.log(res.map(x => x.properties.description));\r\n        \r\n        return res;\r\n      },\r\n      onError: error => {\r\n        console.log(error)\r\n      }\r\n    })\r\n\r\n    addDir = input => {\r\n      this.setState(({ actDirs }) => {\r\n        const newArr = [...actDirs, input];\r\n  \r\n        return {\r\n          actDirs: newArr\r\n        };\r\n      });\r\n    };\r\n\r\n\r\n  }\r\n  \r\n  render() {\r\n      // console.log(this.state.allDirs);\r\n      return (\r\n      \r\n      <main>        \r\n        <RequestHead addDir={this.addDir} allDirs={this.state.allDirs}/>\r\n        {/* <ResponseBody /> */}\r\n        \r\n      </main>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}