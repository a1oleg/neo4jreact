{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a1ole\\\\Documents\\\\GitHub\\\\neo4jreact\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport Selector from \"./Selector\";\nimport DirList from \"./DirList\";\n\nvar neo4j = require('neo4j-driver');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.xfetch = param => {\n      //console.log(input)\n      const session = this.driver.session({\n        defaultAccessMode: neo4j.session.READ\n      }); //const res = [];\n\n      session.run('MATCH (d{Name: $nameParam})-[:value]->(v) RETURN v.Name', {\n        nameParam: param\n      }).subscribe({\n        //onKeys: keys => {\n        //console.log(keys)\n        //},\n        onNext: record => {\n          //res.push(record._fields[0]);\n          console.log(record._fields[0]);\n          this.setState({\n            [this.state.allDirs]: [this.state.allDirs.filter(function (item) {\n              return item.name === param;\n            })[0].values.push(record._fields[0])]\n          });\n        },\n        onCompleted: () => {\n          //this.setState({ [target]: [...target, ...res ] });\n          console.log(target); // this.setState(({ allDirs }) => {\n          //   const newArr = allDirs.filter(function(item) { \n          //       return item === input\n          //   });\n          //   newArr.push({\n          //     name: input,\n          //     values: res\n          //   } );    \n          //   return {\n          //     allDirs: newArr\n          //   };\n          // });\n\n          session.close(); // returns a Promise\n        },\n        onError: error => {\n          console.log(error);\n        }\n      });\n    };\n\n    this.addValue = input => {\n      console.log(input);\n    };\n\n    this.state = {\n      allDirs: [{\n        name: 'Мать справочников',\n        values: []\n      }],\n      actDirs: [],\n      results: []\n    };\n    this.driver = neo4j.driver('bolt://localhost:7687', neo4j.auth.basic('neo4j', 'letmein'));\n    this.xfetch('Мать справочников');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, this.state.allDirs.filter(function (item) {\n      return item.values.length > 0 && item.name !== 'Мать справочников';\n    }).map(n => {\n      return /*#__PURE__*/React.createElement(Selector, {\n        name: n.name,\n        values: n.values,\n        change: this.addValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 18\n        }\n      }); //change ={this.addDir}       \n    }), /*#__PURE__*/React.createElement(Selector, {\n      name: 'Справочники',\n      values: this.state.allDirs.filter(function (item) {\n        return item.name == 'Мать справочников';\n      })[0].values,\n      change: this.xfetch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/src/App.js"],"names":["React","Component","Selector","DirList","neo4j","require","App","constructor","props","xfetch","param","session","driver","defaultAccessMode","READ","run","nameParam","subscribe","onNext","record","console","log","_fields","setState","state","allDirs","filter","item","name","values","push","onCompleted","target","close","onError","error","addValue","input","actDirs","results","auth","basic","render","length","map","n"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport './App.css';\r\nimport Selector from \"./Selector\";\r\nimport DirList from \"./DirList\";\r\nvar neo4j = require('neo4j-driver')\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      allDirs: [{\r\n        name: 'Мать справочников',\r\n        values: []\r\n      }],\r\n      actDirs: [],\r\n      results: [],\r\n\r\n    };\r\n    \r\n    this.driver = neo4j.driver(\r\n      'bolt://localhost:7687',\r\n      neo4j.auth.basic('neo4j', 'letmein')\r\n    )\r\n    this.xfetch('Мать справочников'); \r\n  }\r\n\r\n  xfetch = (param) => {\r\n    //console.log(input)\r\n    const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n    //const res = [];\r\n    session\r\n    .run('MATCH (d{Name: $nameParam})-[:value]->(v) RETURN v.Name', {\r\n      nameParam: param\r\n    })\r\n    .subscribe({\r\n      //onKeys: keys => {\r\n        //console.log(keys)\r\n      //},\r\n      onNext: record => {\r\n        //res.push(record._fields[0]);\r\n        console.log(record._fields[0]);\r\n        this.setState({ [this.state.allDirs]: [this.state.allDirs.filter(function(item) { \r\n            return item.name === param\r\n        })[0].values.push(record._fields[0])] });\r\n      },\r\n      onCompleted: () => {    \r\n        \r\n        //this.setState({ [target]: [...target, ...res ] });\r\n        console.log(target)\r\n        // this.setState(({ allDirs }) => {\r\n        //   const newArr = allDirs.filter(function(item) { \r\n        //       return item === input\r\n        //   });\r\n\r\n        //   newArr.push({\r\n        //     name: input,\r\n        //     values: res\r\n        //   } );    \r\n        //   return {\r\n        //     allDirs: newArr\r\n        //   };\r\n        // });\r\n        \r\n        session.close();// returns a Promise\r\n        \r\n      },\r\n      onError: error => {\r\n        console.log(error)\r\n      }\r\n    });    \r\n  };\r\n\r\n  addValue = input => {\r\n    console.log(input)\r\n\r\n  };\r\n\r\n  render() {      \r\n      return (      \r\n      <main> \r\n             {this.state.allDirs.filter(function(item) { \r\n                return item.values.length > 0 && item.name !== 'Мать справочников'\r\n            })\r\n             .map(n => {               \r\n          return <Selector name= {n.name} values = {n.values}  change ={this.addValue}/>//change ={this.addDir}       \r\n       })}\r\n        \r\n        <Selector name= {'Справочники'} values={this.state.allDirs.filter(function(item) { \r\n                return item.name == 'Мать справочников'\r\n            })[0].values} change ={this.xfetch}/> \r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}