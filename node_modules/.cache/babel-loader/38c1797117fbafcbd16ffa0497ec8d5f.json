{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _streamObservers = require(\"./stream-observers\");\n\nvar _boltProtocolV = _interopRequireDefault(require(\"./bolt-protocol-v1\"));\n/**\r\n * Copyright (c) 2002-2020 \"Neo4j,\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Connection = /*#__PURE__*/function () {\n  /**\r\n   * @param {ConnectionErrorHandler} errorHandler the error handler\r\n   */\n  function Connection(errorHandler) {\n    (0, _classCallCheck2[\"default\"])(this, Connection);\n    this._errorHandler = errorHandler;\n  }\n\n  (0, _createClass2[\"default\"])(Connection, [{\n    key: \"isOpen\",\n\n    /**\r\n     * @returns {boolean} whether this connection is in a working condition\r\n     */\n    value: function isOpen() {\n      throw new Error('not implemented');\n    }\n    /**\r\n     * @returns {BoltProtocol} the underlying bolt protocol assigned to this connection\r\n     */\n\n  }, {\n    key: \"protocol\",\n    value: function protocol() {\n      throw new Error('not implemented');\n    }\n    /**\r\n     * @returns {ServerAddress} the server address this connection is opened against\r\n     */\n\n  }, {\n    key: \"connect\",\n\n    /**\r\n     * Connect to the target address, negotiate Bolt protocol and send initialization message.\r\n     * @param {string} userAgent the user agent for this driver.\r\n     * @param {Object} authToken the object containing auth information.\r\n     * @return {Promise<Connection>} promise resolved with the current connection if connection is successful. Rejected promise otherwise.\r\n     */\n    value: function connect(userAgent, authToken) {\n      throw new Error('not implemented');\n    }\n    /**\r\n     * Write a message to the network channel.\r\n     * @param {RequestMessage} message the message to write.\r\n     * @param {ResultStreamObserver} observer the response observer.\r\n     * @param {boolean} flush `true` if flush should happen after the message is written to the buffer.\r\n     */\n\n  }, {\n    key: \"write\",\n    value: function write(message, observer, flush) {\n      throw new Error('not implemented');\n    }\n    /**\r\n     * Send a RESET-message to the database. Message is immediately flushed to the network.\r\n     * @return {Promise<void>} promise resolved when SUCCESS-message response arrives, or failed when other response messages arrives.\r\n     */\n\n  }, {\n    key: \"resetAndFlush\",\n    value: function resetAndFlush() {\n      throw new Error('not implemented');\n    }\n    /**\r\n     * Call close on the channel.\r\n     * @returns {Promise<void>} - A promise that will be resolved when the connection is closed.\r\n     *\r\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      throw new Error('not implemented');\n    }\n    /**\r\n     *\r\n     * @param error\r\n     * @param address\r\n     * @returns {Neo4jError|*}\r\n     */\n\n  }, {\n    key: \"handleAndTransformError\",\n    value: function handleAndTransformError(error, address) {\n      if (this._errorHandler) {\n        return this._errorHandler.handleAndTransformError(error, address);\n      }\n\n      return error;\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"databaseId\",\n    get: function get() {\n      throw new Error('not implemented');\n    },\n    set: function set(value) {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"address\",\n    get: function get() {\n      throw new Error('not implemented');\n    }\n    /**\r\n     * @returns {ServerVersion} the version of the server this connection is connected to\r\n     */\n\n  }, {\n    key: \"version\",\n    get: function get() {\n      throw new Error('not implemented');\n    },\n    set: function set(value) {\n      throw new Error('not implemented');\n    }\n  }, {\n    key: \"server\",\n    get: function get() {\n      throw new Error('not implemented');\n    }\n  }]);\n  return Connection;\n}();\n\nexports[\"default\"] = Connection;","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/node_modules/neo4j-driver/lib/internal/connection.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_classCallCheck2","_createClass2","_streamObservers","_boltProtocolV","Connection","errorHandler","_errorHandler","key","isOpen","Error","protocol","connect","userAgent","authToken","write","message","observer","flush","resetAndFlush","close","handleAndTransformError","error","address","get","set"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports[\"default\"] = void 0;\r\n\r\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\r\n\r\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\r\n\r\nvar _streamObservers = require(\"./stream-observers\");\r\n\r\nvar _boltProtocolV = _interopRequireDefault(require(\"./bolt-protocol-v1\"));\r\n\r\n/**\r\n * Copyright (c) 2002-2020 \"Neo4j,\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Connection =\r\n/*#__PURE__*/\r\nfunction () {\r\n  /**\r\n   * @param {ConnectionErrorHandler} errorHandler the error handler\r\n   */\r\n  function Connection(errorHandler) {\r\n    (0, _classCallCheck2[\"default\"])(this, Connection);\r\n    this._errorHandler = errorHandler;\r\n  }\r\n\r\n  (0, _createClass2[\"default\"])(Connection, [{\r\n    key: \"isOpen\",\r\n\r\n    /**\r\n     * @returns {boolean} whether this connection is in a working condition\r\n     */\r\n    value: function isOpen() {\r\n      throw new Error('not implemented');\r\n    }\r\n    /**\r\n     * @returns {BoltProtocol} the underlying bolt protocol assigned to this connection\r\n     */\r\n\r\n  }, {\r\n    key: \"protocol\",\r\n    value: function protocol() {\r\n      throw new Error('not implemented');\r\n    }\r\n    /**\r\n     * @returns {ServerAddress} the server address this connection is opened against\r\n     */\r\n\r\n  }, {\r\n    key: \"connect\",\r\n\r\n    /**\r\n     * Connect to the target address, negotiate Bolt protocol and send initialization message.\r\n     * @param {string} userAgent the user agent for this driver.\r\n     * @param {Object} authToken the object containing auth information.\r\n     * @return {Promise<Connection>} promise resolved with the current connection if connection is successful. Rejected promise otherwise.\r\n     */\r\n    value: function connect(userAgent, authToken) {\r\n      throw new Error('not implemented');\r\n    }\r\n    /**\r\n     * Write a message to the network channel.\r\n     * @param {RequestMessage} message the message to write.\r\n     * @param {ResultStreamObserver} observer the response observer.\r\n     * @param {boolean} flush `true` if flush should happen after the message is written to the buffer.\r\n     */\r\n\r\n  }, {\r\n    key: \"write\",\r\n    value: function write(message, observer, flush) {\r\n      throw new Error('not implemented');\r\n    }\r\n    /**\r\n     * Send a RESET-message to the database. Message is immediately flushed to the network.\r\n     * @return {Promise<void>} promise resolved when SUCCESS-message response arrives, or failed when other response messages arrives.\r\n     */\r\n\r\n  }, {\r\n    key: \"resetAndFlush\",\r\n    value: function resetAndFlush() {\r\n      throw new Error('not implemented');\r\n    }\r\n    /**\r\n     * Call close on the channel.\r\n     * @returns {Promise<void>} - A promise that will be resolved when the connection is closed.\r\n     *\r\n     */\r\n\r\n  }, {\r\n    key: \"close\",\r\n    value: function close() {\r\n      throw new Error('not implemented');\r\n    }\r\n    /**\r\n     *\r\n     * @param error\r\n     * @param address\r\n     * @returns {Neo4jError|*}\r\n     */\r\n\r\n  }, {\r\n    key: \"handleAndTransformError\",\r\n    value: function handleAndTransformError(error, address) {\r\n      if (this._errorHandler) {\r\n        return this._errorHandler.handleAndTransformError(error, address);\r\n      }\r\n\r\n      return error;\r\n    }\r\n  }, {\r\n    key: \"id\",\r\n    get: function get() {\r\n      throw new Error('not implemented');\r\n    }\r\n  }, {\r\n    key: \"databaseId\",\r\n    get: function get() {\r\n      throw new Error('not implemented');\r\n    },\r\n    set: function set(value) {\r\n      throw new Error('not implemented');\r\n    }\r\n  }, {\r\n    key: \"address\",\r\n    get: function get() {\r\n      throw new Error('not implemented');\r\n    }\r\n    /**\r\n     * @returns {ServerVersion} the version of the server this connection is connected to\r\n     */\r\n\r\n  }, {\r\n    key: \"version\",\r\n    get: function get() {\r\n      throw new Error('not implemented');\r\n    },\r\n    set: function set(value) {\r\n      throw new Error('not implemented');\r\n    }\r\n  }, {\r\n    key: \"server\",\r\n    get: function get() {\r\n      throw new Error('not implemented');\r\n    }\r\n  }]);\r\n  return Connection;\r\n}();\r\n\r\nexports[\"default\"] = Connection;"]},"metadata":{},"sourceType":"script"}