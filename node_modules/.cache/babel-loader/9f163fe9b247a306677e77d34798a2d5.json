{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a1ole\\\\Documents\\\\GitHub\\\\neo4jreact\\\\src\\\\App.js\";\nimport React, { Component, useState } from \"react\";\nimport XLSX from \"xlsx\";\nimport './App.css';\nimport Selector from \"./Selector\";\nimport MapComponent from \"./MapComponent\";\n\nvar neo4j = require('neo4j-driver');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getDirs = () => {\n      const session = this.driver.session({\n        defaultAccessMode: neo4j.session.READ\n      });\n      const res = [];\n      session.run('MATCH (d{Name: $nameParam})-[:value]->(v) RETURN v.Name', {\n        nameParam: 'Мать справочников'\n      }).subscribe({\n        onNext: record => {\n          res.push({\n            name: record._fields[0]\n          }); //console.log(record._fields[0])      \n        },\n        onCompleted: () => {\n          this.setState({\n            allDirs: res\n          }); //console.log(this.state)\n\n          session.close(); // returns a Promise  \n        },\n        onError: error => {\n          console.log(error);\n        }\n      });\n    };\n\n    this.addDir = param => {\n      //console.log(param)\n      const session = this.driver.session({\n        defaultAccessMode: neo4j.session.READ\n      });\n      const res = [];\n      session.run('MATCH (:Dir{Name: $nameParam})-[:value]->(v)<-[r:field]-(:Wagon) RETURN v.Name, count(r)', {\n        nameParam: param.name\n      }).subscribe({\n        //onKeys: keys => {\n        //console.log(keys)\n        //},\n        onNext: record => {\n          res.push({\n            name: record._fields[0],\n            count: record._fields[1].low\n          }); //console.log(record._fields[1].low)\n        },\n        onCompleted: () => {\n          session.close(); // returns a Promise\n\n          this.setState(({\n            inDirs\n          }) => {\n            const newArr = [...inDirs, {\n              name: param.value,\n              values: res\n            }];\n            return {\n              inDirs: newArr\n            };\n          });\n        },\n        onError: error => {\n          console.log(error);\n        }\n      });\n    };\n\n    this.addValue = input => {\n      //console.log(input)\n      this.setState(({\n        choDirs\n      }) => {\n        const newArr = [...choDirs, input];\n        return {\n          choDirs: newArr\n        };\n      }); //console.log(this.state.choDirs);\n    };\n\n    this.xfetch = () => {\n      const session = this.driver.session({\n        defaultAccessMode: neo4j.session.READ\n      });\n      const res = new Map(); // //по обратному порядку каунта добавлять в запрос\n      // let sorted = this.state.choDirs.sort(function (a, b) {\n      //   if (a.name > b.count) {\n      //     return 1;\n      //   }\n      //   if (a.name < b.count) {\n      //     return -1;\n      //   }\n      //   // a должно быть равным b\n      //   return 0;\n      // });\n\n      let qString = 'MATCH (x:Value)<-[:field]-(w:Wagon)\\n WHERE x.Name IN $inFields\\n';\n      qString += 'MATCH (d:Dir)-[:value]->(v:Value)<-[:field]-(w)\\n';\n      qString += 'WHERE d.Name IN $outFields\\n';\n      qString += 'RETURN w, v.Name '; //qString += 'LIMIT 6';\n\n      console.log(qString);\n      session.run(qString, {\n        outFields: this.state.outFields,\n        inFields: this.state.choDirs.map(n => n.name)\n      }).subscribe({\n        onNext: record => {\n          let x = res.get(record._fields[0].identity.low);\n\n          if (typeof x !== \"undefined\") {\n            const newArr = [...x, record._fields[1]];\n            res.set(record._fields[0].identity.low, newArr);\n          } else {\n            res.set(record._fields[0].identity.low, [record._fields[1]]);\n          }\n        },\n        onCompleted: () => {\n          session.close(); // returns a Promise\n\n          this.setState(({\n            myMap\n          }) => {\n            return {\n              myMap: res\n            };\n          }); //console.log(res);\n\n          console.log(this.state.myMap);\n        },\n        onError: error => {\n          console.log(error);\n        }\n      });\n    };\n\n    this.addOutField = input => {\n      //console.log(input)\n      this.setState(({\n        outFields\n      }) => {\n        const newArr = [...outFields, input.name];\n        return {\n          outFields: newArr\n        };\n      }); //console.log(this.state.outFields)\n    };\n\n    this.doit = (type, fn, dl) => {\n      console.log('item');\n      var elt = document.getElementById('data-table');\n      var wb = XLSX.utils.table_to_book(elt, {\n        sheet: \"Sheet JS\"\n      });\n      return dl ? XLSX.write(wb, {\n        bookType: 'xlsx',\n        bookSST: true,\n        type: 'base64'\n      }) : XLSX.writeFile(wb, fn || 'SheetJSTableExport.' + 'xlsx');\n    };\n\n    this.state = {\n      allDirs: [],\n      //[{name: 'Мать справочников',values: []}],\n      inDirs: [],\n      choDirs: [],\n      outFields: [],\n      //results: [],\n      myMap: new Map()\n    };\n    this.driver = neo4j.driver('bolt://localhost:7687', neo4j.auth.basic('neo4j', 'letmein'));\n    this.getDirs();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }\n    }, this.state.inDirs.map(n => {\n      return /*#__PURE__*/React.createElement(Selector, {\n        key: n.value,\n        name: 'Выбрать значение для ' + n.name,\n        values: n.values,\n        change: this.addValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 18\n        }\n      }); //change ={this.addDir}       \n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Selector, {\n      name: 'Добавить спаравочник',\n      values: this.state.allDirs,\n      change: this.addDir,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.xfetch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }, \"\\u0417\\u0430\\u043F\\u0440\\u043E\\u0441\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      border: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, \"_id\"), this.state.outFields.map(n => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 22\n        }\n      }, n);\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Selector, {\n      name: 'Добавить поле вывода',\n      values: this.state.allDirs,\n      change: this.addOutField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, \"...\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }, \"...\"), this.state.outFields.map(n => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 24\n        }\n      }, \"...\");\n    }))), /*#__PURE__*/React.createElement(\"tbody\", {\n      id: \"data-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    }, [...this.state.myMap].map(item => {\n      console.log(item);\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 19\n        }\n      }, item[0]), item[1].map(v => {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 30\n          }\n        }, v);\n      }));\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Export to XLSX!\",\n      onClick: this.doit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/src/App.js"],"names":["React","Component","useState","XLSX","Selector","MapComponent","neo4j","require","App","constructor","props","getDirs","session","driver","defaultAccessMode","READ","res","run","nameParam","subscribe","onNext","record","push","name","_fields","onCompleted","setState","allDirs","close","onError","error","console","log","addDir","param","count","low","inDirs","newArr","value","values","addValue","input","choDirs","xfetch","Map","qString","outFields","state","inFields","map","n","x","get","identity","set","myMap","addOutField","doit","type","fn","dl","elt","document","getElementById","wb","utils","table_to_book","sheet","write","bookType","bookSST","writeFile","auth","basic","render","item","v"],"mappings":"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","sourcesContent":["import React, { Component,useState } from \"react\";\r\nimport XLSX from \"xlsx\";\r\nimport './App.css';\r\nimport Selector from \"./Selector\";\r\nimport MapComponent from \"./MapComponent\";\r\nvar neo4j = require('neo4j-driver')\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      allDirs: [], //[{name: 'Мать справочников',values: []}],\r\n      inDirs: [],\r\n      choDirs: [],\r\n      \r\n      outFields: [],\r\n      //results: [],\r\n      myMap: new Map()\r\n    };\r\n    \r\n    this.driver = neo4j.driver(\r\n      'bolt://localhost:7687',\r\n      neo4j.auth.basic('neo4j', 'letmein')\r\n    );\r\n    \r\n    this.getDirs();\r\n    \r\n  };\r\n\r\n  getDirs = () => {\r\n    const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n    const res = [];\r\n    session\r\n    .run('MATCH (d{Name: $nameParam})-[:value]->(v) RETURN v.Name', {\r\n      nameParam: 'Мать справочников'\r\n    })\r\n    .subscribe({     \r\n      onNext: record => {\r\n        res.push({name:record._fields[0]});  \r\n        //console.log(record._fields[0])      \r\n      },\r\n      onCompleted: () => {          \r\n        this.setState({ allDirs: res})\r\n        //console.log(this.state)\r\n        session.close();// returns a Promise  \r\n      },\r\n      onError: error => {\r\n        console.log(error)\r\n      }\r\n    });    \r\n  };\r\n\r\n  addDir = (param) => {\r\n    //console.log(param)\r\n    const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n    const res = [];\r\n    session\r\n    .run('MATCH (:Dir{Name: $nameParam})-[:value]->(v)<-[r:field]-(:Wagon) RETURN v.Name, count(r)', {\r\n      nameParam: param.name\r\n    })\r\n    .subscribe({\r\n      //onKeys: keys => {\r\n        //console.log(keys)\r\n      //},\r\n      onNext: record => {\r\n        res.push({name:record._fields[0], count:record._fields[1].low});\r\n        //console.log(record._fields[1].low)\r\n      },\r\n      onCompleted: () => {  \r\n        session.close();// returns a Promise\r\n          this.setState(({ inDirs }) => {\r\n          const newArr = [...inDirs, {name: param.value, values: res}];   \r\n    \r\n            return {\r\n              inDirs: newArr\r\n            }\r\n        })\r\n          \r\n      },\r\n      onError: error => {\r\n        console.log(error)\r\n      }\r\n    });    \r\n  };\r\n\r\n  addValue = input => {\r\n    //console.log(input)\r\n\r\n    \r\n    this.setState(({ choDirs }) => {\r\n      const newArr = [...choDirs, input];   \r\n\r\n        return {\r\n          choDirs: newArr\r\n        }\r\n    })\r\n    //console.log(this.state.choDirs);\r\n  };\r\n\r\n  xfetch = () => {    \r\n    const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n    const res = new Map();\r\n    \r\n    // //по обратному порядку каунта добавлять в запрос\r\n    // let sorted = this.state.choDirs.sort(function (a, b) {\r\n    //   if (a.name > b.count) {\r\n    //     return 1;\r\n    //   }\r\n    //   if (a.name < b.count) {\r\n    //     return -1;\r\n    //   }\r\n    //   // a должно быть равным b\r\n    //   return 0;\r\n    // });\r\n    \r\n    let qString = 'MATCH (x:Value)<-[:field]-(w:Wagon)\\n WHERE x.Name IN $inFields\\n';\r\n    \r\n    qString += 'MATCH (d:Dir)-[:value]->(v:Value)<-[:field]-(w)\\n';\r\n    qString += 'WHERE d.Name IN $outFields\\n';\r\n    qString += 'RETURN w, v.Name ';\r\n    //qString += 'LIMIT 6';\r\n\r\n    console.log(qString);\r\n\r\n    session\r\n    .run(qString, {\r\n      outFields: this.state.outFields\r\n      ,inFields: this.state.choDirs.map(n => n.name)\r\n    })\r\n    .subscribe({\r\n      onNext: record => {       \r\n        let x = res.get(record._fields[0].identity.low);  \r\n        if(typeof x !== \"undefined\"){\r\n          const newArr = [...x, record._fields[1]];\r\n\r\n          res.set(record._fields[0].identity.low, newArr);\r\n        }\r\n        else{\r\n          res.set(record._fields[0].identity.low, [record._fields[1]]);\r\n        } \r\n      },\r\n      onCompleted: () => {  \r\n        session.close();// returns a Promise\r\n        \r\n        this.setState(({ myMap }) => {\r\n            return {\r\n              myMap: res\r\n            }\r\n        });   \r\n        //console.log(res);\r\n        console.log(this.state.myMap);\r\n      },\r\n      onError: error => {\r\n        console.log(error)\r\n      }\r\n    });    \r\n  }\r\n\r\n  addOutField = input => {\r\n    //console.log(input)\r\n    this.setState(({ outFields }) => {\r\n      const newArr = [...outFields, input.name];   \r\n\r\n        return {\r\n          outFields: newArr\r\n        }\r\n    })\r\n    //console.log(this.state.outFields)\r\n  };\r\n\r\n  \r\n  doit = (type, fn, dl) => {\r\n    console.log('item');\r\n\tvar elt = document.getElementById('data-table');\r\n\tvar wb = XLSX.utils.table_to_book(elt, {sheet:\"Sheet JS\"});\r\n\treturn dl ?\r\n\t\tXLSX.write(wb, {bookType:'xlsx', bookSST:true, type: 'base64'}) :\r\n\t\tXLSX.writeFile(wb, fn || ('SheetJSTableExport.' + 'xlsx'));\r\n}\r\n\r\n\r\n  render() {      \r\n      return (      \r\n      <main> \r\n        {this.state.inDirs.map(n => {               \r\n          return <Selector key={n.value} name= {'Выбрать значение для ' + n.name} values = {n.values}  change ={this.addValue}/>//change ={this.addDir}       \r\n        })}\r\n        <br></br>\r\n        <Selector name= {'Добавить спаравочник'} values={this.state.allDirs} change ={this.addDir}/>\r\n        <br></br> \r\n        <button onClick={this.xfetch}>\r\n          Запрос\r\n        </button>\r\n        <br></br>\r\n        <br></br>\r\n        <table border=\"1\" >\r\n          <thead>\r\n            <td>_id</td>\r\n            \r\n            {this.state.outFields.map(n => {               \r\n              return <td>{n}</td>       \r\n            })}\r\n\r\n            <td><Selector name= {'Добавить поле вывода'} values={this.state.allDirs} change ={this.addOutField}/> </td>  \r\n            <tr>\r\n            <td>...</td>\r\n            <td>...</td>\r\n            {this.state.outFields.map(n => {               \r\n                return <td>...</td>    \r\n              })}\r\n          </tr>            \r\n          </thead>\r\n\r\n          <tbody id=\"data-table\">\r\n\r\n          {[...this.state.myMap].map(item => {\r\n            console.log(item)\r\n            return <tr>\r\n                  <td>{item[0]}</td>  \r\n                    {item[1].map(v => {               \r\n                      return <td>{v}</td>\r\n                      })}\r\n                </tr> \r\n\r\n            }) \r\n          }\r\n          </tbody>\r\n        </table>\r\n        <br></br>\r\n        <input type=\"submit\" value=\"Export to XLSX!\" onClick={this.doit} ></input>\r\n        {/* onclick={this.doit('xlsx')} */}\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}