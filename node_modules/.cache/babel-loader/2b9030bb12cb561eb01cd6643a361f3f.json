{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a1ole\\\\Documents\\\\GitHub\\\\neo4jreact\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport RequestHead from \"./RequestHead\";\n\nvar neo4j = require('neo4j-driver');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchAllDirs = () => {\n      this.xfetch('MATCH (x:Dir) RETURN x');\n    };\n\n    this.xfetch = query => {\n      const session = this.driver.session({\n        defaultAccessMode: neo4j.session.READ\n      });\n      const res = [];\n      session.run(query).subscribe({\n        //onKeys: keys => {\n        //console.log(keys)\n        //},\n        onNext: record => {\n          //console.log(this.state.allDirs);\n          //res.push(record.get('x').properties.description);    \n          this.setState(({\n            allDirs\n          }) => {\n            const newArr = [...allDirs, record.get('x').properties.description];\n            return {\n              allDirs: newArr\n            };\n          });\n        },\n        onCompleted: () => {\n          session.close(); // returns a Promise\n          //return res;\n        },\n        onError: error => {\n          console.log(error);\n        }\n      });\n    };\n\n    this.addDir = input => {\n      this.setState(({\n        actDirs\n      }) => {\n        const newArr = [...actDirs, input];\n        return {\n          actDirs: newArr\n        };\n      });\n    };\n\n    this.state = {\n      allDirs: ['blabla'],\n      actDirs: [],\n      results: []\n    };\n    this.driver = neo4j.driver('bolt://localhost:7687', neo4j.auth.basic('neo4j', 'letmein'));\n    this.fetchAllDirs();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, this.props.actDirs.map(n => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, n);\n    }), /*#__PURE__*/React.createElement(RequestHead, {\n      allDirs: this.state.allDirs,\n      addDir: addDir,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/src/App.js"],"names":["React","Component","RequestHead","neo4j","require","App","constructor","props","fetchAllDirs","xfetch","query","session","driver","defaultAccessMode","READ","res","run","subscribe","onNext","record","setState","allDirs","newArr","get","properties","description","onCompleted","close","onError","error","console","log","addDir","input","actDirs","state","results","auth","basic","render","map","n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAmBnBC,YAnBmB,GAmBJ,MAAM;AACnB,WAAKC,MAAL,CAAY,wBAAZ;AAED,KAtBkB;;AAAA,SAyBnBA,MAzBmB,GAyBTC,KAAD,IAAW;AAClB,YAAMC,OAAO,GAAG,KAAKC,MAAL,CAAYD,OAAZ,CAAoB;AAAEE,QAAAA,iBAAiB,EAAEV,KAAK,CAACQ,OAAN,CAAcG;AAAnC,OAApB,CAAhB;AACA,YAAMC,GAAG,GAAG,EAAZ;AACAJ,MAAAA,OAAO,CACNK,GADD,CACKN,KADL,EAECO,SAFD,CAEW;AACT;AACE;AACF;AACAC,QAAAA,MAAM,EAAEC,MAAM,IAAI;AAChB;AACA;AACA,eAAKC,QAAL,CAAc,CAAC;AAAEC,YAAAA;AAAF,WAAD,KAAiB;AAC7B,kBAAMC,MAAM,GAAG,CAAC,GAAGD,OAAJ,EAAaF,MAAM,CAACI,GAAP,CAAW,GAAX,EAAgBC,UAAhB,CAA2BC,WAAxC,CAAf;AAEA,mBAAO;AACLJ,cAAAA,OAAO,EAAEC;AADJ,aAAP;AAGD,WAND;AAQD,SAfQ;AAgBTI,QAAAA,WAAW,EAAE,MAAM;AACjBf,UAAAA,OAAO,CAACgB,KAAR,GADiB,CACD;AAChB;AAGD,SArBQ;AAsBTC,QAAAA,OAAO,EAAEC,KAAK,IAAI;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AAxBQ,OAFX;AA4BD,KAxDkB;;AAAA,SA0DnBG,MA1DmB,GA0DVC,KAAK,IAAI;AAChB,WAAKb,QAAL,CAAc,CAAC;AAAEc,QAAAA;AAAF,OAAD,KAAiB;AAC7B,cAAMZ,MAAM,GAAG,CAAC,GAAGY,OAAJ,EAAaD,KAAb,CAAf;AAEA,eAAO;AACLC,UAAAA,OAAO,EAAEZ;AADJ,SAAP;AAGD,OAND;AAOD,KAlEkB;;AAGjB,SAAKa,KAAL,GAAa;AACXd,MAAAA,OAAO,EAAE,CAAC,QAAD,CADE;AAEXa,MAAAA,OAAO,EAAE,EAFE;AAGXE,MAAAA,OAAO,EAAE;AAHE,KAAb;AAOA,SAAKxB,MAAL,GAAcT,KAAK,CAACS,MAAN,CACZ,uBADY,EAEZT,KAAK,CAACkC,IAAN,CAAWC,KAAX,CAAiB,OAAjB,EAA0B,SAA1B,CAFY,CAAd;AAKA,SAAK9B,YAAL;AAED;;AAmDD+B,EAAAA,MAAM,GAAG;AACL,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,KAAKhC,KAAL,CAAW2B,OAAX,CAAmBM,GAAnB,CAAuBC,CAAC,IAAI;AACjC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,CAAN,CAAP;AACD,KAFM,CADR,eAKE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWd,OAAjC;AAA0C,MAAA,MAAM,EAAGW,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADA;AASH;;AA/EyB;;AAkF5B,eAAe3B,GAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport './App.css';\r\nimport RequestHead from \"./RequestHead\";\r\n\r\nvar neo4j = require('neo4j-driver')\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      allDirs: ['blabla'],\r\n      actDirs: [],\r\n      results: [],\r\n\r\n    };\r\n    \r\n    this.driver = neo4j.driver(\r\n      'bolt://localhost:7687',\r\n      neo4j.auth.basic('neo4j', 'letmein')\r\n    )\r\n    \r\n    this.fetchAllDirs();  \r\n\r\n  }\r\n\r\n  fetchAllDirs = () => {\r\n    this.xfetch('MATCH (x:Dir) RETURN x');    \r\n      \r\n  };\r\n\r\n\r\n  xfetch = (query) => {\r\n    const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n    const res = [];\r\n    session\r\n    .run(query)\r\n    .subscribe({\r\n      //onKeys: keys => {\r\n        //console.log(keys)\r\n      //},\r\n      onNext: record => {\r\n        //console.log(this.state.allDirs);\r\n        //res.push(record.get('x').properties.description);    \r\n        this.setState(({ allDirs }) => {\r\n          const newArr = [...allDirs, record.get('x').properties.description];\r\n    \r\n          return {\r\n            allDirs: newArr\r\n          };\r\n        });\r\n\r\n      },\r\n      onCompleted: () => {        \r\n        session.close();// returns a Promise\r\n        //return res;\r\n        \r\n        \r\n      },\r\n      onError: error => {\r\n        console.log(error)\r\n      }\r\n    });    \r\n  }\r\n  \r\n  addDir = input => {\r\n    this.setState(({ actDirs }) => {\r\n      const newArr = [...actDirs, input];\r\n\r\n      return {\r\n        actDirs: newArr\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {      \r\n      return (      \r\n      <main> \r\n             {this.props.actDirs.map(n => {\r\n         return <div>{n}</div>;\r\n       })}\r\n\r\n        <RequestHead allDirs={this.state.allDirs} addDir ={addDir}/> \r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}