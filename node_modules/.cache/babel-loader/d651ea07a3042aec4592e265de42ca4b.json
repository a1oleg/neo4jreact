{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n/**\r\n * Copyright (c) 2002-2020 \"Neo4j,\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Common base with default implementation for most buffer methods.\r\n * Buffers are stateful - they track a current \"position\", this helps greatly\r\n * when reading and writing from them incrementally. You can also ignore the\r\n * stateful read/write methods.\r\n * readXXX and writeXXX-methods move the inner position of the buffer.\r\n * putXXX and getXXX-methods do not.\r\n * @access private\r\n */\n\n\nvar BaseBuffer = /*#__PURE__*/function () {\n  /**\r\n   * Create a instance with the injected size.\r\n   * @constructor\r\n   * @param {Integer} size\r\n   */\n  function BaseBuffer(size) {\n    (0, _classCallCheck2[\"default\"])(this, BaseBuffer);\n    this.position = 0;\n    this.length = size;\n  }\n\n  (0, _createClass2[\"default\"])(BaseBuffer, [{\n    key: \"getUInt8\",\n    value: function getUInt8(position) {\n      throw new Error('Not implemented');\n    }\n  }, {\n    key: \"getInt8\",\n    value: function getInt8(position) {\n      throw new Error('Not implemented');\n    }\n  }, {\n    key: \"getFloat64\",\n    value: function getFloat64(position) {\n      throw new Error('Not implemented');\n    }\n  }, {\n    key: \"putUInt8\",\n    value: function putUInt8(position, val) {\n      throw new Error('Not implemented');\n    }\n  }, {\n    key: \"putInt8\",\n    value: function putInt8(position, val) {\n      throw new Error('Not implemented');\n    }\n  }, {\n    key: \"putFloat64\",\n    value: function putFloat64(position, val) {\n      throw new Error('Not implemented');\n    }\n    /**\r\n     * @param p\r\n     */\n\n  }, {\n    key: \"getInt16\",\n    value: function getInt16(p) {\n      return this.getInt8(p) << 8 | this.getUInt8(p + 1);\n    }\n    /**\r\n     * @param p\r\n     */\n\n  }, {\n    key: \"getUInt16\",\n    value: function getUInt16(p) {\n      return this.getUInt8(p) << 8 | this.getUInt8(p + 1);\n    }\n    /**\r\n     * @param p\r\n     */\n\n  }, {\n    key: \"getInt32\",\n    value: function getInt32(p) {\n      return this.getInt8(p) << 24 | this.getUInt8(p + 1) << 16 | this.getUInt8(p + 2) << 8 | this.getUInt8(p + 3);\n    }\n    /**\r\n     * @param p\r\n     */\n\n  }, {\n    key: \"getUInt32\",\n    value: function getUInt32(p) {\n      return this.getUInt8(p) << 24 | this.getUInt8(p + 1) << 16 | this.getUInt8(p + 2) << 8 | this.getUInt8(p + 3);\n    }\n    /**\r\n     * @param p\r\n     */\n\n  }, {\n    key: \"getInt64\",\n    value: function getInt64(p) {\n      return this.getInt8(p) << 56 | this.getUInt8(p + 1) << 48 | this.getUInt8(p + 2) << 40 | this.getUInt8(p + 3) << 32 | this.getUInt8(p + 4) << 24 | this.getUInt8(p + 5) << 16 | this.getUInt8(p + 6) << 8 | this.getUInt8(p + 7);\n    }\n    /**\r\n     * Get a slice of this buffer. This method does not copy any data,\r\n     * but simply provides a slice view of this buffer\r\n     * @param start\r\n     * @param length\r\n     */\n\n  }, {\n    key: \"getSlice\",\n    value: function getSlice(start, length) {\n      return new SliceBuffer(start, length, this);\n    }\n    /**\r\n     * @param p\r\n     * @param val\r\n     */\n\n  }, {\n    key: \"putInt16\",\n    value: function putInt16(p, val) {\n      this.putInt8(p, val >> 8);\n      this.putUInt8(p + 1, val & 0xff);\n    }\n    /**\r\n     * @param p\r\n     * @param val\r\n     */\n\n  }, {\n    key: \"putUInt16\",\n    value: function putUInt16(p, val) {\n      this.putUInt8(p, val >> 8 & 0xff);\n      this.putUInt8(p + 1, val & 0xff);\n    }\n    /**\r\n     * @param p\r\n     * @param val\r\n     */\n\n  }, {\n    key: \"putInt32\",\n    value: function putInt32(p, val) {\n      this.putInt8(p, val >> 24);\n      this.putUInt8(p + 1, val >> 16 & 0xff);\n      this.putUInt8(p + 2, val >> 8 & 0xff);\n      this.putUInt8(p + 3, val & 0xff);\n    }\n    /**\r\n     * @param p\r\n     * @param val\r\n     */\n\n  }, {\n    key: \"putUInt32\",\n    value: function putUInt32(p, val) {\n      this.putUInt8(p, val >> 24 & 0xff);\n      this.putUInt8(p + 1, val >> 16 & 0xff);\n      this.putUInt8(p + 2, val >> 8 & 0xff);\n      this.putUInt8(p + 3, val & 0xff);\n    }\n    /**\r\n     * @param p\r\n     * @param val\r\n     */\n\n  }, {\n    key: \"putInt64\",\n    value: function putInt64(p, val) {\n      this.putInt8(p, val >> 48);\n      this.putUInt8(p + 1, val >> 42 & 0xff);\n      this.putUInt8(p + 2, val >> 36 & 0xff);\n      this.putUInt8(p + 3, val >> 30 & 0xff);\n      this.putUInt8(p + 4, val >> 24 & 0xff);\n      this.putUInt8(p + 5, val >> 16 & 0xff);\n      this.putUInt8(p + 6, val >> 8 & 0xff);\n      this.putUInt8(p + 7, val & 0xff);\n    }\n    /**\r\n     * @param position\r\n     * @param other\r\n     */\n\n  }, {\n    key: \"putBytes\",\n    value: function putBytes(position, other) {\n      for (var i = 0, end = other.remaining(); i < end; i++) {\n        this.putUInt8(position + i, other.readUInt8());\n      }\n    }\n    /**\r\n     * Read from state position.\r\n     */\n\n  }, {\n    key: \"readUInt8\",\n    value: function readUInt8() {\n      return this.getUInt8(this._updatePos(1));\n    }\n    /**\r\n     * Read from state position.\r\n     */\n\n  }, {\n    key: \"readInt8\",\n    value: function readInt8() {\n      return this.getInt8(this._updatePos(1));\n    }\n    /**\r\n     * Read from state position.\r\n     */\n\n  }, {\n    key: \"readUInt16\",\n    value: function readUInt16() {\n      return this.getUInt16(this._updatePos(2));\n    }\n    /**\r\n     * Read from state position.\r\n     */\n\n  }, {\n    key: \"readUInt32\",\n    value: function readUInt32() {\n      return this.getUInt32(this._updatePos(4));\n    }\n    /**\r\n     * Read from state position.\r\n     */\n\n  }, {\n    key: \"readInt16\",\n    value: function readInt16() {\n      return this.getInt16(this._updatePos(2));\n    }\n    /**\r\n     * Read from state position.\r\n     */\n\n  }, {\n    key: \"readInt32\",\n    value: function readInt32() {\n      return this.getInt32(this._updatePos(4));\n    }\n    /**\r\n     * Read from state position.\r\n     */\n\n  }, {\n    key: \"readInt64\",\n    value: function readInt64() {\n      return this.getInt32(this._updatePos(8));\n    }\n    /**\r\n     * Read from state position.\r\n     */\n\n  }, {\n    key: \"readFloat64\",\n    value: function readFloat64() {\n      return this.getFloat64(this._updatePos(8));\n    }\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\n\n  }, {\n    key: \"writeUInt8\",\n    value: function writeUInt8(val) {\n      this.putUInt8(this._updatePos(1), val);\n    }\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\n\n  }, {\n    key: \"writeInt8\",\n    value: function writeInt8(val) {\n      this.putInt8(this._updatePos(1), val);\n    }\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\n\n  }, {\n    key: \"writeInt16\",\n    value: function writeInt16(val) {\n      this.putInt16(this._updatePos(2), val);\n    }\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\n\n  }, {\n    key: \"writeInt32\",\n    value: function writeInt32(val) {\n      this.putInt32(this._updatePos(4), val);\n    }\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\n\n  }, {\n    key: \"writeUInt32\",\n    value: function writeUInt32(val) {\n      this.putUInt32(this._updatePos(4), val);\n    }\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\n\n  }, {\n    key: \"writeInt64\",\n    value: function writeInt64(val) {\n      this.putInt64(this._updatePos(8), val);\n    }\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\n\n  }, {\n    key: \"writeFloat64\",\n    value: function writeFloat64(val) {\n      this.putFloat64(this._updatePos(8), val);\n    }\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\n\n  }, {\n    key: \"writeBytes\",\n    value: function writeBytes(val) {\n      this.putBytes(this._updatePos(val.remaining()), val);\n    }\n    /**\r\n     * Get a slice of this buffer. This method does not copy any data,\r\n     * but simply provides a slice view of this buffer\r\n     * @param length\r\n     */\n\n  }, {\n    key: \"readSlice\",\n    value: function readSlice(length) {\n      return this.getSlice(this._updatePos(length), length);\n    }\n  }, {\n    key: \"_updatePos\",\n    value: function _updatePos(length) {\n      var p = this.position;\n      this.position += length;\n      return p;\n    }\n    /**\r\n     * Get remaining\r\n     */\n\n  }, {\n    key: \"remaining\",\n    value: function remaining() {\n      return this.length - this.position;\n    }\n    /**\r\n     * Has remaining\r\n     */\n\n  }, {\n    key: \"hasRemaining\",\n    value: function hasRemaining() {\n      return this.remaining() > 0;\n    }\n    /**\r\n     * Reset position state\r\n     */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.position = 0;\n    }\n    /**\r\n     * Get string representation of buffer and it's state.\r\n     * @return {string} Buffer as a string\r\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.constructor.name + '( position=' + this.position + ' )\\n  ' + this.toHex();\n    }\n    /**\r\n     * Get string representation of buffer.\r\n     * @return {string} Buffer as a string\r\n     */\n\n  }, {\n    key: \"toHex\",\n    value: function toHex() {\n      var out = '';\n\n      for (var i = 0; i < this.length; i++) {\n        var hexByte = this.getUInt8(i).toString(16);\n\n        if (hexByte.length === 1) {\n          hexByte = '0' + hexByte;\n        }\n\n        out += hexByte;\n\n        if (i !== this.length - 1) {\n          out += ' ';\n        }\n      }\n\n      return out;\n    }\n  }]);\n  return BaseBuffer;\n}();\n/**\r\n * Represents a view as slice of another buffer.\r\n * @access private\r\n */\n\n\nexports[\"default\"] = BaseBuffer;\n\nvar SliceBuffer = /*#__PURE__*/function (_BaseBuffer) {\n  (0, _inherits2[\"default\"])(SliceBuffer, _BaseBuffer);\n\n  function SliceBuffer(start, length, inner) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, SliceBuffer);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(SliceBuffer).call(this, length));\n    _this._start = start;\n    _this._inner = inner;\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(SliceBuffer, [{\n    key: \"putUInt8\",\n    value: function putUInt8(position, val) {\n      this._inner.putUInt8(this._start + position, val);\n    }\n  }, {\n    key: \"getUInt8\",\n    value: function getUInt8(position) {\n      return this._inner.getUInt8(this._start + position);\n    }\n  }, {\n    key: \"putInt8\",\n    value: function putInt8(position, val) {\n      this._inner.putInt8(this._start + position, val);\n    }\n  }, {\n    key: \"putFloat64\",\n    value: function putFloat64(position, val) {\n      this._inner.putFloat64(this._start + position, val);\n    }\n  }, {\n    key: \"getInt8\",\n    value: function getInt8(position) {\n      return this._inner.getInt8(this._start + position);\n    }\n  }, {\n    key: \"getFloat64\",\n    value: function getFloat64(position) {\n      return this._inner.getFloat64(this._start + position);\n    }\n  }]);\n  return SliceBuffer;\n}(BaseBuffer);","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/node_modules/neo4j-driver/lib/internal/buf/base-buf.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_classCallCheck2","_createClass2","BaseBuffer","size","position","length","key","getUInt8","Error","getInt8","getFloat64","putUInt8","val","putInt8","putFloat64","getInt16","p","getUInt16","getInt32","getUInt32","getInt64","getSlice","start","SliceBuffer","putInt16","putUInt16","putInt32","putUInt32","putInt64","putBytes","other","i","end","remaining","readUInt8","_updatePos","readInt8","readUInt16","readUInt32","readInt16","readInt32","readInt64","readFloat64","writeUInt8","writeInt8","writeInt16","writeInt32","writeUInt32","writeInt64","writeFloat64","writeBytes","readSlice","hasRemaining","reset","toString","constructor","name","toHex","out","hexByte","_BaseBuffer","inner","_this","call","_start","_inner"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports[\"default\"] = void 0;\r\n\r\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\r\n\r\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\r\n\r\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\r\n\r\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\r\n\r\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\r\n\r\n/**\r\n * Copyright (c) 2002-2020 \"Neo4j,\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * Common base with default implementation for most buffer methods.\r\n * Buffers are stateful - they track a current \"position\", this helps greatly\r\n * when reading and writing from them incrementally. You can also ignore the\r\n * stateful read/write methods.\r\n * readXXX and writeXXX-methods move the inner position of the buffer.\r\n * putXXX and getXXX-methods do not.\r\n * @access private\r\n */\r\nvar BaseBuffer =\r\n/*#__PURE__*/\r\nfunction () {\r\n  /**\r\n   * Create a instance with the injected size.\r\n   * @constructor\r\n   * @param {Integer} size\r\n   */\r\n  function BaseBuffer(size) {\r\n    (0, _classCallCheck2[\"default\"])(this, BaseBuffer);\r\n    this.position = 0;\r\n    this.length = size;\r\n  }\r\n\r\n  (0, _createClass2[\"default\"])(BaseBuffer, [{\r\n    key: \"getUInt8\",\r\n    value: function getUInt8(position) {\r\n      throw new Error('Not implemented');\r\n    }\r\n  }, {\r\n    key: \"getInt8\",\r\n    value: function getInt8(position) {\r\n      throw new Error('Not implemented');\r\n    }\r\n  }, {\r\n    key: \"getFloat64\",\r\n    value: function getFloat64(position) {\r\n      throw new Error('Not implemented');\r\n    }\r\n  }, {\r\n    key: \"putUInt8\",\r\n    value: function putUInt8(position, val) {\r\n      throw new Error('Not implemented');\r\n    }\r\n  }, {\r\n    key: \"putInt8\",\r\n    value: function putInt8(position, val) {\r\n      throw new Error('Not implemented');\r\n    }\r\n  }, {\r\n    key: \"putFloat64\",\r\n    value: function putFloat64(position, val) {\r\n      throw new Error('Not implemented');\r\n    }\r\n    /**\r\n     * @param p\r\n     */\r\n\r\n  }, {\r\n    key: \"getInt16\",\r\n    value: function getInt16(p) {\r\n      return this.getInt8(p) << 8 | this.getUInt8(p + 1);\r\n    }\r\n    /**\r\n     * @param p\r\n     */\r\n\r\n  }, {\r\n    key: \"getUInt16\",\r\n    value: function getUInt16(p) {\r\n      return this.getUInt8(p) << 8 | this.getUInt8(p + 1);\r\n    }\r\n    /**\r\n     * @param p\r\n     */\r\n\r\n  }, {\r\n    key: \"getInt32\",\r\n    value: function getInt32(p) {\r\n      return this.getInt8(p) << 24 | this.getUInt8(p + 1) << 16 | this.getUInt8(p + 2) << 8 | this.getUInt8(p + 3);\r\n    }\r\n    /**\r\n     * @param p\r\n     */\r\n\r\n  }, {\r\n    key: \"getUInt32\",\r\n    value: function getUInt32(p) {\r\n      return this.getUInt8(p) << 24 | this.getUInt8(p + 1) << 16 | this.getUInt8(p + 2) << 8 | this.getUInt8(p + 3);\r\n    }\r\n    /**\r\n     * @param p\r\n     */\r\n\r\n  }, {\r\n    key: \"getInt64\",\r\n    value: function getInt64(p) {\r\n      return this.getInt8(p) << 56 | this.getUInt8(p + 1) << 48 | this.getUInt8(p + 2) << 40 | this.getUInt8(p + 3) << 32 | this.getUInt8(p + 4) << 24 | this.getUInt8(p + 5) << 16 | this.getUInt8(p + 6) << 8 | this.getUInt8(p + 7);\r\n    }\r\n    /**\r\n     * Get a slice of this buffer. This method does not copy any data,\r\n     * but simply provides a slice view of this buffer\r\n     * @param start\r\n     * @param length\r\n     */\r\n\r\n  }, {\r\n    key: \"getSlice\",\r\n    value: function getSlice(start, length) {\r\n      return new SliceBuffer(start, length, this);\r\n    }\r\n    /**\r\n     * @param p\r\n     * @param val\r\n     */\r\n\r\n  }, {\r\n    key: \"putInt16\",\r\n    value: function putInt16(p, val) {\r\n      this.putInt8(p, val >> 8);\r\n      this.putUInt8(p + 1, val & 0xff);\r\n    }\r\n    /**\r\n     * @param p\r\n     * @param val\r\n     */\r\n\r\n  }, {\r\n    key: \"putUInt16\",\r\n    value: function putUInt16(p, val) {\r\n      this.putUInt8(p, val >> 8 & 0xff);\r\n      this.putUInt8(p + 1, val & 0xff);\r\n    }\r\n    /**\r\n     * @param p\r\n     * @param val\r\n     */\r\n\r\n  }, {\r\n    key: \"putInt32\",\r\n    value: function putInt32(p, val) {\r\n      this.putInt8(p, val >> 24);\r\n      this.putUInt8(p + 1, val >> 16 & 0xff);\r\n      this.putUInt8(p + 2, val >> 8 & 0xff);\r\n      this.putUInt8(p + 3, val & 0xff);\r\n    }\r\n    /**\r\n     * @param p\r\n     * @param val\r\n     */\r\n\r\n  }, {\r\n    key: \"putUInt32\",\r\n    value: function putUInt32(p, val) {\r\n      this.putUInt8(p, val >> 24 & 0xff);\r\n      this.putUInt8(p + 1, val >> 16 & 0xff);\r\n      this.putUInt8(p + 2, val >> 8 & 0xff);\r\n      this.putUInt8(p + 3, val & 0xff);\r\n    }\r\n    /**\r\n     * @param p\r\n     * @param val\r\n     */\r\n\r\n  }, {\r\n    key: \"putInt64\",\r\n    value: function putInt64(p, val) {\r\n      this.putInt8(p, val >> 48);\r\n      this.putUInt8(p + 1, val >> 42 & 0xff);\r\n      this.putUInt8(p + 2, val >> 36 & 0xff);\r\n      this.putUInt8(p + 3, val >> 30 & 0xff);\r\n      this.putUInt8(p + 4, val >> 24 & 0xff);\r\n      this.putUInt8(p + 5, val >> 16 & 0xff);\r\n      this.putUInt8(p + 6, val >> 8 & 0xff);\r\n      this.putUInt8(p + 7, val & 0xff);\r\n    }\r\n    /**\r\n     * @param position\r\n     * @param other\r\n     */\r\n\r\n  }, {\r\n    key: \"putBytes\",\r\n    value: function putBytes(position, other) {\r\n      for (var i = 0, end = other.remaining(); i < end; i++) {\r\n        this.putUInt8(position + i, other.readUInt8());\r\n      }\r\n    }\r\n    /**\r\n     * Read from state position.\r\n     */\r\n\r\n  }, {\r\n    key: \"readUInt8\",\r\n    value: function readUInt8() {\r\n      return this.getUInt8(this._updatePos(1));\r\n    }\r\n    /**\r\n     * Read from state position.\r\n     */\r\n\r\n  }, {\r\n    key: \"readInt8\",\r\n    value: function readInt8() {\r\n      return this.getInt8(this._updatePos(1));\r\n    }\r\n    /**\r\n     * Read from state position.\r\n     */\r\n\r\n  }, {\r\n    key: \"readUInt16\",\r\n    value: function readUInt16() {\r\n      return this.getUInt16(this._updatePos(2));\r\n    }\r\n    /**\r\n     * Read from state position.\r\n     */\r\n\r\n  }, {\r\n    key: \"readUInt32\",\r\n    value: function readUInt32() {\r\n      return this.getUInt32(this._updatePos(4));\r\n    }\r\n    /**\r\n     * Read from state position.\r\n     */\r\n\r\n  }, {\r\n    key: \"readInt16\",\r\n    value: function readInt16() {\r\n      return this.getInt16(this._updatePos(2));\r\n    }\r\n    /**\r\n     * Read from state position.\r\n     */\r\n\r\n  }, {\r\n    key: \"readInt32\",\r\n    value: function readInt32() {\r\n      return this.getInt32(this._updatePos(4));\r\n    }\r\n    /**\r\n     * Read from state position.\r\n     */\r\n\r\n  }, {\r\n    key: \"readInt64\",\r\n    value: function readInt64() {\r\n      return this.getInt32(this._updatePos(8));\r\n    }\r\n    /**\r\n     * Read from state position.\r\n     */\r\n\r\n  }, {\r\n    key: \"readFloat64\",\r\n    value: function readFloat64() {\r\n      return this.getFloat64(this._updatePos(8));\r\n    }\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n\r\n  }, {\r\n    key: \"writeUInt8\",\r\n    value: function writeUInt8(val) {\r\n      this.putUInt8(this._updatePos(1), val);\r\n    }\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n\r\n  }, {\r\n    key: \"writeInt8\",\r\n    value: function writeInt8(val) {\r\n      this.putInt8(this._updatePos(1), val);\r\n    }\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n\r\n  }, {\r\n    key: \"writeInt16\",\r\n    value: function writeInt16(val) {\r\n      this.putInt16(this._updatePos(2), val);\r\n    }\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n\r\n  }, {\r\n    key: \"writeInt32\",\r\n    value: function writeInt32(val) {\r\n      this.putInt32(this._updatePos(4), val);\r\n    }\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n\r\n  }, {\r\n    key: \"writeUInt32\",\r\n    value: function writeUInt32(val) {\r\n      this.putUInt32(this._updatePos(4), val);\r\n    }\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n\r\n  }, {\r\n    key: \"writeInt64\",\r\n    value: function writeInt64(val) {\r\n      this.putInt64(this._updatePos(8), val);\r\n    }\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n\r\n  }, {\r\n    key: \"writeFloat64\",\r\n    value: function writeFloat64(val) {\r\n      this.putFloat64(this._updatePos(8), val);\r\n    }\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n\r\n  }, {\r\n    key: \"writeBytes\",\r\n    value: function writeBytes(val) {\r\n      this.putBytes(this._updatePos(val.remaining()), val);\r\n    }\r\n    /**\r\n     * Get a slice of this buffer. This method does not copy any data,\r\n     * but simply provides a slice view of this buffer\r\n     * @param length\r\n     */\r\n\r\n  }, {\r\n    key: \"readSlice\",\r\n    value: function readSlice(length) {\r\n      return this.getSlice(this._updatePos(length), length);\r\n    }\r\n  }, {\r\n    key: \"_updatePos\",\r\n    value: function _updatePos(length) {\r\n      var p = this.position;\r\n      this.position += length;\r\n      return p;\r\n    }\r\n    /**\r\n     * Get remaining\r\n     */\r\n\r\n  }, {\r\n    key: \"remaining\",\r\n    value: function remaining() {\r\n      return this.length - this.position;\r\n    }\r\n    /**\r\n     * Has remaining\r\n     */\r\n\r\n  }, {\r\n    key: \"hasRemaining\",\r\n    value: function hasRemaining() {\r\n      return this.remaining() > 0;\r\n    }\r\n    /**\r\n     * Reset position state\r\n     */\r\n\r\n  }, {\r\n    key: \"reset\",\r\n    value: function reset() {\r\n      this.position = 0;\r\n    }\r\n    /**\r\n     * Get string representation of buffer and it's state.\r\n     * @return {string} Buffer as a string\r\n     */\r\n\r\n  }, {\r\n    key: \"toString\",\r\n    value: function toString() {\r\n      return this.constructor.name + '( position=' + this.position + ' )\\n  ' + this.toHex();\r\n    }\r\n    /**\r\n     * Get string representation of buffer.\r\n     * @return {string} Buffer as a string\r\n     */\r\n\r\n  }, {\r\n    key: \"toHex\",\r\n    value: function toHex() {\r\n      var out = '';\r\n\r\n      for (var i = 0; i < this.length; i++) {\r\n        var hexByte = this.getUInt8(i).toString(16);\r\n\r\n        if (hexByte.length === 1) {\r\n          hexByte = '0' + hexByte;\r\n        }\r\n\r\n        out += hexByte;\r\n\r\n        if (i !== this.length - 1) {\r\n          out += ' ';\r\n        }\r\n      }\r\n\r\n      return out;\r\n    }\r\n  }]);\r\n  return BaseBuffer;\r\n}();\r\n/**\r\n * Represents a view as slice of another buffer.\r\n * @access private\r\n */\r\n\r\n\r\nexports[\"default\"] = BaseBuffer;\r\n\r\nvar SliceBuffer =\r\n/*#__PURE__*/\r\nfunction (_BaseBuffer) {\r\n  (0, _inherits2[\"default\"])(SliceBuffer, _BaseBuffer);\r\n\r\n  function SliceBuffer(start, length, inner) {\r\n    var _this;\r\n\r\n    (0, _classCallCheck2[\"default\"])(this, SliceBuffer);\r\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(SliceBuffer).call(this, length));\r\n    _this._start = start;\r\n    _this._inner = inner;\r\n    return _this;\r\n  }\r\n\r\n  (0, _createClass2[\"default\"])(SliceBuffer, [{\r\n    key: \"putUInt8\",\r\n    value: function putUInt8(position, val) {\r\n      this._inner.putUInt8(this._start + position, val);\r\n    }\r\n  }, {\r\n    key: \"getUInt8\",\r\n    value: function getUInt8(position) {\r\n      return this._inner.getUInt8(this._start + position);\r\n    }\r\n  }, {\r\n    key: \"putInt8\",\r\n    value: function putInt8(position, val) {\r\n      this._inner.putInt8(this._start + position, val);\r\n    }\r\n  }, {\r\n    key: \"putFloat64\",\r\n    value: function putFloat64(position, val) {\r\n      this._inner.putFloat64(this._start + position, val);\r\n    }\r\n  }, {\r\n    key: \"getInt8\",\r\n    value: function getInt8(position) {\r\n      return this._inner.getInt8(this._start + position);\r\n    }\r\n  }, {\r\n    key: \"getFloat64\",\r\n    value: function getFloat64(position) {\r\n      return this._inner.getFloat64(this._start + position);\r\n    }\r\n  }]);\r\n  return SliceBuffer;\r\n}(BaseBuffer);"]},"metadata":{},"sourceType":"script"}