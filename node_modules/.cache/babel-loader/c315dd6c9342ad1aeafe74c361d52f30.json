{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertDatabaseIsEmpty = assertDatabaseIsEmpty;\nexports.assertTxConfigIsEmpty = assertTxConfigIsEmpty;\n\nvar _error = require(\"../error\");\n\nvar _streamObservers = require(\"./stream-observers\");\n/**\r\n * Copyright (c) 2002-2020 \"Neo4j,\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {TxConfig} txConfig the auto-commit transaction configuration.\r\n * @param {Connection} connection the connection.\r\n * @param {ResultStreamObserver} observer the response observer.\r\n */\n\n\nfunction assertTxConfigIsEmpty(txConfig, connection, observer) {\n  if (txConfig && !txConfig.isEmpty()) {\n    var error = (0, _error.newError)('Driver is connected to the database that does not support transaction configuration. ' + 'Please upgrade to neo4j 3.5.0 or later in order to use this functionality'); // unsupported API was used, consider this a fatal error for the current connection\n\n    connection._handleFatalError(error);\n\n    observer.onError(error);\n    throw error;\n  }\n}\n/**\r\n * Asserts that the passed-in database name is empty.\r\n * @param {string} database\r\n * @param {Connection} connection\r\n */\n\n\nfunction assertDatabaseIsEmpty(database, connection, observer) {\n  if (database) {\n    var error = (0, _error.newError)('Driver is connected to the database that does not support multiple databases. ' + 'Please upgrade to neo4j 4.0.0 or later in order to use this functionality'); // unsupported API was used, consider this a fatal error for the current connection\n\n    connection._handleFatalError(error);\n\n    observer.onError(error);\n    throw error;\n  }\n}","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/node_modules/neo4j-driver/lib/internal/bolt-protocol-util.js"],"names":["Object","defineProperty","exports","value","assertDatabaseIsEmpty","assertTxConfigIsEmpty","_error","require","_streamObservers","txConfig","connection","observer","isEmpty","error","newError","_handleFatalError","onError","database"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,qBAAR,GAAgCA,qBAAhC;AACAF,OAAO,CAACG,qBAAR,GAAgCA,qBAAhC;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AAEA,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,oBAAD,CAA9B;AAEA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;AAKA,SAASF,qBAAT,CAA+BI,QAA/B,EAAyCC,UAAzC,EAAqDC,QAArD,EAA+D;AAC7D,MAAIF,QAAQ,IAAI,CAACA,QAAQ,CAACG,OAAT,EAAjB,EAAqC;AACnC,QAAIC,KAAK,GAAG,CAAC,GAAGP,MAAM,CAACQ,QAAX,EAAqB,0FAA0F,2EAA/G,CAAZ,CADmC,CACsK;;AAEzMJ,IAAAA,UAAU,CAACK,iBAAX,CAA6BF,KAA7B;;AAEAF,IAAAA,QAAQ,CAACK,OAAT,CAAiBH,KAAjB;AACA,UAAMA,KAAN;AACD;AACF;AACD;;;;;;;AAOA,SAAST,qBAAT,CAA+Ba,QAA/B,EAAyCP,UAAzC,EAAqDC,QAArD,EAA+D;AAC7D,MAAIM,QAAJ,EAAc;AACZ,QAAIJ,KAAK,GAAG,CAAC,GAAGP,MAAM,CAACQ,QAAX,EAAqB,mFAAmF,2EAAxG,CAAZ,CADY,CACsL;;AAElMJ,IAAAA,UAAU,CAACK,iBAAX,CAA6BF,KAA7B;;AAEAF,IAAAA,QAAQ,CAACK,OAAT,CAAiBH,KAAjB;AACA,UAAMA,KAAN;AACD;AACF","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.assertDatabaseIsEmpty = assertDatabaseIsEmpty;\r\nexports.assertTxConfigIsEmpty = assertTxConfigIsEmpty;\r\n\r\nvar _error = require(\"../error\");\r\n\r\nvar _streamObservers = require(\"./stream-observers\");\r\n\r\n/**\r\n * Copyright (c) 2002-2020 \"Neo4j,\"\r\n * Neo4j Sweden AB [http://neo4j.com]\r\n *\r\n * This file is part of Neo4j.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * @param {TxConfig} txConfig the auto-commit transaction configuration.\r\n * @param {Connection} connection the connection.\r\n * @param {ResultStreamObserver} observer the response observer.\r\n */\r\nfunction assertTxConfigIsEmpty(txConfig, connection, observer) {\r\n  if (txConfig && !txConfig.isEmpty()) {\r\n    var error = (0, _error.newError)('Driver is connected to the database that does not support transaction configuration. ' + 'Please upgrade to neo4j 3.5.0 or later in order to use this functionality'); // unsupported API was used, consider this a fatal error for the current connection\r\n\r\n    connection._handleFatalError(error);\r\n\r\n    observer.onError(error);\r\n    throw error;\r\n  }\r\n}\r\n/**\r\n * Asserts that the passed-in database name is empty.\r\n * @param {string} database\r\n * @param {Connection} connection\r\n */\r\n\r\n\r\nfunction assertDatabaseIsEmpty(database, connection, observer) {\r\n  if (database) {\r\n    var error = (0, _error.newError)('Driver is connected to the database that does not support multiple databases. ' + 'Please upgrade to neo4j 4.0.0 or later in order to use this functionality'); // unsupported API was used, consider this a fatal error for the current connection\r\n\r\n    connection._handleFatalError(error);\r\n\r\n    observer.onError(error);\r\n    throw error;\r\n  }\r\n}"]},"metadata":{},"sourceType":"script"}