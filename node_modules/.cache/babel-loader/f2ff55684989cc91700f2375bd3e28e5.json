{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a1ole\\\\Documents\\\\GitHub\\\\neo4jreact\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport RequestHead from \"./RequestHead\";\n\nvar neo4j = require('neo4j-driver');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchDirs = () => {\n      //const { mapCenter, startDate, endDate } = this.state;\n      const session = this.driver.session({\n        defaultAccessMode: neo4j.session.READ\n      });\n      session.run('MATCH (d:Dir) RETURN d', {\n        nameParam: 'Alice'\n      }).subscribe({\n        //onKeys: keys => {\n        //console.log(keys)\n        //},\n        onNext: record => {\n          console.log(this.state.allDirs);\n          this.setState(({\n            allDirs\n          }) => {\n            const newArr = [...allDirs, record.get('d').properties.description];\n            return {\n              dirs: newArr\n            };\n          });\n        },\n        onCompleted: () => {\n          session.close(); // returns a Promise\n        },\n        onError: error => {\n          console.log(error);\n        }\n      });\n    };\n\n    this.state = {\n      allDirs: [],\n      results: []\n    };\n    this.driver = neo4j.driver('bolt://localhost:7687', neo4j.auth.basic('neo4j', 'letmein'));\n    this.fetchDirs();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RequestHead, {\n      addDir: this.addDir,\n      allDirs: this.state.allDirs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/a1ole/Documents/GitHub/neo4jreact/src/App.js"],"names":["React","Component","RequestHead","neo4j","require","App","constructor","props","fetchDirs","session","driver","defaultAccessMode","READ","run","nameParam","subscribe","onNext","record","console","log","state","allDirs","setState","newArr","get","properties","description","dirs","onCompleted","close","onError","error","results","auth","basic","render","addDir"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkBnBC,SAlBmB,GAkBP,MAAM;AAChB;AACA,YAAMC,OAAO,GAAG,KAAKC,MAAL,CAAYD,OAAZ,CAAoB;AAAEE,QAAAA,iBAAiB,EAAER,KAAK,CAACM,OAAN,CAAcG;AAAnC,OAApB,CAAhB;AAEAH,MAAAA,OAAO,CACNI,GADD,CACK,wBADL,EAC+B;AAC7BC,QAAAA,SAAS,EAAE;AADkB,OAD/B,EAICC,SAJD,CAIW;AACT;AACE;AACF;AACAC,QAAAA,MAAM,EAAEC,MAAM,IAAI;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,OAAvB;AAEA,eAAKC,QAAL,CAAc,CAAC;AAAED,YAAAA;AAAF,WAAD,KAAiB;AAC7B,kBAAME,MAAM,GAAG,CAAC,GAAGF,OAAJ,EAAaJ,MAAM,CAACO,GAAP,CAAW,GAAX,EAAgBC,UAAhB,CAA2BC,WAAxC,CAAf;AAEA,mBAAO;AACLC,cAAAA,IAAI,EAAEJ;AADD,aAAP;AAGD,WAND;AAOD,SAdQ;AAeTK,QAAAA,WAAW,EAAE,MAAM;AACjBnB,UAAAA,OAAO,CAACoB,KAAR,GADiB,CACD;AACjB,SAjBQ;AAkBTC,QAAAA,OAAO,EAAEC,KAAK,IAAI;AAChBb,UAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACD;AApBQ,OAJX;AA4BD,KAlDkB;;AAGjB,SAAKX,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXW,MAAAA,OAAO,EAAE;AAFE,KAAb;AAMA,SAAKtB,MAAL,GAAcP,KAAK,CAACO,MAAN,CACZ,uBADY,EAEZP,KAAK,CAAC8B,IAAN,CAAWC,KAAX,CAAiB,OAAjB,EAA0B,SAA1B,CAFY,CAAd;AAKA,SAAK1B,SAAL;AAED;;AAoCD2B,EAAAA,MAAM,GAAG;AACL,wBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKC,MAA1B;AAAkC,MAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWC,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFA;AASH;;AA/DyB;;AAkE5B,eAAehB,GAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport './App.css';\r\nimport RequestHead from \"./RequestHead\";\r\n\r\nvar neo4j = require('neo4j-driver')\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      allDirs: [],\r\n      results: [],\r\n\r\n    };\r\n    \r\n    this.driver = neo4j.driver(\r\n      'bolt://localhost:7687',\r\n      neo4j.auth.basic('neo4j', 'letmein')\r\n    )\r\n\r\n    this.fetchDirs();\r\n\r\n  }\r\n  \r\n  fetchDirs = () => {\r\n    //const { mapCenter, startDate, endDate } = this.state;\r\n    const session = this.driver.session({ defaultAccessMode: neo4j.session.READ });\r\n    \r\n    session\r\n    .run('MATCH (d:Dir) RETURN d', {\r\n      nameParam: 'Alice'\r\n    })\r\n    .subscribe({\r\n      //onKeys: keys => {\r\n        //console.log(keys)\r\n      //},\r\n      onNext: record => {\r\n        console.log(this.state.allDirs);\r\n\r\n        this.setState(({ allDirs }) => {\r\n          const newArr = [...allDirs, record.get('d').properties.description];\r\n    \r\n          return {\r\n            dirs: newArr\r\n          };\r\n        });\r\n      },\r\n      onCompleted: () => {\r\n        session.close() // returns a Promise\r\n      },\r\n      onError: error => {\r\n        console.log(error)\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n  \r\n  render() {\r\n      return (\r\n      \r\n      <main>        \r\n        <RequestHead addDir={this.addDir} allDirs={this.state.allDirs}/>\r\n        {/* <ResponseBody /> */}\r\n        \r\n      </main>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}